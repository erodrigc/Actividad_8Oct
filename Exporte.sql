/*
Navicat Oracle Data Transfer
Oracle Client Version : 10.2.0.5.0

Source Server         : OracleLinux
Source Server Version : 110200
Source Host           : 172.17.0.1:49161
Source Schema         : SYSTEM

Target Server Type    : ORACLE
Target Server Version : 110200
File Encoding         : 65001

Date: 2017-11-19 00:25:20
*/


-- ----------------------------
-- Table structure for AQ$_INTERNET_AGENT_PRIVS
-- ----------------------------
DROP TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS";
CREATE TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS" (
"AGENT_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"DB_USERNAME" VARCHAR2(30 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for AQ$_INTERNET_AGENTS
-- ----------------------------
DROP TABLE "SYSTEM"."AQ$_INTERNET_AGENTS";
CREATE TABLE "SYSTEM"."AQ$_INTERNET_AGENTS" (
"AGENT_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"PROTOCOL" NUMBER NOT NULL ,
"SPARE1" VARCHAR2(128 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for AQ$_QUEUE_TABLES
-- ----------------------------
DROP TABLE "SYSTEM"."AQ$_QUEUE_TABLES";
CREATE TABLE "SYSTEM"."AQ$_QUEUE_TABLES" (
"SCHEMA" VARCHAR2(30 BYTE) NOT NULL ,
"NAME" VARCHAR2(30 BYTE) NOT NULL ,
"UDATA_TYPE" NUMBER NOT NULL ,
"OBJNO" NUMBER NOT NULL ,
"FLAGS" NUMBER NOT NULL ,
"SORT_COLS" NUMBER NOT NULL ,
"TIMEZONE" VARCHAR2(64 BYTE) NULL ,
"TABLE_COMMENT" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for AQ$_QUEUES
-- ----------------------------
DROP TABLE "SYSTEM"."AQ$_QUEUES";
CREATE TABLE "SYSTEM"."AQ$_QUEUES" (
"OID" RAW(16) NOT NULL ,
"EVENTID" NUMBER NOT NULL ,
"NAME" VARCHAR2(30 BYTE) NOT NULL ,
"TABLE_OBJNO" NUMBER NOT NULL ,
"USAGE" NUMBER NOT NULL ,
"ENABLE_FLAG" NUMBER NOT NULL ,
"MAX_RETRIES" NUMBER NULL ,
"RETRY_DELAY" NUMBER NULL ,
"PROPERTIES" NUMBER NULL ,
"RET_TIME" NUMBER NULL ,
"QUEUE_COMMENT" VARCHAR2(2000 BYTE) NULL ,
"SUBSCRIBERS" "SYS"."AQ$_SUBSCRIBERS" NULL ,
"MEMORY_THRESHOLD" NUMBER NULL ,
"SERVICE_NAME" VARCHAR2(64 BYTE) NULL ,
"NETWORK_NAME" VARCHAR2(256 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for AQ$_SCHEDULES
-- ----------------------------
DROP TABLE "SYSTEM"."AQ$_SCHEDULES";
CREATE TABLE "SYSTEM"."AQ$_SCHEDULES" (
"OID" RAW(16) NOT NULL ,
"DESTINATION" VARCHAR2(128 BYTE) NOT NULL ,
"START_TIME" DATE NULL ,
"DURATION" VARCHAR2(8 BYTE) NULL ,
"NEXT_TIME" VARCHAR2(128 BYTE) NULL ,
"LATENCY" VARCHAR2(8 BYTE) NULL ,
"LAST_TIME" DATE NULL ,
"JOBNO" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Customers
-- ----------------------------
DROP TABLE "SYSTEM"."Customers";
CREATE TABLE "SYSTEM"."Customers" (
"id" NUMBER NOT NULL ,
"name" VARCHAR2(255 BYTE) NULL ,
"address" VARCHAR2(255 BYTE) NULL ,
"phone_number" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for DEF$_AQCALL
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_AQCALL";
CREATE TABLE "SYSTEM"."DEF$_AQCALL" (
"Q_NAME" VARCHAR2(30 BYTE) NULL ,
"MSGID" RAW(16) NULL ,
"CORRID" VARCHAR2(128 BYTE) NULL ,
"PRIORITY" NUMBER NULL ,
"STATE" NUMBER NULL ,
"DELAY" TIMESTAMP(6)  NULL ,
"EXPIRATION" NUMBER NULL ,
"TIME_MANAGER_INFO" TIMESTAMP(6)  NULL ,
"LOCAL_ORDER_NO" NUMBER NULL ,
"CHAIN_NO" NUMBER NULL ,
"CSCN" NUMBER NULL ,
"DSCN" NUMBER NULL ,
"ENQ_TIME" TIMESTAMP(6)  NULL ,
"ENQ_UID" NUMBER NULL ,
"ENQ_TID" VARCHAR2(30 BYTE) NOT NULL ,
"DEQ_TIME" TIMESTAMP(6)  NULL ,
"DEQ_UID" NUMBER NULL ,
"DEQ_TID" VARCHAR2(30 BYTE) NULL ,
"RETRY_COUNT" NUMBER NULL ,
"EXCEPTION_QSCHEMA" VARCHAR2(30 BYTE) NULL ,
"EXCEPTION_QUEUE" VARCHAR2(30 BYTE) NULL ,
"STEP_NO" NUMBER NOT NULL ,
"RECIPIENT_KEY" NUMBER NULL ,
"DEQUEUE_MSGID" RAW(16) NULL ,
"USER_DATA" BLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for DEF$_AQERROR
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_AQERROR";
CREATE TABLE "SYSTEM"."DEF$_AQERROR" (
"Q_NAME" VARCHAR2(30 BYTE) NULL ,
"MSGID" RAW(16) NULL ,
"CORRID" VARCHAR2(128 BYTE) NULL ,
"PRIORITY" NUMBER NULL ,
"STATE" NUMBER NULL ,
"DELAY" TIMESTAMP(6)  NULL ,
"EXPIRATION" NUMBER NULL ,
"TIME_MANAGER_INFO" TIMESTAMP(6)  NULL ,
"LOCAL_ORDER_NO" NUMBER NULL ,
"CHAIN_NO" NUMBER NULL ,
"CSCN" NUMBER NULL ,
"DSCN" NUMBER NULL ,
"ENQ_TIME" TIMESTAMP(6)  NULL ,
"ENQ_UID" NUMBER NULL ,
"ENQ_TID" VARCHAR2(30 BYTE) NOT NULL ,
"DEQ_TIME" TIMESTAMP(6)  NULL ,
"DEQ_UID" NUMBER NULL ,
"DEQ_TID" VARCHAR2(30 BYTE) NULL ,
"RETRY_COUNT" NUMBER NULL ,
"EXCEPTION_QSCHEMA" VARCHAR2(30 BYTE) NULL ,
"EXCEPTION_QUEUE" VARCHAR2(30 BYTE) NULL ,
"STEP_NO" NUMBER NOT NULL ,
"RECIPIENT_KEY" NUMBER NULL ,
"DEQUEUE_MSGID" RAW(16) NULL ,
"USER_DATA" BLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for DEF$_CALLDEST
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_CALLDEST";
CREATE TABLE "SYSTEM"."DEF$_CALLDEST" (
"ENQ_TID" VARCHAR2(22 BYTE) NOT NULL ,
"STEP_NO" NUMBER NOT NULL ,
"DBLINK" VARCHAR2(128 BYTE) NOT NULL ,
"SCHEMA_NAME" VARCHAR2(30 BYTE) NULL ,
"PACKAGE_NAME" VARCHAR2(30 BYTE) NULL ,
"CATCHUP" RAW(16) DEFAULT '00'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."DEF$_CALLDEST" IS 'Information about call destinations for D-type and error transactions';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."ENQ_TID" IS 'Transaction ID';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."STEP_NO" IS 'Unique ID of call within transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."DBLINK" IS 'The destination database';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."SCHEMA_NAME" IS 'The schema of the deferred remote procedure call';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."PACKAGE_NAME" IS 'The package of the deferred remote procedure call';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."CATCHUP" IS 'Dummy column for foreign key';

-- ----------------------------
-- Table structure for DEF$_DEFAULTDEST
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_DEFAULTDEST";
CREATE TABLE "SYSTEM"."DEF$_DEFAULTDEST" (
"DBLINK" VARCHAR2(128 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."DEF$_DEFAULTDEST" IS 'Default destinations for deferred remote procedure calls';
COMMENT ON COLUMN "SYSTEM"."DEF$_DEFAULTDEST"."DBLINK" IS 'Default destination';

-- ----------------------------
-- Table structure for DEF$_DESTINATION
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_DESTINATION";
CREATE TABLE "SYSTEM"."DEF$_DESTINATION" (
"DBLINK" VARCHAR2(128 BYTE) NOT NULL ,
"LAST_DELIVERED" NUMBER DEFAULT 0  NOT NULL ,
"LAST_ENQ_TID" VARCHAR2(22 BYTE) NULL ,
"LAST_SEQ" NUMBER NULL ,
"DISABLED" CHAR(1 BYTE) NULL ,
"JOB" NUMBER NULL ,
"LAST_TXN_COUNT" NUMBER NULL ,
"LAST_ERROR_NUMBER" NUMBER NULL ,
"LAST_ERROR_MESSAGE" VARCHAR2(2000 BYTE) NULL ,
"APPLY_INIT" VARCHAR2(4000 BYTE) NULL ,
"CATCHUP" RAW(16) DEFAULT '00'  NOT NULL ,
"ALTERNATE" CHAR(1 BYTE) DEFAULT 'F'  NULL ,
"TOTAL_TXN_COUNT" NUMBER DEFAULT 0  NULL ,
"TOTAL_PROP_TIME_THROUGHPUT" NUMBER DEFAULT 0  NULL ,
"TOTAL_PROP_TIME_LATENCY" NUMBER DEFAULT 0  NULL ,
"TO_COMMUNICATION_SIZE" NUMBER DEFAULT 0  NULL ,
"FROM_COMMUNICATION_SIZE" NUMBER DEFAULT 0  NULL ,
"FLAG" RAW(4) DEFAULT '00000000'  NULL ,
"SPARE1" NUMBER DEFAULT 0  NULL ,
"SPARE2" NUMBER DEFAULT 0  NULL ,
"SPARE3" NUMBER DEFAULT 0  NULL ,
"SPARE4" NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."DEF$_DESTINATION" IS 'Information about propagation to different destinations';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."DBLINK" IS 'Destination';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_DELIVERED" IS 'Value of delivery_order of last transaction propagated';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_ENQ_TID" IS 'Transaction ID of last transaction propagated';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_SEQ" IS 'Parallel prop seq number of last transaction propagated';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."DISABLED" IS 'Is propagation to destination disabled';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."JOB" IS 'Number of job that pushes queue';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_TXN_COUNT" IS 'Number of transactions pushed during last attempt';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_ERROR_NUMBER" IS 'Oracle error number from last push';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_ERROR_MESSAGE" IS 'Error message from last push';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."CATCHUP" IS 'Used to break transaction into pieces';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."ALTERNATE" IS 'Used to break transaction into pieces';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."TOTAL_TXN_COUNT" IS 'Total number of transactions pushed';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."TOTAL_PROP_TIME_THROUGHPUT" IS 'Total propagation time in seconds for measuring throughput';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."TOTAL_PROP_TIME_LATENCY" IS 'Total propagation time in seconds for measuring latency';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."TO_COMMUNICATION_SIZE" IS 'Total number of bytes sent to this dblink';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."FROM_COMMUNICATION_SIZE" IS 'Total number of bytes received from this dblink';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."SPARE1" IS 'Total number of round trips for this dblink';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."SPARE2" IS 'Total number of administrative requests';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."SPARE3" IS 'Total number of error transactions pushed';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."SPARE4" IS 'Total time in seconds spent sleeping during push';

-- ----------------------------
-- Table structure for DEF$_ERROR
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_ERROR";
CREATE TABLE "SYSTEM"."DEF$_ERROR" (
"ENQ_TID" VARCHAR2(22 BYTE) NOT NULL ,
"ORIGIN_TRAN_DB" VARCHAR2(128 BYTE) NULL ,
"ORIGIN_ENQ_TID" VARCHAR2(22 BYTE) NULL ,
"DESTINATION" VARCHAR2(128 BYTE) NULL ,
"STEP_NO" NUMBER NULL ,
"RECEIVER" NUMBER NULL ,
"ENQ_TIME" DATE NULL ,
"ERROR_NUMBER" NUMBER NULL ,
"ERROR_MSG" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."DEF$_ERROR" IS 'Information about all deferred transactions that caused an error';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ENQ_TID" IS 'The ID of the transaction that created the error';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ORIGIN_TRAN_DB" IS 'The database originating the deferred transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ORIGIN_ENQ_TID" IS 'The original ID of the transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."DESTINATION" IS 'Database link used to address destination';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."STEP_NO" IS 'Unique ID of call that caused an error';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."RECEIVER" IS 'User ID of the original receiver';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ENQ_TIME" IS 'Time original transaction enqueued';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ERROR_NUMBER" IS 'Oracle error number';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ERROR_MSG" IS 'Error message text';

-- ----------------------------
-- Table structure for DEF$_LOB
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_LOB";
CREATE TABLE "SYSTEM"."DEF$_LOB" (
"ID" RAW(16) NOT NULL ,
"ENQ_TID" VARCHAR2(22 BYTE) NULL ,
"BLOB_COL" BLOB NULL ,
"CLOB_COL" CLOB NULL ,
"NCLOB_COL" NCLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."DEF$_LOB" IS 'Storage for LOB parameters to deferred RPCs';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."ID" IS 'Identifier of LOB parameter';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."ENQ_TID" IS 'Transaction identifier for deferred RPC with this LOB parameter';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."BLOB_COL" IS 'Binary LOB parameter';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."CLOB_COL" IS 'Character LOB parameter';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."NCLOB_COL" IS 'National Character LOB parameter';

-- ----------------------------
-- Table structure for DEF$_ORIGIN
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_ORIGIN";
CREATE TABLE "SYSTEM"."DEF$_ORIGIN" (
"ORIGIN_DB" VARCHAR2(128 BYTE) NULL ,
"ORIGIN_DBLINK" VARCHAR2(128 BYTE) NULL ,
"INUSR" NUMBER NULL ,
"CSCN" NUMBER NULL ,
"ENQ_TID" VARCHAR2(22 BYTE) NULL ,
"RECO_SEQ_NO" NUMBER NULL ,
"CATCHUP" RAW(16) DEFAULT '00'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."DEF$_ORIGIN" IS 'Information about deferred transactions pushed to this site';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."ORIGIN_DB" IS 'Originating database for the deferred transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."ORIGIN_DBLINK" IS 'Database link from deferred transaction origin to this site';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."INUSR" IS 'Connected user receiving the deferred transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."CSCN" IS 'Prepare SCN assigned at origin site';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."ENQ_TID" IS 'Transaction id assigned at origin site';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."RECO_SEQ_NO" IS 'Deferred transaction sequence number for recovery';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."CATCHUP" IS 'Used to break transaction into pieces';

-- ----------------------------
-- Table structure for DEF$_PROPAGATOR
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_PROPAGATOR";
CREATE TABLE "SYSTEM"."DEF$_PROPAGATOR" (
"USERID" NUMBER NOT NULL ,
"USERNAME" VARCHAR2(30 BYTE) NOT NULL ,
"CREATED" DATE DEFAULT SYSDATE  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."DEF$_PROPAGATOR" IS 'The propagator for deferred remote procedure calls';
COMMENT ON COLUMN "SYSTEM"."DEF$_PROPAGATOR"."USERID" IS 'User ID of the propagator';
COMMENT ON COLUMN "SYSTEM"."DEF$_PROPAGATOR"."USERNAME" IS 'User name of the propagator';
COMMENT ON COLUMN "SYSTEM"."DEF$_PROPAGATOR"."CREATED" IS 'The time when the propagator is registered';

-- ----------------------------
-- Table structure for DEF$_PUSHED_TRANSACTIONS
-- ----------------------------
DROP TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS";
CREATE TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS" (
"SOURCE_SITE_ID" NUMBER NOT NULL ,
"LAST_TRAN_ID" NUMBER DEFAULT 0  NULL ,
"DISABLED" VARCHAR2(1 BYTE) DEFAULT 'F'  NULL ,
"SOURCE_SITE" VARCHAR2(128 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS" IS 'Information about deferred transactions pushed to this site by RepAPI clients';
COMMENT ON COLUMN "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"."SOURCE_SITE_ID" IS 'Originating database identifier for the deferred transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"."LAST_TRAN_ID" IS 'Last committed transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"."DISABLED" IS 'Disable propagation';
COMMENT ON COLUMN "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"."SOURCE_SITE" IS 'Obsolete - do not use';

-- ----------------------------
-- Table structure for HELP
-- ----------------------------
DROP TABLE "SYSTEM"."HELP";
CREATE TABLE "SYSTEM"."HELP" (
"TOPIC" VARCHAR2(50 BYTE) NOT NULL ,
"SEQ" NUMBER NOT NULL ,
"INFO" VARCHAR2(80 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Historical_Vehicles
-- ----------------------------
DROP TABLE "SYSTEM"."Historical_Vehicles";
CREATE TABLE "SYSTEM"."Historical_Vehicles" (
"id" NUMBER NOT NULL ,
"date" TIMESTAMP (2) WITH LOCAL TIME ZONE NOT NULL ,
"vehicle_id" NUMBER NULL ,
"invoice_id" NUMBER NULL ,
"Transaction" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Invoice_Details
-- ----------------------------
DROP TABLE "SYSTEM"."Invoice_Details";
CREATE TABLE "SYSTEM"."Invoice_Details" (
"id" NUMBER NOT NULL ,
"invoice_id" NUMBER NOT NULL ,
"option_id" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Invoices
-- ----------------------------
DROP TABLE "SYSTEM"."Invoices";
CREATE TABLE "SYSTEM"."Invoices" (
"id" NUMBER NOT NULL ,
"date" TIMESTAMP (2) WITH LOCAL TIME ZONE NOT NULL ,
"vehicle_id" NUMBER NOT NULL ,
"customer_id" NUMBER NOT NULL ,
"salesperson_id" NUMBER NOT NULL ,
"tradeinvehicle_id" NUMBER NULL ,
"subtotal" NUMBER(15,2) NULL ,
"taxes" NUMBER(15,2) NULL ,
"license_feed" NUMBER(15,2) NULL ,
"total_options" NUMBER(15,2) NULL ,
"total" NUMBER(15,2) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_AGE_SPILL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_AGE_SPILL$";
CREATE TABLE "SYSTEM"."LOGMNR_AGE_SPILL$" (
"SESSION#" NUMBER NOT NULL ,
"XIDUSN" NUMBER NOT NULL ,
"XIDSLT" NUMBER NOT NULL ,
"XIDSQN" NUMBER NOT NULL ,
"CHUNK" NUMBER NOT NULL ,
"SEQUENCE#" NUMBER NOT NULL ,
"OFFSET" NUMBER NULL ,
"SPILL_DATA" BLOB NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_ATTRCOL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_ATTRCOL$";
CREATE TABLE "SYSTEM"."LOGMNR_ATTRCOL$" (
"INTCOL#" NUMBER NULL ,
"NAME" VARCHAR2(4000 BYTE) NULL ,
"OBJ#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_ATTRIBUTE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_ATTRIBUTE$";
CREATE TABLE "SYSTEM"."LOGMNR_ATTRIBUTE$" (
"VERSION#" NUMBER NULL ,
"NAME" VARCHAR2(30 BYTE) NULL ,
"ATTRIBUTE#" NUMBER NULL ,
"ATTR_TOID" RAW(16) NULL ,
"ATTR_VERSION#" NUMBER NULL ,
"SYNOBJ#" NUMBER NULL ,
"PROPERTIES" NUMBER NULL ,
"CHARSETID" NUMBER NULL ,
"CHARSETFORM" NUMBER NULL ,
"LENGTH" NUMBER NULL ,
"PRECISION#" NUMBER NULL ,
"SCALE" NUMBER NULL ,
"EXTERNNAME" VARCHAR2(4000 BYTE) NULL ,
"XFLAGS" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"SPARE4" NUMBER NULL ,
"SPARE5" NUMBER NULL ,
"SETTER" NUMBER NULL ,
"GETTER" NUMBER NULL ,
"TOID" RAW(16) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_CCOL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_CCOL$";
CREATE TABLE "SYSTEM"."LOGMNR_CCOL$" (
"CON#" NUMBER NULL ,
"OBJ#" NUMBER NULL ,
"COL#" NUMBER NULL ,
"POS#" NUMBER NULL ,
"INTCOL#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_CDEF$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_CDEF$";
CREATE TABLE "SYSTEM"."LOGMNR_CDEF$" (
"CON#" NUMBER NULL ,
"COLS" NUMBER NULL ,
"TYPE#" NUMBER NULL ,
"ROBJ#" NUMBER NULL ,
"RCON#" NUMBER NULL ,
"ENABLED" NUMBER NULL ,
"DEFER" NUMBER NULL ,
"OBJ#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_COL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_COL$";
CREATE TABLE "SYSTEM"."LOGMNR_COL$" (
"COL#" NUMBER(22) NULL ,
"SEGCOL#" NUMBER(22) NULL ,
"NAME" VARCHAR2(30 BYTE) NULL ,
"TYPE#" NUMBER(22) NULL ,
"LENGTH" NUMBER(22) NULL ,
"PRECISION#" NUMBER(22) NULL ,
"SCALE" NUMBER(22) NULL ,
"NULL$" NUMBER(22) NULL ,
"INTCOL#" NUMBER(22) NULL ,
"PROPERTY" NUMBER(22) NULL ,
"CHARSETID" NUMBER(22) NULL ,
"CHARSETFORM" NUMBER(22) NULL ,
"SPARE1" NUMBER(22) NULL ,
"SPARE2" NUMBER(22) NULL ,
"OBJ#" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_COLTYPE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_COLTYPE$";
CREATE TABLE "SYSTEM"."LOGMNR_COLTYPE$" (
"COL#" NUMBER NULL ,
"INTCOL#" NUMBER NULL ,
"TOID" RAW(16) NULL ,
"VERSION#" NUMBER NULL ,
"PACKED" NUMBER NULL ,
"INTCOLS" NUMBER NULL ,
"INTCOL#S" RAW(2000) NULL ,
"FLAGS" NUMBER NULL ,
"TYPIDCOL#" NUMBER NULL ,
"SYNOBJ#" NUMBER NULL ,
"OBJ#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_DICTIONARY$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_DICTIONARY$";
CREATE TABLE "SYSTEM"."LOGMNR_DICTIONARY$" (
"DB_NAME" VARCHAR2(9 BYTE) NULL ,
"DB_ID" NUMBER(20) NULL ,
"DB_CREATED" VARCHAR2(20 BYTE) NULL ,
"DB_DICT_CREATED" VARCHAR2(20 BYTE) NULL ,
"DB_DICT_SCN" NUMBER(22) NULL ,
"DB_THREAD_MAP" RAW(8) NULL ,
"DB_TXN_SCNBAS" NUMBER(22) NULL ,
"DB_TXN_SCNWRP" NUMBER(22) NULL ,
"DB_RESETLOGS_CHANGE#" NUMBER(22) NULL ,
"DB_RESETLOGS_TIME" VARCHAR2(20 BYTE) NULL ,
"DB_VERSION_TIME" VARCHAR2(20 BYTE) NULL ,
"DB_REDO_TYPE_ID" VARCHAR2(8 BYTE) NULL ,
"DB_REDO_RELEASE" VARCHAR2(60 BYTE) NULL ,
"DB_CHARACTER_SET" VARCHAR2(30 BYTE) NULL ,
"DB_VERSION" VARCHAR2(64 BYTE) NULL ,
"DB_STATUS" VARCHAR2(64 BYTE) NULL ,
"DB_GLOBAL_NAME" VARCHAR2(128 BYTE) NULL ,
"DB_DICT_MAXOBJECTS" NUMBER(22) NULL ,
"DB_DICT_OBJECTCOUNT" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_DICTSTATE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_DICTSTATE$";
CREATE TABLE "SYSTEM"."LOGMNR_DICTSTATE$" (
"LOGMNR_UID" NUMBER(22) NULL ,
"START_SCNBAS" NUMBER NULL ,
"START_SCNWRP" NUMBER NULL ,
"END_SCNBAS" NUMBER NULL ,
"END_SCNWRP" NUMBER NULL ,
"REDO_THREAD" NUMBER NULL ,
"RBASQN" NUMBER NULL ,
"RBABLK" NUMBER NULL ,
"RBABYTE" NUMBER NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_ENC$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_ENC$";
CREATE TABLE "SYSTEM"."LOGMNR_ENC$" (
"OBJ#" NUMBER NULL ,
"OWNER#" NUMBER NULL ,
"ENCALG" NUMBER NULL ,
"INTALG" NUMBER NULL ,
"COLKLC" RAW(2000) NULL ,
"KLCLEN" NUMBER NULL ,
"FLAG" NUMBER NULL ,
"MKEYID" VARCHAR2(64 BYTE) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_ERROR$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_ERROR$";
CREATE TABLE "SYSTEM"."LOGMNR_ERROR$" (
"SESSION#" NUMBER NULL ,
"TIME_OF_ERROR" DATE NULL ,
"CODE" NUMBER NULL ,
"MESSAGE" VARCHAR2(4000 BYTE) NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"SPARE4" VARCHAR2(4000 BYTE) NULL ,
"SPARE5" VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_FILTER$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_FILTER$";
CREATE TABLE "SYSTEM"."LOGMNR_FILTER$" (
"SESSION#" NUMBER NULL ,
"FILTER_TYPE" VARCHAR2(30 BYTE) NULL ,
"ATTR1" NUMBER NULL ,
"ATTR2" NUMBER NULL ,
"ATTR3" NUMBER NULL ,
"ATTR4" NUMBER NULL ,
"ATTR5" NUMBER NULL ,
"ATTR6" NUMBER NULL ,
"FILTER_SCN" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_GLOBAL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_GLOBAL$";
CREATE TABLE "SYSTEM"."LOGMNR_GLOBAL$" (
"HIGH_RECID_FOREIGN" NUMBER NULL ,
"HIGH_RECID_DELETED" NUMBER NULL ,
"LOCAL_RESET_SCN" NUMBER NULL ,
"LOCAL_RESET_TIMESTAMP" NUMBER NULL ,
"VERSION_TIMESTAMP" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"SPARE4" VARCHAR2(2000 BYTE) NULL ,
"SPARE5" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_GT_TAB_INCLUDE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_GT_TAB_INCLUDE$";
CREATE TABLE "SYSTEM"."LOGMNR_GT_TAB_INCLUDE$" (
"SCHEMA_NAME" VARCHAR2(32 BYTE) NULL ,
"TABLE_NAME" VARCHAR2(32 BYTE) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_GT_USER_INCLUDE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_GT_USER_INCLUDE$";
CREATE TABLE "SYSTEM"."LOGMNR_GT_USER_INCLUDE$" (
"USER_NAME" VARCHAR2(32 BYTE) NULL ,
"USER_TYPE" NUMBER NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_GT_XID_INCLUDE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_GT_XID_INCLUDE$";
CREATE TABLE "SYSTEM"."LOGMNR_GT_XID_INCLUDE$" (
"XIDUSN" NUMBER NULL ,
"XIDSLT" NUMBER NULL ,
"XIDSQN" NUMBER NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_ICOL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_ICOL$";
CREATE TABLE "SYSTEM"."LOGMNR_ICOL$" (
"OBJ#" NUMBER NULL ,
"BO#" NUMBER NULL ,
"COL#" NUMBER NULL ,
"POS#" NUMBER NULL ,
"SEGCOL#" NUMBER NULL ,
"INTCOL#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_IND$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_IND$";
CREATE TABLE "SYSTEM"."LOGMNR_IND$" (
"BO#" NUMBER(22) NULL ,
"COLS" NUMBER(22) NULL ,
"TYPE#" NUMBER(22) NULL ,
"FLAGS" NUMBER NULL ,
"PROPERTY" NUMBER NULL ,
"OBJ#" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_INDCOMPART$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_INDCOMPART$";
CREATE TABLE "SYSTEM"."LOGMNR_INDCOMPART$" (
"OBJ#" NUMBER NULL ,
"DATAOBJ#" NUMBER NULL ,
"BO#" NUMBER NULL ,
"PART#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_INDPART$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_INDPART$";
CREATE TABLE "SYSTEM"."LOGMNR_INDPART$" (
"OBJ#" NUMBER NULL ,
"BO#" NUMBER NULL ,
"PART#" NUMBER NULL ,
"TS#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_INDSUBPART$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_INDSUBPART$";
CREATE TABLE "SYSTEM"."LOGMNR_INDSUBPART$" (
"OBJ#" NUMBER(22) NULL ,
"DATAOBJ#" NUMBER(22) NULL ,
"POBJ#" NUMBER(22) NULL ,
"SUBPART#" NUMBER(22) NULL ,
"TS#" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_INTEGRATED_SPILL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_INTEGRATED_SPILL$";
CREATE TABLE "SYSTEM"."LOGMNR_INTEGRATED_SPILL$" (
"SESSION#" NUMBER NOT NULL ,
"XIDUSN" NUMBER NOT NULL ,
"XIDSLT" NUMBER NOT NULL ,
"XIDSQN" NUMBER NOT NULL ,
"CHUNK" NUMBER NOT NULL ,
"FLAG" NUMBER NOT NULL ,
"CTIME" DATE NULL ,
"MTIME" DATE NULL ,
"SPILL_DATA" BLOB NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"SPARE4" DATE NULL ,
"SPARE5" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_KOPM$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_KOPM$";
CREATE TABLE "SYSTEM"."LOGMNR_KOPM$" (
"LENGTH" NUMBER NULL ,
"METADATA" RAW(255) NULL ,
"NAME" VARCHAR2(30 BYTE) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_LOB$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_LOB$";
CREATE TABLE "SYSTEM"."LOGMNR_LOB$" (
"OBJ#" NUMBER NULL ,
"INTCOL#" NUMBER NULL ,
"COL#" NUMBER NULL ,
"LOBJ#" NUMBER NULL ,
"CHUNK" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_LOBFRAG$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_LOBFRAG$";
CREATE TABLE "SYSTEM"."LOGMNR_LOBFRAG$" (
"FRAGOBJ#" NUMBER NULL ,
"PARENTOBJ#" NUMBER NULL ,
"TABFRAGOBJ#" NUMBER NULL ,
"INDFRAGOBJ#" NUMBER NULL ,
"FRAG#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_LOG$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_LOG$";
CREATE TABLE "SYSTEM"."LOGMNR_LOG$" (
"SESSION#" NUMBER NOT NULL ,
"THREAD#" NUMBER NOT NULL ,
"SEQUENCE#" NUMBER NOT NULL ,
"FIRST_CHANGE#" NUMBER NOT NULL ,
"NEXT_CHANGE#" NUMBER NULL ,
"FIRST_TIME" DATE NULL ,
"NEXT_TIME" DATE NULL ,
"FILE_NAME" VARCHAR2(513 BYTE) NULL ,
"STATUS" NUMBER NULL ,
"INFO" VARCHAR2(32 BYTE) NULL ,
"TIMESTAMP" DATE NULL ,
"DICT_BEGIN" VARCHAR2(3 BYTE) NULL ,
"DICT_END" VARCHAR2(3 BYTE) NULL ,
"STATUS_INFO" VARCHAR2(32 BYTE) NULL ,
"DB_ID" NUMBER NOT NULL ,
"RESETLOGS_CHANGE#" NUMBER NOT NULL ,
"RESET_TIMESTAMP" NUMBER NOT NULL ,
"PREV_RESETLOGS_CHANGE#" NUMBER NULL ,
"PREV_RESET_TIMESTAMP" NUMBER NULL ,
"BLOCKS" NUMBER NULL ,
"BLOCK_SIZE" NUMBER NULL ,
"FLAGS" NUMBER NULL ,
"CONTENTS" NUMBER NULL ,
"RECID" NUMBER NULL ,
"RECSTAMP" NUMBER NULL ,
"MARK_DELETE_TIMESTAMP" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"SPARE4" NUMBER NULL ,
"SPARE5" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_LOGMNR_BUILDLOG
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_LOGMNR_BUILDLOG";
CREATE TABLE "SYSTEM"."LOGMNR_LOGMNR_BUILDLOG" (
"BUILD_DATE" VARCHAR2(20 BYTE) NULL ,
"DB_TXN_SCNBAS" NUMBER NULL ,
"DB_TXN_SCNWRP" NUMBER NULL ,
"CURRENT_BUILD_STATE" NUMBER NULL ,
"COMPLETION_STATUS" NUMBER NULL ,
"MARKED_LOG_FILE_LOW_SCN" NUMBER NULL ,
"INITIAL_XID" VARCHAR2(22 BYTE) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_NTAB$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_NTAB$";
CREATE TABLE "SYSTEM"."LOGMNR_NTAB$" (
"COL#" NUMBER NULL ,
"INTCOL#" NUMBER NULL ,
"NTAB#" NUMBER NULL ,
"NAME" VARCHAR2(4000 BYTE) NULL ,
"OBJ#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_OBJ$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_OBJ$";
CREATE TABLE "SYSTEM"."LOGMNR_OBJ$" (
"OBJV#" NUMBER(22) NULL ,
"OWNER#" NUMBER(22) NULL ,
"NAME" VARCHAR2(30 BYTE) NULL ,
"NAMESPACE" NUMBER(22) NULL ,
"SUBNAME" VARCHAR2(30 BYTE) NULL ,
"TYPE#" NUMBER(22) NULL ,
"OID$" RAW(16) NULL ,
"REMOTEOWNER" VARCHAR2(30 BYTE) NULL ,
"LINKNAME" VARCHAR2(128 BYTE) NULL ,
"FLAGS" NUMBER(22) NULL ,
"SPARE3" NUMBER(22) NULL ,
"STIME" DATE NULL ,
"OBJ#" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL ,
"START_SCNBAS" NUMBER NULL ,
"START_SCNWRP" NUMBER NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_OPQTYPE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_OPQTYPE$";
CREATE TABLE "SYSTEM"."LOGMNR_OPQTYPE$" (
"INTCOL#" NUMBER NOT NULL ,
"TYPE" NUMBER NULL ,
"FLAGS" NUMBER NULL ,
"LOBCOL" NUMBER NULL ,
"OBJCOL" NUMBER NULL ,
"EXTRACOL" NUMBER NULL ,
"SCHEMAOID" RAW(16) NULL ,
"ELEMNUM" NUMBER NULL ,
"SCHEMAURL" VARCHAR2(4000 BYTE) NULL ,
"OBJ#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_PARAMETER$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_PARAMETER$";
CREATE TABLE "SYSTEM"."LOGMNR_PARAMETER$" (
"SESSION#" NUMBER NOT NULL ,
"NAME" VARCHAR2(30 BYTE) NOT NULL ,
"VALUE" VARCHAR2(2000 BYTE) NULL ,
"TYPE" NUMBER NULL ,
"SCN" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_PARTOBJ$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_PARTOBJ$";
CREATE TABLE "SYSTEM"."LOGMNR_PARTOBJ$" (
"PARTTYPE" NUMBER NULL ,
"PARTCNT" NUMBER NULL ,
"PARTKEYCOLS" NUMBER NULL ,
"FLAGS" NUMBER NULL ,
"DEFTS#" NUMBER NULL ,
"DEFPCTFREE" NUMBER NULL ,
"DEFPCTUSED" NUMBER NULL ,
"DEFPCTTHRES" NUMBER NULL ,
"DEFINITRANS" NUMBER NULL ,
"DEFMAXTRANS" NUMBER NULL ,
"DEFTINIEXTS" NUMBER NULL ,
"DEFEXTSIZE" NUMBER NULL ,
"DEFMINEXTS" NUMBER NULL ,
"DEFMAXEXTS" NUMBER NULL ,
"DEFEXTPCT" NUMBER NULL ,
"DEFLISTS" NUMBER NULL ,
"DEFGROUPS" NUMBER NULL ,
"DEFLOGGING" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"DEFINCLCOL" NUMBER NULL ,
"PARAMETERS" VARCHAR2(1000 BYTE) NULL ,
"OBJ#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_PROCESSED_LOG$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_PROCESSED_LOG$";
CREATE TABLE "SYSTEM"."LOGMNR_PROCESSED_LOG$" (
"SESSION#" NUMBER NOT NULL ,
"THREAD#" NUMBER NOT NULL ,
"SEQUENCE#" NUMBER NULL ,
"FIRST_CHANGE#" NUMBER NULL ,
"NEXT_CHANGE#" NUMBER NULL ,
"FIRST_TIME" DATE NULL ,
"NEXT_TIME" DATE NULL ,
"FILE_NAME" VARCHAR2(513 BYTE) NULL ,
"STATUS" NUMBER NULL ,
"INFO" VARCHAR2(32 BYTE) NULL ,
"TIMESTAMP" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_PROPS$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_PROPS$";
CREATE TABLE "SYSTEM"."LOGMNR_PROPS$" (
"VALUE$" VARCHAR2(4000 BYTE) NULL ,
"COMMENT$" VARCHAR2(4000 BYTE) NULL ,
"NAME" VARCHAR2(30 BYTE) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_REFCON$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_REFCON$";
CREATE TABLE "SYSTEM"."LOGMNR_REFCON$" (
"COL#" NUMBER NULL ,
"INTCOL#" NUMBER NULL ,
"REFTYP" NUMBER NULL ,
"STABID" RAW(16) NULL ,
"EXPCTOID" RAW(16) NULL ,
"OBJ#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_RESTART_CKPT$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_RESTART_CKPT$";
CREATE TABLE "SYSTEM"."LOGMNR_RESTART_CKPT$" (
"SESSION#" NUMBER NOT NULL ,
"VALID" NUMBER NULL ,
"CKPT_SCN" NUMBER NOT NULL ,
"XIDUSN" NUMBER NOT NULL ,
"XIDSLT" NUMBER NOT NULL ,
"XIDSQN" NUMBER NOT NULL ,
"SESSION_NUM" NUMBER NOT NULL ,
"SERIAL_NUM" NUMBER NOT NULL ,
"CKPT_INFO" BLOB NULL ,
"FLAG" NUMBER NULL ,
"OFFSET" NUMBER NULL ,
"CLIENT_DATA" BLOB NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_RESTART_CKPT_TXINFO$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_RESTART_CKPT_TXINFO$";
CREATE TABLE "SYSTEM"."LOGMNR_RESTART_CKPT_TXINFO$" (
"SESSION#" NUMBER NOT NULL ,
"XIDUSN" NUMBER NOT NULL ,
"XIDSLT" NUMBER NOT NULL ,
"XIDSQN" NUMBER NOT NULL ,
"SESSION_NUM" NUMBER NOT NULL ,
"SERIAL_NUM" NUMBER NOT NULL ,
"FLAG" NUMBER NULL ,
"START_SCN" NUMBER NULL ,
"EFFECTIVE_SCN" NUMBER NOT NULL ,
"OFFSET" NUMBER NULL ,
"TX_DATA" BLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_SEED$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_SEED$";
CREATE TABLE "SYSTEM"."LOGMNR_SEED$" (
"SEED_VERSION" NUMBER(22) NULL ,
"GATHER_VERSION" NUMBER(22) NULL ,
"SCHEMANAME" VARCHAR2(30 BYTE) NULL ,
"OBJ#" NUMBER NULL ,
"OBJV#" NUMBER(22) NULL ,
"TABLE_NAME" VARCHAR2(30 BYTE) NULL ,
"COL_NAME" VARCHAR2(30 BYTE) NULL ,
"COL#" NUMBER NULL ,
"INTCOL#" NUMBER NULL ,
"SEGCOL#" NUMBER NULL ,
"TYPE#" NUMBER NULL ,
"LENGTH" NUMBER NULL ,
"PRECISION#" NUMBER NULL ,
"SCALE" NUMBER NULL ,
"NULL$" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_SESSION$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_SESSION$";
CREATE TABLE "SYSTEM"."LOGMNR_SESSION$" (
"SESSION#" NUMBER NOT NULL ,
"CLIENT#" NUMBER NULL ,
"SESSION_NAME" VARCHAR2(128 BYTE) NOT NULL ,
"DB_ID" NUMBER NULL ,
"RESETLOGS_CHANGE#" NUMBER NULL ,
"SESSION_ATTR" NUMBER NULL ,
"SESSION_ATTR_VERBOSE" VARCHAR2(400 BYTE) NULL ,
"START_SCN" NUMBER NULL ,
"END_SCN" NUMBER NULL ,
"SPILL_SCN" NUMBER NULL ,
"SPILL_TIME" DATE NULL ,
"OLDEST_SCN" NUMBER NULL ,
"RESUME_SCN" NUMBER NULL ,
"GLOBAL_DB_NAME" VARCHAR2(128 BYTE) DEFAULT null  NULL ,
"RESET_TIMESTAMP" NUMBER NULL ,
"BRANCH_SCN" NUMBER NULL ,
"VERSION" VARCHAR2(64 BYTE) NULL ,
"REDO_COMPAT" VARCHAR2(20 BYTE) NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"SPARE4" NUMBER NULL ,
"SPARE5" NUMBER NULL ,
"SPARE6" DATE NULL ,
"SPARE7" VARCHAR2(1000 BYTE) NULL ,
"SPARE8" VARCHAR2(1000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_SESSION_ACTIONS$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$";
CREATE TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$" (
"FLAGSRUNTIME" NUMBER DEFAULT 0  NULL ,
"DROPSCN" NUMBER NULL ,
"MODIFYTIME" TIMESTAMP(6)  NULL ,
"DISPATCHTIME" TIMESTAMP(6)  NULL ,
"DROPTIME" TIMESTAMP(6)  NULL ,
"LCRCOUNT" NUMBER DEFAULT 0  NULL ,
"ACTIONNAME" VARCHAR2(30 BYTE) NOT NULL ,
"LOGMNRSESSION#" NUMBER NOT NULL ,
"PROCESSROLE#" NUMBER NOT NULL ,
"ACTIONTYPE#" NUMBER NOT NULL ,
"FLAGSDEFINETIME" NUMBER NULL ,
"CREATETIME" TIMESTAMP(6)  NULL ,
"XIDUSN" NUMBER NULL ,
"XIDSLT" NUMBER NULL ,
"XIDSQN" NUMBER NULL ,
"THREAD#" NUMBER NULL ,
"STARTSCN" NUMBER NULL ,
"STARTSUBSCN" NUMBER NULL ,
"ENDSCN" NUMBER NULL ,
"ENDSUBSCN" NUMBER NULL ,
"RBASQN" NUMBER NULL ,
"RBABLK" NUMBER NULL ,
"RBABYTE" NUMBER NULL ,
"SESSION#" NUMBER NULL ,
"OBJ#" NUMBER NULL ,
"ATTR1" NUMBER NULL ,
"ATTR2" NUMBER NULL ,
"ATTR3" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" TIMESTAMP(6)  NULL ,
"SPARE4" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_SESSION_EVOLVE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_SESSION_EVOLVE$";
CREATE TABLE "SYSTEM"."LOGMNR_SESSION_EVOLVE$" (
"BRANCH_LEVEL" NUMBER NULL ,
"SESSION#" NUMBER NOT NULL ,
"DB_ID" NUMBER NOT NULL ,
"RESET_SCN" NUMBER NOT NULL ,
"RESET_TIMESTAMP" NUMBER NOT NULL ,
"PREV_RESET_SCN" NUMBER NULL ,
"PREV_RESET_TIMESTAMP" NUMBER NULL ,
"STATUS" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"SPARE4" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_SPILL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_SPILL$";
CREATE TABLE "SYSTEM"."LOGMNR_SPILL$" (
"SESSION#" NUMBER NOT NULL ,
"XIDUSN" NUMBER NOT NULL ,
"XIDSLT" NUMBER NOT NULL ,
"XIDSQN" NUMBER NOT NULL ,
"CHUNK" NUMBER NOT NULL ,
"STARTIDX" NUMBER NOT NULL ,
"ENDIDX" NUMBER NOT NULL ,
"FLAG" NUMBER NOT NULL ,
"SEQUENCE#" NUMBER NOT NULL ,
"SPILL_DATA" BLOB NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_SUBCOLTYPE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$";
CREATE TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$" (
"INTCOL#" NUMBER NOT NULL ,
"TOID" RAW(16) NOT NULL ,
"VERSION#" NUMBER NOT NULL ,
"INTCOLS" NUMBER NULL ,
"INTCOL#S" RAW(2000) NULL ,
"FLAGS" NUMBER NULL ,
"SYNOBJ#" NUMBER NULL ,
"OBJ#" NUMBER NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_TAB$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_TAB$";
CREATE TABLE "SYSTEM"."LOGMNR_TAB$" (
"TS#" NUMBER(22) NULL ,
"COLS" NUMBER(22) NULL ,
"PROPERTY" NUMBER(22) NULL ,
"INTCOLS" NUMBER(22) NULL ,
"KERNELCOLS" NUMBER(22) NULL ,
"BOBJ#" NUMBER(22) NULL ,
"TRIGFLAG" NUMBER(22) NULL ,
"FLAGS" NUMBER(22) NULL ,
"OBJ#" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_TABCOMPART$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_TABCOMPART$";
CREATE TABLE "SYSTEM"."LOGMNR_TABCOMPART$" (
"OBJ#" NUMBER(22) NULL ,
"BO#" NUMBER(22) NULL ,
"PART#" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_TABPART$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_TABPART$";
CREATE TABLE "SYSTEM"."LOGMNR_TABPART$" (
"OBJ#" NUMBER(22) NULL ,
"TS#" NUMBER(22) NULL ,
"PART#" NUMBER NULL ,
"BO#" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_TABSUBPART$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_TABSUBPART$";
CREATE TABLE "SYSTEM"."LOGMNR_TABSUBPART$" (
"OBJ#" NUMBER(22) NULL ,
"DATAOBJ#" NUMBER(22) NULL ,
"POBJ#" NUMBER(22) NULL ,
"SUBPART#" NUMBER(22) NULL ,
"TS#" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_TS$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_TS$";
CREATE TABLE "SYSTEM"."LOGMNR_TS$" (
"TS#" NUMBER(22) NULL ,
"NAME" VARCHAR2(30 BYTE) NULL ,
"OWNER#" NUMBER(22) NULL ,
"BLOCKSIZE" NUMBER(22) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_TYPE$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_TYPE$";
CREATE TABLE "SYSTEM"."LOGMNR_TYPE$" (
"VERSION#" NUMBER NULL ,
"VERSION" VARCHAR2(30 BYTE) NULL ,
"TVOID" RAW(16) NULL ,
"TYPECODE" NUMBER NULL ,
"PROPERTIES" NUMBER NULL ,
"ATTRIBUTES" NUMBER NULL ,
"METHODS" NUMBER NULL ,
"HIDDENMETHODS" NUMBER NULL ,
"SUPERTYPES" NUMBER NULL ,
"SUBTYPES" NUMBER NULL ,
"EXTERNTYPE" NUMBER NULL ,
"EXTERNNAME" VARCHAR2(4000 BYTE) NULL ,
"HELPERCLASSNAME" VARCHAR2(4000 BYTE) NULL ,
"LOCAL_ATTRS" NUMBER NULL ,
"LOCAL_METHODS" NUMBER NULL ,
"TYPEID" RAW(16) NULL ,
"ROOTTOID" RAW(16) NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" NUMBER NULL ,
"SUPERTOID" RAW(16) NULL ,
"HASHCODE" RAW(17) NULL ,
"TOID" RAW(16) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_UID$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_UID$";
CREATE TABLE "SYSTEM"."LOGMNR_UID$" (
"LOGMNR_UID" NUMBER(22) NULL ,
"SESSION#" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNR_USER$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNR_USER$";
CREATE TABLE "SYSTEM"."LOGMNR_USER$" (
"USER#" NUMBER(22) NULL ,
"NAME" VARCHAR2(30 BYTE) NOT NULL ,
"LOGMNR_UID" NUMBER(22) NULL ,
"LOGMNR_FLAGS" NUMBER(22) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNRC_DBNAME_UID_MAP
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNRC_DBNAME_UID_MAP";
CREATE TABLE "SYSTEM"."LOGMNRC_DBNAME_UID_MAP" (
"GLOBAL_NAME" VARCHAR2(128 BYTE) NOT NULL ,
"LOGMNR_UID" NUMBER NULL ,
"FLAGS" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNRC_GSBA
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNRC_GSBA";
CREATE TABLE "SYSTEM"."LOGMNRC_GSBA" (
"LOGMNR_UID" NUMBER NOT NULL ,
"AS_OF_SCN" NUMBER NOT NULL ,
"FDO_LENGTH" NUMBER NULL ,
"FDO_VALUE" RAW(255) NULL ,
"CHARSETID" NUMBER NULL ,
"NCHARSETID" NUMBER NULL ,
"DBTIMEZONE_LEN" NUMBER NULL ,
"DBTIMEZONE_VALUE" VARCHAR2(64 BYTE) NULL ,
"LOGMNR_SPARE1" NUMBER NULL ,
"LOGMNR_SPARE2" NUMBER NULL ,
"LOGMNR_SPARE3" VARCHAR2(1000 BYTE) NULL ,
"LOGMNR_SPARE4" DATE NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNRC_GSII
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNRC_GSII";
CREATE TABLE "SYSTEM"."LOGMNRC_GSII" (
"LOGMNR_UID" NUMBER NOT NULL ,
"OBJ#" NUMBER NOT NULL ,
"BO#" NUMBER NOT NULL ,
"INDTYPE#" NUMBER NOT NULL ,
"DROP_SCN" NUMBER NULL ,
"LOGMNR_SPARE1" NUMBER NULL ,
"LOGMNR_SPARE2" NUMBER NULL ,
"LOGMNR_SPARE3" VARCHAR2(1000 BYTE) NULL ,
"LOGMNR_SPARE4" DATE NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNRC_GTCS
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNRC_GTCS";
CREATE TABLE "SYSTEM"."LOGMNRC_GTCS" (
"LOGMNR_UID" NUMBER NOT NULL ,
"OBJ#" NUMBER NOT NULL ,
"OBJV#" NUMBER NOT NULL ,
"SEGCOL#" NUMBER NOT NULL ,
"INTCOL#" NUMBER NOT NULL ,
"COLNAME" VARCHAR2(30 BYTE) NOT NULL ,
"TYPE#" NUMBER NOT NULL ,
"LENGTH" NUMBER NULL ,
"PRECISION" NUMBER NULL ,
"SCALE" NUMBER NULL ,
"INTERVAL_LEADING_PRECISION" NUMBER NULL ,
"INTERVAL_TRAILING_PRECISION" NUMBER NULL ,
"PROPERTY" NUMBER NULL ,
"TOID" RAW(16) NULL ,
"CHARSETID" NUMBER NULL ,
"CHARSETFORM" NUMBER NULL ,
"TYPENAME" VARCHAR2(30 BYTE) NULL ,
"FQCOLNAME" VARCHAR2(4000 BYTE) NULL ,
"NUMINTCOLS" NUMBER NULL ,
"NUMATTRS" NUMBER NULL ,
"ADTORDER" NUMBER NULL ,
"LOGMNR_SPARE1" NUMBER NULL ,
"LOGMNR_SPARE2" NUMBER NULL ,
"LOGMNR_SPARE3" VARCHAR2(1000 BYTE) NULL ,
"LOGMNR_SPARE4" DATE NULL ,
"LOGMNR_SPARE5" NUMBER NULL ,
"LOGMNR_SPARE6" NUMBER NULL ,
"LOGMNR_SPARE7" NUMBER NULL ,
"LOGMNR_SPARE8" NUMBER NULL ,
"LOGMNR_SPARE9" NUMBER NULL ,
"COL#" NUMBER NULL ,
"XTYPESCHEMANAME" VARCHAR2(30 BYTE) NULL ,
"XTYPENAME" VARCHAR2(4000 BYTE) NULL ,
"XFQCOLNAME" VARCHAR2(4000 BYTE) NULL ,
"XTOPINTCOL" NUMBER NULL ,
"XREFFEDTABLEOBJN" NUMBER NULL ,
"XREFFEDTABLEOBJV" NUMBER NULL ,
"XCOLTYPEFLAGS" NUMBER NULL ,
"XOPQTYPETYPE" NUMBER NULL ,
"XOPQTYPEFLAGS" NUMBER NULL ,
"XOPQLOBINTCOL" NUMBER NULL ,
"XOPQOBJINTCOL" NUMBER NULL ,
"XXMLINTCOL" NUMBER NULL ,
"EAOWNER#" NUMBER NULL ,
"EAMKEYID" VARCHAR2(64 BYTE) NULL ,
"EAENCALG" NUMBER NULL ,
"EAINTALG" NUMBER NULL ,
"EACOLKLC" RAW(2000) NULL ,
"EAKLCLEN" NUMBER NULL ,
"EAFLAGS" NUMBER NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNRC_GTLO
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNRC_GTLO";
CREATE TABLE "SYSTEM"."LOGMNRC_GTLO" (
"LOGMNR_UID" NUMBER NOT NULL ,
"KEYOBJ#" NUMBER NOT NULL ,
"LVLCNT" NUMBER NOT NULL ,
"BASEOBJ#" NUMBER NOT NULL ,
"BASEOBJV#" NUMBER NOT NULL ,
"LVL1OBJ#" NUMBER NULL ,
"LVL2OBJ#" NUMBER NULL ,
"LVL0TYPE#" NUMBER NOT NULL ,
"LVL1TYPE#" NUMBER NULL ,
"LVL2TYPE#" NUMBER NULL ,
"OWNER#" NUMBER NULL ,
"OWNERNAME" VARCHAR2(30 BYTE) NOT NULL ,
"LVL0NAME" VARCHAR2(30 BYTE) NOT NULL ,
"LVL1NAME" VARCHAR2(30 BYTE) NULL ,
"LVL2NAME" VARCHAR2(30 BYTE) NULL ,
"INTCOLS" NUMBER NOT NULL ,
"COLS" NUMBER NULL ,
"KERNELCOLS" NUMBER NULL ,
"TAB_FLAGS" NUMBER NULL ,
"TRIGFLAG" NUMBER NULL ,
"ASSOC#" NUMBER NULL ,
"OBJ_FLAGS" NUMBER NULL ,
"TS#" NUMBER NULL ,
"TSNAME" VARCHAR2(30 BYTE) NULL ,
"PROPERTY" NUMBER NULL ,
"START_SCN" NUMBER NOT NULL ,
"DROP_SCN" NUMBER NULL ,
"XIDUSN" NUMBER NULL ,
"XIDSLT" NUMBER NULL ,
"XIDSQN" NUMBER NULL ,
"FLAGS" NUMBER NULL ,
"LOGMNR_SPARE1" NUMBER NULL ,
"LOGMNR_SPARE2" NUMBER NULL ,
"LOGMNR_SPARE3" VARCHAR2(1000 BYTE) NULL ,
"LOGMNR_SPARE4" DATE NULL ,
"LOGMNR_SPARE5" NUMBER NULL ,
"LOGMNR_SPARE6" NUMBER NULL ,
"LOGMNR_SPARE7" NUMBER NULL ,
"LOGMNR_SPARE8" NUMBER NULL ,
"LOGMNR_SPARE9" NUMBER NULL ,
"PARTTYPE" NUMBER NULL ,
"SUBPARTTYPE" NUMBER NULL ,
"UNSUPPORTEDCOLS" NUMBER NULL ,
"COMPLEXTYPECOLS" NUMBER NULL ,
"NTPARENTOBJNUM" NUMBER NULL ,
"NTPARENTOBJVERSION" NUMBER NULL ,
"NTPARENTINTCOLNUM" NUMBER NULL ,
"LOGMNRTLOFLAGS" NUMBER NULL ,
"LOGMNRMCV" VARCHAR2(30 BYTE) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNRP_CTAS_PART_MAP
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP";
CREATE TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP" (
"LOGMNR_UID" NUMBER NOT NULL ,
"BASEOBJ#" NUMBER NOT NULL ,
"BASEOBJV#" NUMBER NOT NULL ,
"KEYOBJ#" NUMBER NOT NULL ,
"PART#" NUMBER NOT NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(1000 BYTE) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGMNRT_MDDL$
-- ----------------------------
DROP TABLE "SYSTEM"."LOGMNRT_MDDL$";
CREATE TABLE "SYSTEM"."LOGMNRT_MDDL$" (
"SOURCE_OBJ#" NUMBER NOT NULL ,
"SOURCE_ROWID" ROWID NOT NULL ,
"DEST_ROWID" ROWID NOT NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$APPLY_MILESTONE
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE";
CREATE TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE" (
"SESSION_ID" NUMBER NOT NULL ,
"COMMIT_SCN" NUMBER NOT NULL ,
"COMMIT_TIME" DATE NULL ,
"SYNCH_SCN" NUMBER NOT NULL ,
"EPOCH" NUMBER NOT NULL ,
"PROCESSED_SCN" NUMBER NOT NULL ,
"PROCESSED_TIME" DATE NULL ,
"FETCHLWM_SCN" NUMBER DEFAULT (0)  NOT NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$APPLY_PROGRESS
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$APPLY_PROGRESS";
CREATE TABLE "SYSTEM"."LOGSTDBY$APPLY_PROGRESS" (
"XIDUSN" NUMBER NULL ,
"XIDSLT" NUMBER NULL ,
"XIDSQN" NUMBER NULL ,
"COMMIT_SCN" NUMBER NULL ,
"COMMIT_TIME" DATE NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$EDS_TABLES
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$EDS_TABLES";
CREATE TABLE "SYSTEM"."LOGSTDBY$EDS_TABLES" (
"OWNER" VARCHAR2(30 BYTE) NOT NULL ,
"TABLE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"SHADOW_TABLE_NAME" VARCHAR2(30 BYTE) NULL ,
"BASE_TRIGGER_NAME" VARCHAR2(30 BYTE) NULL ,
"SHADOW_TRIGGER_NAME" VARCHAR2(30 BYTE) NULL ,
"DBLINK" VARCHAR2(255 BYTE) NULL ,
"FLAGS" NUMBER NULL ,
"STATE" VARCHAR2(255 BYTE) NULL ,
"OBJV" NUMBER NULL ,
"OBJ#" NUMBER NULL ,
"SOBJ#" NUMBER NULL ,
"CTIME" TIMESTAMP(6)  NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" VARCHAR2(255 BYTE) NULL ,
"SPARE3" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$EVENTS
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$EVENTS";
CREATE TABLE "SYSTEM"."LOGSTDBY$EVENTS" (
"EVENT_TIME" TIMESTAMP(6)  NOT NULL ,
"CURRENT_SCN" NUMBER NULL ,
"COMMIT_SCN" NUMBER NULL ,
"XIDUSN" NUMBER NULL ,
"XIDSLT" NUMBER NULL ,
"XIDSQN" NUMBER NULL ,
"ERRVAL" NUMBER NULL ,
"EVENT" VARCHAR2(2000 BYTE) NULL ,
"FULL_EVENT" CLOB NULL ,
"ERROR" VARCHAR2(2000 BYTE) NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$FLASHBACK_SCN
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$FLASHBACK_SCN";
CREATE TABLE "SYSTEM"."LOGSTDBY$FLASHBACK_SCN" (
"PRIMARY_SCN" NUMBER NOT NULL ,
"PRIMARY_TIME" DATE NULL ,
"STANDBY_SCN" NUMBER NULL ,
"STANDBY_TIME" DATE NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$HISTORY
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$HISTORY";
CREATE TABLE "SYSTEM"."LOGSTDBY$HISTORY" (
"STREAM_SEQUENCE#" NUMBER NULL ,
"LMNR_SID" NUMBER NULL ,
"DBID" NUMBER NULL ,
"FIRST_CHANGE#" NUMBER NULL ,
"LAST_CHANGE#" NUMBER NULL ,
"SOURCE" NUMBER NULL ,
"STATUS" NUMBER NULL ,
"FIRST_TIME" DATE NULL ,
"LAST_TIME" DATE NULL ,
"DGNAME" VARCHAR2(255 BYTE) NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$PARAMETERS
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$PARAMETERS";
CREATE TABLE "SYSTEM"."LOGSTDBY$PARAMETERS" (
"NAME" VARCHAR2(30 BYTE) NULL ,
"VALUE" VARCHAR2(2000 BYTE) NULL ,
"TYPE" NUMBER NULL ,
"SCN" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$PLSQL
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$PLSQL";
CREATE TABLE "SYSTEM"."LOGSTDBY$PLSQL" (
"SESSION_ID" NUMBER NULL ,
"START_FINISH" NUMBER NULL ,
"CALL_TEXT" CLOB NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$SCN
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$SCN";
CREATE TABLE "SYSTEM"."LOGSTDBY$SCN" (
"OBJ#" NUMBER NULL ,
"OBJNAME" VARCHAR2(4000 BYTE) NULL ,
"SCHEMA" VARCHAR2(30 BYTE) NULL ,
"TYPE" VARCHAR2(20 BYTE) NULL ,
"SCN" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$SKIP
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$SKIP";
CREATE TABLE "SYSTEM"."LOGSTDBY$SKIP" (
"ERROR" NUMBER NULL ,
"STATEMENT_OPT" VARCHAR2(30 BYTE) NULL ,
"SCHEMA" VARCHAR2(30 BYTE) NULL ,
"NAME" VARCHAR2(65 BYTE) NULL ,
"USE_LIKE" NUMBER NULL ,
"ESC" VARCHAR2(1 BYTE) NULL ,
"PROC" VARCHAR2(98 BYTE) NULL ,
"ACTIVE" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$SKIP_SUPPORT
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$SKIP_SUPPORT";
CREATE TABLE "SYSTEM"."LOGSTDBY$SKIP_SUPPORT" (
"ACTION" NUMBER NOT NULL ,
"NAME" VARCHAR2(30 BYTE) NOT NULL ,
"REG" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for LOGSTDBY$SKIP_TRANSACTION
-- ----------------------------
DROP TABLE "SYSTEM"."LOGSTDBY$SKIP_TRANSACTION";
CREATE TABLE "SYSTEM"."LOGSTDBY$SKIP_TRANSACTION" (
"XIDUSN" NUMBER NULL ,
"XIDSLT" NUMBER NULL ,
"XIDSQN" NUMBER NULL ,
"ACTIVE" NUMBER NULL ,
"COMMIT_SCN" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"SPARE3" VARCHAR2(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Manufacturers
-- ----------------------------
DROP TABLE "SYSTEM"."Manufacturers";
CREATE TABLE "SYSTEM"."Manufacturers" (
"id" NUMBER NOT NULL ,
"name" VARCHAR2(255 BYTE) NULL ,
"type" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Models
-- ----------------------------
DROP TABLE "SYSTEM"."Models";
CREATE TABLE "SYSTEM"."Models" (
"id" NUMBER NOT NULL ,
"trademark_id" NUMBER NOT NULL ,
"description" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for MVIEW$_ADV_AJG
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_AJG";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_AJG" (
"AJGID#" NUMBER NOT NULL ,
"RUNID#" NUMBER NOT NULL ,
"AJGDESLEN" NUMBER NOT NULL ,
"AJGDES" LONG RAW NOT NULL ,
"HASHVALUE" NUMBER NOT NULL ,
"FREQUENCY" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_AJG" IS 'Anchor-join graph representation';

-- ----------------------------
-- Table structure for MVIEW$_ADV_BASETABLE
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE" (
"COLLECTIONID#" NUMBER NOT NULL ,
"QUERYID#" NUMBER NOT NULL ,
"OWNER" VARCHAR2(30 BYTE) NULL ,
"TABLE_NAME" VARCHAR2(30 BYTE) NULL ,
"TABLE_TYPE" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE" IS 'Base tables refered by a query';

-- ----------------------------
-- Table structure for MVIEW$_ADV_CLIQUE
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" (
"CLIQUEID#" NUMBER NOT NULL ,
"RUNID#" NUMBER NOT NULL ,
"CLIQUEDESLEN" NUMBER NOT NULL ,
"CLIQUEDES" LONG RAW NOT NULL ,
"HASHVALUE" NUMBER NOT NULL ,
"FREQUENCY" NUMBER NOT NULL ,
"BYTECOST" NUMBER NOT NULL ,
"ROWSIZE" NUMBER NOT NULL ,
"NUMROWS" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" IS 'Table for storing canonical form of Clique queries';

-- ----------------------------
-- Table structure for MVIEW$_ADV_ELIGIBLE
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" (
"SUMOBJN#" NUMBER NOT NULL ,
"RUNID#" NUMBER NOT NULL ,
"BYTECOST" NUMBER NOT NULL ,
"FLAGS" NUMBER NOT NULL ,
"FREQUENCY" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" IS 'Summary management rewrite eligibility information';

-- ----------------------------
-- Table structure for MVIEW$_ADV_EXCEPTIONS
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_EXCEPTIONS";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_EXCEPTIONS" (
"RUNID#" NUMBER NULL ,
"OWNER" VARCHAR2(30 BYTE) NULL ,
"TABLE_NAME" VARCHAR2(30 BYTE) NULL ,
"DIMENSION_NAME" VARCHAR2(30 BYTE) NULL ,
"RELATIONSHIP" VARCHAR2(11 BYTE) NULL ,
"BAD_ROWID" ROWID NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_EXCEPTIONS" IS 'Output table for dimension validations';

-- ----------------------------
-- Table structure for MVIEW$_ADV_FILTER
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_FILTER";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_FILTER" (
"FILTERID#" NUMBER NOT NULL ,
"SUBFILTERNUM#" NUMBER NOT NULL ,
"SUBFILTERTYPE" NUMBER NOT NULL ,
"STR_VALUE" VARCHAR2(1028 BYTE) NULL ,
"NUM_VALUE1" NUMBER NULL ,
"NUM_VALUE2" NUMBER NULL ,
"DATE_VALUE1" DATE NULL ,
"DATE_VALUE2" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_FILTER" IS 'Table for workload filter definition';

-- ----------------------------
-- Table structure for MVIEW$_ADV_FILTERINSTANCE
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE" (
"RUNID#" NUMBER NOT NULL ,
"FILTERID#" NUMBER NULL ,
"SUBFILTERNUM#" NUMBER NULL ,
"SUBFILTERTYPE" NUMBER NULL ,
"STR_VALUE" VARCHAR2(1028 BYTE) NULL ,
"NUM_VALUE1" NUMBER NULL ,
"NUM_VALUE2" NUMBER NULL ,
"DATE_VALUE1" DATE NULL ,
"DATE_VALUE2" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE" IS 'Table for workload filter instance definition';

-- ----------------------------
-- Table structure for MVIEW$_ADV_FJG
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_FJG";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_FJG" (
"FJGID#" NUMBER NOT NULL ,
"AJGID#" NUMBER NOT NULL ,
"FJGDESLEN" NUMBER NOT NULL ,
"FJGDES" LONG RAW NOT NULL ,
"HASHVALUE" NUMBER NOT NULL ,
"FREQUENCY" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_FJG" IS 'Representation for query join sub-graph not in AJG ';

-- ----------------------------
-- Table structure for MVIEW$_ADV_GC
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_GC";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_GC" (
"GCID#" NUMBER NOT NULL ,
"FJGID#" NUMBER NOT NULL ,
"GCDESLEN" NUMBER NOT NULL ,
"GCDES" LONG RAW NOT NULL ,
"HASHVALUE" NUMBER NOT NULL ,
"FREQUENCY" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_GC" IS 'Group-by columns of a query';

-- ----------------------------
-- Table structure for MVIEW$_ADV_INFO
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_INFO";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_INFO" (
"RUNID#" NUMBER NOT NULL ,
"SEQ#" NUMBER NOT NULL ,
"TYPE" NUMBER NOT NULL ,
"INFOLEN" NUMBER NOT NULL ,
"INFO" LONG RAW NULL ,
"STATUS" NUMBER NULL ,
"FLAG" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_INFO" IS 'Internal table for passing information from the SQL analyzer';

-- ----------------------------
-- Table structure for MVIEW$_ADV_JOURNAL
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" (
"RUNID#" NUMBER NOT NULL ,
"SEQ#" NUMBER NOT NULL ,
"TIMESTAMP" DATE NOT NULL ,
"FLAGS" NUMBER NOT NULL ,
"NUM" NUMBER NULL ,
"TEXT" LONG NULL ,
"TEXTLEN" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" IS 'Summary advisor journal table for debugging and information';

-- ----------------------------
-- Table structure for MVIEW$_ADV_LEVEL
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_LEVEL";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" (
"RUNID#" NUMBER NOT NULL ,
"LEVELID#" NUMBER NOT NULL ,
"DIMOBJ#" NUMBER NULL ,
"FLAGS" NUMBER NOT NULL ,
"TBLOBJ#" NUMBER NOT NULL ,
"COLUMNLIST" RAW(70) NOT NULL ,
"LEVELNAME" VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" IS 'Level definition';

-- ----------------------------
-- Table structure for MVIEW$_ADV_LOG
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_LOG";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_LOG" (
"RUNID#" NUMBER NOT NULL ,
"FILTERID#" NUMBER NULL ,
"RUN_BEGIN" DATE NULL ,
"RUN_END" DATE NULL ,
"RUN_TYPE" NUMBER NULL ,
"UNAME" VARCHAR2(30 BYTE) NULL ,
"STATUS" NUMBER NOT NULL ,
"MESSAGE" VARCHAR2(2000 BYTE) NULL ,
"COMPLETED" NUMBER NULL ,
"TOTAL" NUMBER NULL ,
"ERROR_CODE" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_LOG" IS 'Log all calls to summary advisory functions';

-- ----------------------------
-- Table structure for MVIEW$_ADV_OUTPUT
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" (
"RUNID#" NUMBER NOT NULL ,
"OUTPUT_TYPE" NUMBER NOT NULL ,
"RANK#" NUMBER NOT NULL ,
"ACTION_TYPE" VARCHAR2(6 BYTE) NULL ,
"SUMMARY_OWNER" VARCHAR2(30 BYTE) NULL ,
"SUMMARY_NAME" VARCHAR2(30 BYTE) NULL ,
"GROUP_BY_COLUMNS" VARCHAR2(2000 BYTE) NULL ,
"WHERE_CLAUSE" VARCHAR2(2000 BYTE) NULL ,
"FROM_CLAUSE" VARCHAR2(2000 BYTE) NULL ,
"MEASURES_LIST" VARCHAR2(2000 BYTE) NULL ,
"FACT_TABLES" VARCHAR2(1000 BYTE) NULL ,
"GROUPING_LEVELS" VARCHAR2(2000 BYTE) NULL ,
"QUERYLEN" NUMBER NULL ,
"QUERY_TEXT" LONG NULL ,
"STORAGE_IN_BYTES" NUMBER NULL ,
"PCT_PERFORMANCE_GAIN" NUMBER NULL ,
"FREQUENCY" NUMBER NULL ,
"CUMULATIVE_BENEFIT" NUMBER NULL ,
"BENEFIT_TO_COST_RATIO" NUMBER NOT NULL ,
"VALIDATED" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" IS 'Output table for summary recommendations and evaluations';

-- ----------------------------
-- Table structure for MVIEW$_ADV_PARAMETERS
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_PARAMETERS";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_PARAMETERS" (
"PARAMETER_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"PARAMETER_TYPE" NUMBER NOT NULL ,
"STRING_VALUE" VARCHAR2(30 BYTE) NULL ,
"DATE_VALUE" DATE NULL ,
"NUMERICAL_VALUE" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_PARAMETERS" IS 'Summary advisor tuning parameters';

-- ----------------------------
-- Table structure for MVIEW$_ADV_PLAN
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_PLAN";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_PLAN" (
"STATEMENT_ID" VARCHAR2(30 BYTE) NULL ,
"TIMESTAMP" DATE NULL ,
"REMARKS" VARCHAR2(80 BYTE) NULL ,
"OPERATION" VARCHAR2(30 BYTE) NULL ,
"OPTIONS" VARCHAR2(255 BYTE) NULL ,
"OBJECT_NODE" VARCHAR2(128 BYTE) NULL ,
"OBJECT_OWNER" VARCHAR2(30 BYTE) NULL ,
"OBJECT_NAME" VARCHAR2(30 BYTE) NULL ,
"OBJECT_INSTANCE" NUMBER NULL ,
"OBJECT_TYPE" VARCHAR2(30 BYTE) NULL ,
"OPTIMIZER" VARCHAR2(255 BYTE) NULL ,
"SEARCH_COLUMNS" NUMBER NULL ,
"ID" NUMBER NULL ,
"PARENT_ID" NUMBER NULL ,
"POSITION" NUMBER NULL ,
"COST" NUMBER NULL ,
"CARDINALITY" NUMBER NULL ,
"BYTES" NUMBER NULL ,
"OTHER_TAG" VARCHAR2(255 BYTE) NULL ,
"PARTITION_START" VARCHAR2(255 BYTE) NULL ,
"PARTITION_STOP" VARCHAR2(255 BYTE) NULL ,
"PARTITION_ID" NUMBER NULL ,
"OTHER" LONG NULL ,
"DISTRIBUTION" VARCHAR2(30 BYTE) NULL ,
"CPU_COST" NUMBER NULL ,
"IO_COST" NUMBER NULL ,
"TEMP_SPACE" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_PLAN" IS 'Private plan table for estimate_mview_size operations';

-- ----------------------------
-- Table structure for MVIEW$_ADV_PRETTY
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_PRETTY";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_PRETTY" (
"QUERYID#" NUMBER NULL ,
"SQL_TEXT" LONG NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_PRETTY" IS 'Table for sql parsing';

-- ----------------------------
-- Table structure for MVIEW$_ADV_ROLLUP
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" (
"RUNID#" NUMBER NOT NULL ,
"CLEVELID#" NUMBER NOT NULL ,
"PLEVELID#" NUMBER NOT NULL ,
"FLAGS" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" IS 'Each row repesents either a functional dependency or join-key relationship';

-- ----------------------------
-- Table structure for MVIEW$_ADV_SQLDEPEND
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_SQLDEPEND";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_SQLDEPEND" (
"COLLECTIONID#" NUMBER NULL ,
"INST_ID" NUMBER NULL ,
"FROM_ADDRESS" RAW(16) NULL ,
"FROM_HASH" NUMBER NULL ,
"TO_OWNER" VARCHAR2(64 BYTE) NULL ,
"TO_NAME" VARCHAR2(1000 BYTE) NULL ,
"TO_TYPE" NUMBER NULL ,
"CARDINALITY" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_SQLDEPEND" IS 'Temporary table for workload collections';

-- ----------------------------
-- Table structure for MVIEW$_ADV_TEMP
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_TEMP";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_TEMP" (
"ID#" NUMBER NULL ,
"SEQ#" NUMBER NULL ,
"TEXT" LONG NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_TEMP" IS 'Table for temporary data';

-- ----------------------------
-- Table structure for MVIEW$_ADV_WORKLOAD
-- ----------------------------
DROP TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD";
CREATE TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" (
"QUERYID#" NUMBER NOT NULL ,
"COLLECTIONID#" NUMBER NOT NULL ,
"COLLECTTIME" DATE NOT NULL ,
"APPLICATION" VARCHAR2(64 BYTE) NULL ,
"CARDINALITY" NUMBER NULL ,
"RESULTSIZE" NUMBER NULL ,
"UNAME" VARCHAR2(30 BYTE) NOT NULL ,
"QDATE" DATE NULL ,
"PRIORITY" NUMBER NULL ,
"EXEC_TIME" NUMBER NULL ,
"SQL_TEXT" LONG NOT NULL ,
"SQL_TEXTLEN" NUMBER NOT NULL ,
"SQL_HASH" NUMBER NULL ,
"SQL_ADDR" RAW(16) NULL ,
"FREQUENCY" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" IS 'Shared workload repository for DBA users of summary advisor';

-- ----------------------------
-- Table structure for OL$
-- ----------------------------
DROP TABLE "SYSTEM"."OL$";
CREATE TABLE "SYSTEM"."OL$" (
"OL_NAME" VARCHAR2(30 BYTE) NULL ,
"SQL_TEXT" LONG NULL ,
"TEXTLEN" NUMBER NULL ,
"SIGNATURE" RAW(16) NULL ,
"HASH_VALUE" NUMBER NULL ,
"HASH_VALUE2" NUMBER NULL ,
"CATEGORY" VARCHAR2(30 BYTE) NULL ,
"VERSION" VARCHAR2(64 BYTE) NULL ,
"CREATOR" VARCHAR2(30 BYTE) NULL ,
"TIMESTAMP" DATE NULL ,
"FLAGS" NUMBER NULL ,
"HINTCOUNT" NUMBER NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" VARCHAR2(1000 BYTE) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for OL$HINTS
-- ----------------------------
DROP TABLE "SYSTEM"."OL$HINTS";
CREATE TABLE "SYSTEM"."OL$HINTS" (
"OL_NAME" VARCHAR2(30 BYTE) NULL ,
"HINT#" NUMBER NULL ,
"CATEGORY" VARCHAR2(30 BYTE) NULL ,
"HINT_TYPE" NUMBER NULL ,
"HINT_TEXT" VARCHAR2(512 BYTE) NULL ,
"STAGE#" NUMBER NULL ,
"NODE#" NUMBER NULL ,
"TABLE_NAME" VARCHAR2(30 BYTE) NULL ,
"TABLE_TIN" NUMBER NULL ,
"TABLE_POS" NUMBER NULL ,
"REF_ID" NUMBER NULL ,
"USER_TABLE_NAME" VARCHAR2(64 BYTE) NULL ,
"COST" FLOAT(126) NULL ,
"CARDINALITY" FLOAT(126) NULL ,
"BYTES" FLOAT(126) NULL ,
"HINT_TEXTOFF" NUMBER NULL ,
"HINT_TEXTLEN" NUMBER NULL ,
"JOIN_PRED" VARCHAR2(2000 BYTE) NULL ,
"SPARE1" NUMBER NULL ,
"SPARE2" NUMBER NULL ,
"HINT_STRING" CLOB NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for OL$NODES
-- ----------------------------
DROP TABLE "SYSTEM"."OL$NODES";
CREATE TABLE "SYSTEM"."OL$NODES" (
"OL_NAME" VARCHAR2(30 BYTE) NULL ,
"CATEGORY" VARCHAR2(30 BYTE) NULL ,
"NODE_ID" NUMBER NULL ,
"PARENT_ID" NUMBER NULL ,
"NODE_TYPE" NUMBER NULL ,
"NODE_TEXTLEN" NUMBER NULL ,
"NODE_TEXTOFF" NUMBER NULL ,
"NODE_NAME" VARCHAR2(64 BYTE) NULL 
)
NOLOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Options
-- ----------------------------
DROP TABLE "SYSTEM"."Options";
CREATE TABLE "SYSTEM"."Options" (
"id" NUMBER NOT NULL ,
"code" VARCHAR2(255 BYTE) NULL ,
"cost" NUMBER(15,2) NULL ,
"price" NUMBER(15,2) NULL ,
"type" VARCHAR2(255 BYTE) NOT NULL ,
"manufacturer_id" NUMBER NULL ,
"units_available" NUMBER DEFAULT 30  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for REPCAT$_AUDIT_ATTRIBUTE
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE";
CREATE TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" (
"ATTRIBUTE" VARCHAR2(30 BYTE) NOT NULL ,
"DATA_TYPE_ID" NUMBER NOT NULL ,
"DATA_LENGTH" NUMBER NULL ,
"SOURCE" VARCHAR2(92 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" IS 'Information about attributes automatically maintained for replication';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"."ATTRIBUTE" IS 'Description of the attribute';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"."DATA_TYPE_ID" IS 'Datatype of the attribute value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"."DATA_LENGTH" IS 'Length of the attribute value in byte';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"."SOURCE" IS 'Name of the function which returns the attribute value';

-- ----------------------------
-- Table structure for REPCAT$_AUDIT_COLUMN
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN";
CREATE TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"COLUMN_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"BASE_SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"BASE_ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"BASE_CONFLICT_TYPE_ID" NUMBER NOT NULL ,
"BASE_REFERENCE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"ATTRIBUTE" VARCHAR2(30 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" IS 'Information about columns in all shadow tables for all replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."SNAME" IS 'Owner of the shadow table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."ONAME" IS 'Name of the shadow table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."COLUMN_NAME" IS 'Name of the column in the shadow table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."BASE_SNAME" IS 'Owner of replicated table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."BASE_ONAME" IS 'Name of the replicated table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."BASE_CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."BASE_REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."ATTRIBUTE" IS 'Description of the attribute';

-- ----------------------------
-- Table structure for REPCAT$_COLUMN_GROUP
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP";
CREATE TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"GROUP_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"GROUP_COMMENT" VARCHAR2(80 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP" IS 'All column groups of replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_COLUMN_GROUP"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_COLUMN_GROUP"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_COLUMN_GROUP"."GROUP_NAME" IS 'Name of the column group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_COLUMN_GROUP"."GROUP_COMMENT" IS 'Description of the column group';

-- ----------------------------
-- Table structure for REPCAT$_CONFLICT
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_CONFLICT";
CREATE TABLE "SYSTEM"."REPCAT$_CONFLICT" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"CONFLICT_TYPE_ID" NUMBER NOT NULL ,
"REFERENCE_NAME" VARCHAR2(30 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_CONFLICT" IS 'All conflicts for which users have specified resolutions in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_CONFLICT"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_CONFLICT"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_CONFLICT"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_CONFLICT"."REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';

-- ----------------------------
-- Table structure for REPCAT$_DDL
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_DDL";
CREATE TABLE "SYSTEM"."REPCAT$_DDL" (
"LOG_ID" NUMBER NULL ,
"SOURCE" VARCHAR2(128 BYTE) NULL ,
"ROLE" VARCHAR2(1 BYTE) NULL ,
"MASTER" VARCHAR2(128 BYTE) NULL ,
"LINE" NUMBER NULL ,
"TEXT" VARCHAR2(2000 BYTE) NULL ,
"DDL_NUM" NUMBER DEFAULT 1       -- order of ddls to execute  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_DDL" IS 'Arguments that do not fit in a single repcat log record';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."LOG_ID" IS 'Identifying number of the repcat log record';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."SOURCE" IS 'Name of the database at which the request originated';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."ROLE" IS 'Is this database the masterdef for the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."MASTER" IS 'Name of the database that processes this request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."LINE" IS 'Ordering of records within a single request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."TEXT" IS 'Portion of an argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."DDL_NUM" IS 'Ordering of DDLs to execute';

-- ----------------------------
-- Table structure for REPCAT$_EXCEPTIONS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_EXCEPTIONS";
CREATE TABLE "SYSTEM"."REPCAT$_EXCEPTIONS" (
"EXCEPTION_ID" NUMBER NOT NULL ,
"USER_NAME" VARCHAR2(30 BYTE) NULL ,
"REQUEST" CLOB NULL ,
"JOB" NUMBER NULL ,
"ERROR_DATE" DATE NULL ,
"ERROR_NUMBER" NUMBER NULL ,
"ERROR_MESSAGE" VARCHAR2(4000 BYTE) NULL ,
"LINE_NUMBER" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_EXCEPTIONS" IS 'Repcat processing exceptions table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."EXCEPTION_ID" IS 'Internal primary key of the exceptions table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."USER_NAME" IS 'User name of user submitting the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."REQUEST" IS 'Originating request containing the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."JOB" IS 'Originating job containing the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."ERROR_DATE" IS 'Date of occurance for the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."ERROR_NUMBER" IS 'Error number generating the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."ERROR_MESSAGE" IS 'Error message associated with the error generating the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."LINE_NUMBER" IS 'Line number of the exception.';

-- ----------------------------
-- Table structure for REPCAT$_EXTENSION
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_EXTENSION";
CREATE TABLE "SYSTEM"."REPCAT$_EXTENSION" (
"EXTENSION_ID" RAW(16) NOT NULL ,
"EXTENSION_CODE" NUMBER NULL ,
"MASTERDEF" VARCHAR2(128 BYTE) NULL ,
"EXPORT_REQUIRED" VARCHAR2(1 BYTE) NULL ,
"REPCATLOG_ID" NUMBER NULL ,
"EXTENSION_STATUS" NUMBER NULL ,
"FLASHBACK_SCN" NUMBER NULL ,
"PUSH_TO_MDEF" VARCHAR2(1 BYTE) NULL ,
"PUSH_TO_NEW" VARCHAR2(1 BYTE) NULL ,
"PERCENTAGE_FOR_CATCHUP_MDEF" NUMBER NULL ,
"CYCLE_SECONDS_MDEF" NUMBER NULL ,
"PERCENTAGE_FOR_CATCHUP_NEW" NUMBER NULL ,
"CYCLE_SECONDS_NEW" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_EXTENSION" IS 'Information about replication extension requests';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."EXTENSION_ID" IS 'Globally unique identifier for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."EXTENSION_CODE" IS 'Kind of replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."MASTERDEF" IS 'Master definition site for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."EXPORT_REQUIRED" IS 'YES if this extension requires an export, and NO if no export is required';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."REPCATLOG_ID" IS 'Identifier of repcatlog records related to replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."EXTENSION_STATUS" IS 'Status of replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."FLASHBACK_SCN" IS 'Flashback_scn for export or change-based recovery for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."PUSH_TO_MDEF" IS 'YES if existing masters partially push to masterdef, NO if no pushing';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."PUSH_TO_NEW" IS 'YES if existing masters partially push to new masters, NO if no pushing';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."PERCENTAGE_FOR_CATCHUP_MDEF" IS 'Fraction of push to masterdef cycle devoted to catching up';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."CYCLE_SECONDS_MDEF" IS 'Length of push to masterdef cycle when catching up';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."PERCENTAGE_FOR_CATCHUP_NEW" IS 'Fraction of push to new masters cycle devoted to catching up';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."CYCLE_SECONDS_NEW" IS 'Length of push to new masters cycle when catching up';

-- ----------------------------
-- Table structure for REPCAT$_FLAVOR_OBJECTS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS";
CREATE TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" (
"FLAVOR_ID" NUMBER NOT NULL ,
"GOWNER" VARCHAR2(30 BYTE) DEFAULT 'PUBLIC'  NOT NULL ,
"GNAME" VARCHAR2(30 BYTE) NOT NULL ,
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"TYPE" NUMBER NOT NULL ,
"VERSION#" NUMBER NULL ,
"HASHCODE" RAW(17) NULL ,
"COLUMNS_PRESENT" RAW(125) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" IS 'Replicated objects in flavors';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."FLAVOR_ID" IS 'Flavor identifier';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."GOWNER" IS 'Owner of the object group containing object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."GNAME" IS 'Object group containing object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."SNAME" IS 'Schema containing object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."ONAME" IS 'Name of object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."TYPE" IS 'Object type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."VERSION#" IS 'Version# of a user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."HASHCODE" IS 'Hashcode of a user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."COLUMNS_PRESENT" IS 'For tables, encoded mapping of columns present';

-- ----------------------------
-- Table structure for REPCAT$_FLAVORS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_FLAVORS";
CREATE TABLE "SYSTEM"."REPCAT$_FLAVORS" (
"FLAVOR_ID" NUMBER NOT NULL ,
"GOWNER" VARCHAR2(30 BYTE) DEFAULT 'PUBLIC'  NULL ,
"GNAME" VARCHAR2(30 BYTE) NOT NULL ,
"FNAME" VARCHAR2(30 BYTE) NULL ,
"CREATION_DATE" DATE DEFAULT SYSDATE  NULL ,
"CREATED_BY" NUMBER DEFAULT UID  NULL ,
"PUBLISHED" VARCHAR2(1 BYTE) DEFAULT 'N'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_FLAVORS" IS 'Flavors defined for replicated object groups';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."FLAVOR_ID" IS 'Flavor identifier, unique within object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."GOWNER" IS 'Owner of the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."GNAME" IS 'Name of the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."FNAME" IS 'Name of the flavor';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."CREATION_DATE" IS 'Date on which the flavor was created';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."CREATED_BY" IS 'Identifier of user that created the flavor';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."PUBLISHED" IS 'Indicates whether flavor is published (Y/N) or obsolete (O)';

-- ----------------------------
-- Table structure for REPCAT$_GENERATED
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_GENERATED";
CREATE TABLE "SYSTEM"."REPCAT$_GENERATED" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"TYPE" NUMBER NOT NULL ,
"REASON" NUMBER NULL ,
"BASE_SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"BASE_ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"BASE_TYPE" NUMBER NOT NULL ,
"PACKAGE_PREFIX" VARCHAR2(30 BYTE) NULL ,
"PROCEDURE_PREFIX" VARCHAR2(30 BYTE) NULL ,
"DISTRIBUTED" VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_GENERATED" IS 'Objects generated to support replication';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."SNAME" IS 'Schema containing the generated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."ONAME" IS 'Name of the generated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."TYPE" IS 'Type of the generated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."REASON" IS 'Reason the object was generated';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."BASE_SNAME" IS 'Name of the object''s owner';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."BASE_ONAME" IS 'Name of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."BASE_TYPE" IS 'Type of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."PACKAGE_PREFIX" IS 'Prefix for package wrapper';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."PROCEDURE_PREFIX" IS 'Procedure prefix for package wrapper or procedure wrapper';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."DISTRIBUTED" IS 'Is the generated object separately generated at each master';

-- ----------------------------
-- Table structure for REPCAT$_GROUPED_COLUMN
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN";
CREATE TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"GROUP_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"COLUMN_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"POS" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN" IS 'Columns in all column groups of replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."GROUP_NAME" IS 'Name of the column group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."COLUMN_NAME" IS 'Name of the column in the column group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."POS" IS 'Position of a column or an attribute in the table';

-- ----------------------------
-- Table structure for REPCAT$_INSTANTIATION_DDL
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL";
CREATE TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL" (
"REFRESH_TEMPLATE_ID" NUMBER NOT NULL ,
"DDL_TEXT" CLOB NULL ,
"DDL_NUM" NUMBER NOT NULL ,
"PHASE" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL" IS 'Table containing supplementary DDL to be executed during instantiation.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_INSTANTIATION_DDL"."REFRESH_TEMPLATE_ID" IS 'Primary key of template containing supplementary DDL.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_INSTANTIATION_DDL"."DDL_TEXT" IS 'Supplementary DDL string.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_INSTANTIATION_DDL"."DDL_NUM" IS 'Column for ordering of supplementary DDL.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_INSTANTIATION_DDL"."PHASE" IS 'Phase to execute the DDL string.';

-- ----------------------------
-- Table structure for REPCAT$_KEY_COLUMNS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS";
CREATE TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"TYPE" NUMBER NULL ,
"COL" VARCHAR2(30 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS" IS 'Primary columns for a table using column-level replication';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_KEY_COLUMNS"."SNAME" IS 'Schema containing table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_KEY_COLUMNS"."ONAME" IS 'Name of the table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_KEY_COLUMNS"."TYPE" IS 'Type identifier';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_KEY_COLUMNS"."COL" IS 'Column in the table';

-- ----------------------------
-- Table structure for REPCAT$_OBJECT_PARMS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS";
CREATE TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" (
"TEMPLATE_PARAMETER_ID" NUMBER NOT NULL ,
"TEMPLATE_OBJECT_ID" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_PARMS"."TEMPLATE_PARAMETER_ID" IS 'Primary key of template parameter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_PARMS"."TEMPLATE_OBJECT_ID" IS 'Primary key of object using the paramter.';

-- ----------------------------
-- Table structure for REPCAT$_OBJECT_TYPES
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_OBJECT_TYPES";
CREATE TABLE "SYSTEM"."REPCAT$_OBJECT_TYPES" (
"OBJECT_TYPE_ID" NUMBER NOT NULL ,
"OBJECT_TYPE_NAME" VARCHAR2(200 BYTE) NULL ,
"FLAGS" RAW(255) NULL ,
"SPARE1" VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_OBJECT_TYPES" IS 'Internal table for template object types.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_TYPES"."OBJECT_TYPE_ID" IS 'Internal primary key of the template object types table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_TYPES"."OBJECT_TYPE_NAME" IS 'Descriptive name for the object type.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_TYPES"."FLAGS" IS 'Internal flags for object type processing.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_TYPES"."SPARE1" IS 'Reserved for future use.';

-- ----------------------------
-- Table structure for REPCAT$_PARAMETER_COLUMN
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN";
CREATE TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"CONFLICT_TYPE_ID" NUMBER NOT NULL ,
"REFERENCE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"SEQUENCE_NO" NUMBER NOT NULL ,
"PARAMETER_TABLE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"PARAMETER_COLUMN_NAME" VARCHAR2(4000 BYTE) NULL ,
"PARAMETER_SEQUENCE_NO" NUMBER NOT NULL ,
"COLUMN_POS" NUMBER NOT NULL ,
"ATTRIBUTE_SEQUENCE_NO" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN" IS 'All columns used for resolving conflicts in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."SEQUENCE_NO" IS 'Ordering on resolution';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."PARAMETER_TABLE_NAME" IS 'Name of the table to which the parameter column belongs';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."PARAMETER_COLUMN_NAME" IS 'Name of the parameter column used for resolving the conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."PARAMETER_SEQUENCE_NO" IS 'Ordering on parameter column';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."COLUMN_POS" IS 'Column position of an attribute or a column';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."ATTRIBUTE_SEQUENCE_NO" IS 'Sequence number for an attribute of an ADT/pkREF column or a scalar column';

-- ----------------------------
-- Table structure for REPCAT$_PRIORITY
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_PRIORITY";
CREATE TABLE "SYSTEM"."REPCAT$_PRIORITY" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"PRIORITY_GROUP" VARCHAR2(30 BYTE) NOT NULL ,
"PRIORITY" NUMBER NOT NULL ,
"RAW_VALUE" RAW(2000) NULL ,
"CHAR_VALUE" CHAR(255 BYTE) NULL ,
"NUMBER_VALUE" NUMBER NULL ,
"DATE_VALUE" DATE NULL ,
"VARCHAR2_VALUE" VARCHAR2(4000 BYTE) NULL ,
"NCHAR_VALUE" NCHAR(500) NULL ,
"NVARCHAR2_VALUE" NVARCHAR2(1000) NULL ,
"LARGE_CHAR_VALUE" CHAR(2000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_PRIORITY" IS 'Values and their corresponding priorities in all priority groups in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."SNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."PRIORITY_GROUP" IS 'Name of the priority group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."PRIORITY" IS 'Priority of the value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."RAW_VALUE" IS 'Raw value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."CHAR_VALUE" IS 'Blank-padded character string';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."NUMBER_VALUE" IS 'Numeric value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."DATE_VALUE" IS 'Date value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."VARCHAR2_VALUE" IS 'Character string';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."NCHAR_VALUE" IS 'NCHAR string';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."NVARCHAR2_VALUE" IS 'NVARCHAR2 string';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."LARGE_CHAR_VALUE" IS 'Blank-padded character string over 255 characters';

-- ----------------------------
-- Table structure for REPCAT$_PRIORITY_GROUP
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP";
CREATE TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"PRIORITY_GROUP" VARCHAR2(30 BYTE) NOT NULL ,
"DATA_TYPE_ID" NUMBER NOT NULL ,
"FIXED_DATA_LENGTH" NUMBER NULL ,
"PRIORITY_COMMENT" VARCHAR2(80 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" IS 'Information about all priority groups in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."SNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."PRIORITY_GROUP" IS 'Name of the priority group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."DATA_TYPE_ID" IS 'Datatype of the value in the priority group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."FIXED_DATA_LENGTH" IS 'Length of the value in bytes if the datatype is CHAR';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."PRIORITY_COMMENT" IS 'Description of the priority group';

-- ----------------------------
-- Table structure for REPCAT$_REFRESH_TEMPLATES
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES";
CREATE TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" (
"REFRESH_TEMPLATE_ID" NUMBER NOT NULL ,
"OWNER" VARCHAR2(30 BYTE) NOT NULL ,
"REFRESH_GROUP_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"REFRESH_TEMPLATE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"TEMPLATE_COMMENT" VARCHAR2(2000 BYTE) NULL ,
"PUBLIC_TEMPLATE" VARCHAR2(1 BYTE) NULL ,
"LAST_MODIFIED" DATE NULL ,
"MODIFIED_BY" NUMBER NULL ,
"CREATION_DATE" DATE NULL ,
"CREATED_BY" NUMBER NULL ,
"REFRESH_GROUP_ID" NUMBER DEFAULT 0  NOT NULL ,
"TEMPLATE_TYPE_ID" NUMBER DEFAULT 1  NOT NULL ,
"TEMPLATE_STATUS_ID" NUMBER DEFAULT 0  NOT NULL ,
"FLAGS" RAW(255) NULL ,
"SPARE1" VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" IS 'Primary table containing deployment template information.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."REFRESH_TEMPLATE_ID" IS 'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."OWNER" IS 'Owner of the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."REFRESH_GROUP_NAME" IS 'Name of the refresh group to create during instantiation.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."REFRESH_TEMPLATE_NAME" IS 'Name of the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."TEMPLATE_COMMENT" IS 'Optional comment field for the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."PUBLIC_TEMPLATE" IS 'Flag specifying public template or private template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."LAST_MODIFIED" IS 'Date the row was last modified.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."MODIFIED_BY" IS 'User id of the user that modified the row.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."CREATION_DATE" IS 'Date the row was created.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."CREATED_BY" IS 'User id of the user that created the row.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."REFRESH_GROUP_ID" IS 'Internal primary key to default refresh group for the template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."TEMPLATE_TYPE_ID" IS 'Internal primary key to the template types.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."TEMPLATE_STATUS_ID" IS 'Internal primary key to the template status table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."FLAGS" IS 'Internal flags for the template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."SPARE1" IS 'Reserved for future use.';

-- ----------------------------
-- Table structure for REPCAT$_REPCAT
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_REPCAT";
CREATE TABLE "SYSTEM"."REPCAT$_REPCAT" (
"GOWNER" VARCHAR2(30 BYTE) DEFAULT 'PUBLIC'  NOT NULL ,
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"MASTER" VARCHAR2(1 BYTE) NULL ,
"STATUS" NUMBER NULL ,
"SCHEMA_COMMENT" VARCHAR2(80 BYTE) NULL ,
"FLAVOR_ID" NUMBER NULL ,
"FLAG" RAW(4) DEFAULT '00000000'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPCAT" IS 'Information about all replicated object groups';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."GOWNER" IS 'Owner of the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."SNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."MASTER" IS 'Is the site a master site for the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."STATUS" IS 'If the site is a master, the master''s status';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."SCHEMA_COMMENT" IS 'Description of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."FLAVOR_ID" IS 'Flavor identifier';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."FLAG" IS 'Miscellaneous repgroup info';

-- ----------------------------
-- Table structure for REPCAT$_REPCATLOG
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_REPCATLOG";
CREATE TABLE "SYSTEM"."REPCAT$_REPCATLOG" (
"VERSION" NUMBER NULL ,
"ID" NUMBER NOT NULL ,
"SOURCE" VARCHAR2(128 BYTE) NOT NULL ,
"USERID" VARCHAR2(30 BYTE) NULL ,
"TIMESTAMP" DATE NULL ,
"ROLE" VARCHAR2(1 BYTE) NOT NULL ,
"MASTER" VARCHAR2(128 BYTE) NOT NULL ,
"SNAME" VARCHAR2(30 BYTE) NULL ,
"REQUEST" NUMBER NULL ,
"ONAME" VARCHAR2(30 BYTE) NULL ,
"TYPE" NUMBER NULL ,
"A_COMMENT" VARCHAR2(2000 BYTE) NULL ,
"BOOL_ARG" VARCHAR2(1 BYTE) NULL ,
"ANO_BOOL_ARG" VARCHAR2(1 BYTE) NULL ,
"INT_ARG" NUMBER NULL ,
"ANO_INT_ARG" NUMBER NULL ,
"LINES" NUMBER NULL ,
"STATUS" NUMBER NULL ,
"MESSAGE" VARCHAR2(200 BYTE) NULL ,
"ERRNUM" NUMBER NULL ,
"GNAME" VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPCATLOG" IS 'Information about asynchronous administration requests';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."VERSION" IS 'Version of the repcat log record';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ID" IS 'Identifying number of repcat log record';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."SOURCE" IS 'Name of the database at which the request originated';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."USERID" IS 'Name of the user who submitted the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."TIMESTAMP" IS 'When the request was submitted';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ROLE" IS 'Is this database the masterdef for the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."MASTER" IS 'Name of the database that processes this request$_ddl';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."SNAME" IS 'Schema of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."REQUEST" IS 'Name of the requested operation';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ONAME" IS 'Replicated object name, if applicable';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."TYPE" IS 'Type of replicated object, if applicable';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."A_COMMENT" IS 'Textual argument used for comments';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."BOOL_ARG" IS 'Boolean argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ANO_BOOL_ARG" IS 'Another Boolean argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."INT_ARG" IS 'Integer argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ANO_INT_ARG" IS 'Another integer argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."LINES" IS 'The number of rows in system.repcat$_ddl at the processing site';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."STATUS" IS 'Status of the request at this database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."MESSAGE" IS 'Error message associated with processing the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ERRNUM" IS 'Oracle error number associated with processing the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."GNAME" IS 'Name of the replicated object group';

-- ----------------------------
-- Table structure for REPCAT$_REPCOLUMN
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_REPCOLUMN";
CREATE TABLE "SYSTEM"."REPCAT$_REPCOLUMN" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"TYPE" NUMBER NOT NULL ,
"CNAME" VARCHAR2(30 BYTE) NOT NULL ,
"LCNAME" VARCHAR2(4000 BYTE) NULL ,
"TOID" RAW(16) NULL ,
"VERSION#" NUMBER NULL ,
"HASHCODE" RAW(17) NULL ,
"CTYPE_NAME" VARCHAR2(30 BYTE) NULL ,
"CTYPE_OWNER" VARCHAR2(30 BYTE) NULL ,
"ID" NUMBER NULL ,
"POS" NUMBER NULL ,
"TOP" VARCHAR2(30 BYTE) NULL ,
"FLAG" RAW(2) DEFAULT '0000'  NULL ,
"CTYPE" NUMBER NULL ,
"LENGTH" NUMBER NULL ,
"PRECISION#" NUMBER NULL ,
"SCALE" NUMBER NULL ,
"NULL$" NUMBER NULL ,
"CHARSETID" NUMBER NULL ,
"CHARSETFORM" NUMBER NULL ,
"PROPERTY" RAW(4) DEFAULT '00000000'  NULL ,
"CLENGTH" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPCOLUMN" IS 'Replicated columns for a table sorted alphabetically in ascending order';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."SNAME" IS 'Name of the object owner';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."ONAME" IS 'Name of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."TYPE" IS 'Type of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CNAME" IS 'Column name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."LCNAME" IS 'Long column name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."TOID" IS 'Type object identifier of a user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."VERSION#" IS 'Version# of a column of user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."HASHCODE" IS 'Hashcode of a column of user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."ID" IS 'Column ID';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."POS" IS 'Ordering of column used as IN parameter in the replication procedures';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."TOP" IS 'Top column name for an attribute';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."FLAG" IS 'Replication information about column';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CTYPE" IS 'Type of the column';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."LENGTH" IS 'Length of the column in bytes';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."PRECISION#" IS 'Length: decimal digits (NUMBER) or binary digits (FLOAT)';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."SCALE" IS 'Digits to right of decimal point in a number';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."NULL$" IS 'Does column allow NULL values?';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CHARSETID" IS 'Character set identifier';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CHARSETFORM" IS 'Character set form';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CLENGTH" IS 'The maximum length of the column in characters';

-- ----------------------------
-- Table structure for REPCAT$_REPGROUP_PRIVS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS";
CREATE TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" (
"USERID" NUMBER NULL ,
"USERNAME" VARCHAR2(30 BYTE) NOT NULL ,
"GOWNER" VARCHAR2(30 BYTE) NULL ,
"GNAME" VARCHAR2(30 BYTE) NULL ,
"GLOBAL_FLAG" NUMBER NOT NULL ,
"CREATED" DATE NOT NULL ,
"PRIVILEGE" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" IS 'Information about users who are registered for object group privileges';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."USERID" IS 'OBSOLETE COLUMN: Identifying number of the user';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."USERNAME" IS 'Identifying name of the registered user';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."GOWNER" IS 'Owner of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."GNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."GLOBAL_FLAG" IS '1 if gname is NULL, 0 otherwise';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."CREATED" IS 'Registration date';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."PRIVILEGE" IS 'Registered privileges';

-- ----------------------------
-- Table structure for REPCAT$_REPOBJECT
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_REPOBJECT";
CREATE TABLE "SYSTEM"."REPCAT$_REPOBJECT" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"TYPE" NUMBER NOT NULL ,
"VERSION#" NUMBER NULL ,
"HASHCODE" RAW(17) NULL ,
"ID" NUMBER NULL ,
"OBJECT_COMMENT" VARCHAR2(80 BYTE) NULL ,
"STATUS" NUMBER NULL ,
"GENPACKAGE" NUMBER NULL ,
"GENPLOGID" NUMBER NULL ,
"GENTRIGGER" NUMBER NULL ,
"GENTLOGID" NUMBER NULL ,
"GOWNER" VARCHAR2(30 BYTE) NULL ,
"GNAME" VARCHAR2(30 BYTE) NULL ,
"FLAG" RAW(4) DEFAULT '00000000'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPOBJECT" IS 'Information about replicated objects';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."SNAME" IS 'Name of the object owner';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."ONAME" IS 'Name of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."TYPE" IS 'Type of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."VERSION#" IS 'Version of objects of TYPE';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."HASHCODE" IS 'Hashcode of objects of TYPE';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."ID" IS 'Identifier of the local object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."OBJECT_COMMENT" IS 'Description of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."STATUS" IS 'Status of the last create or alter request on the local object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GENPACKAGE" IS 'Status of whether the object needs to generate replication package';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GENPLOGID" IS 'Log id of message sent for generating package support';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GENTRIGGER" IS 'Status of whether the object needs to generate replication trigger';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GENTLOGID" IS 'Log id of message sent for generating trigger support';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GOWNER" IS 'Owner of the object''s object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GNAME" IS 'Name of the object''s object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."FLAG" IS 'Information about replicated object';

-- ----------------------------
-- Table structure for REPCAT$_REPPROP
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_REPPROP";
CREATE TABLE "SYSTEM"."REPCAT$_REPPROP" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"TYPE" NUMBER NOT NULL ,
"DBLINK" VARCHAR2(128 BYTE) NOT NULL ,
"HOW" NUMBER NULL ,
"PROPAGATE_COMMENT" VARCHAR2(80 BYTE) NULL ,
"DELIVERY_ORDER" NUMBER NULL ,
"RECIPIENT_KEY" NUMBER NULL ,
"EXTENSION_ID" RAW(16) DEFAULT '00'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPPROP" IS 'Propagation information about replicated objects';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."SNAME" IS 'Name of the object owner';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."ONAME" IS 'Name of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."TYPE" IS 'Type of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."DBLINK" IS 'Destination database for propagation';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."HOW" IS 'Propagation choice for the destination database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."PROPAGATE_COMMENT" IS 'Description of the propagation choice';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."DELIVERY_ORDER" IS 'Value of delivery order when the master was added';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."RECIPIENT_KEY" IS 'Recipient key for sname and oname, used in joining with def$_aqcall';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."EXTENSION_ID" IS 'Identifier of any active extension request';

-- ----------------------------
-- Table structure for REPCAT$_REPSCHEMA
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_REPSCHEMA";
CREATE TABLE "SYSTEM"."REPCAT$_REPSCHEMA" (
"GOWNER" VARCHAR2(30 BYTE) DEFAULT 'PUBLIC'  NOT NULL ,
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"DBLINK" VARCHAR2(128 BYTE) NOT NULL ,
"MASTERDEF" VARCHAR2(1 BYTE) NULL ,
"SNAPMASTER" VARCHAR2(1 BYTE) NULL ,
"MASTER_COMMENT" VARCHAR2(80 BYTE) NULL ,
"MASTER" VARCHAR2(1 BYTE) NULL ,
"PROP_UPDATES" NUMBER DEFAULT 0  NULL ,
"MY_DBLINK" VARCHAR2(1 BYTE) NULL ,
"EXTENSION_ID" RAW(16) DEFAULT '00'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPSCHEMA" IS 'N-way replication information';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."GOWNER" IS 'Owner of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."SNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."DBLINK" IS 'A database site replicating the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."MASTERDEF" IS 'Is the database the master definition site for the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."SNAPMASTER" IS 'For a snapshot site, is this the current refresh_master';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."MASTER_COMMENT" IS 'Description of the database site';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."MASTER" IS 'Redundant information from repcat$_repcat.master';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."PROP_UPDATES" IS 'Number of requested updates for master in repcat$_repprop';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."MY_DBLINK" IS 'A sanity check after import: is this master the current site';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."EXTENSION_ID" IS 'Dummy column for foreign key';

-- ----------------------------
-- Table structure for REPCAT$_RESOL_STATS_CONTROL
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL";
CREATE TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"CREATED" DATE NOT NULL ,
"STATUS" NUMBER NOT NULL ,
"STATUS_UPDATE_DATE" DATE NOT NULL ,
"PURGED_DATE" DATE NULL ,
"LAST_PURGE_START_DATE" DATE NULL ,
"LAST_PURGE_END_DATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL" IS 'Information about statistics collection for conflict resolutions for all replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."CREATED" IS 'Timestamp for which statistics collection was first started';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."STATUS" IS 'Status of statistics collection: ACTIVE, CANCELLED';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."STATUS_UPDATE_DATE" IS 'Timestamp for which the status was last updated';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."PURGED_DATE" IS 'Timestamp for the last purge of statistics data';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."LAST_PURGE_START_DATE" IS 'The last start date of the statistics purging date range';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."LAST_PURGE_END_DATE" IS 'The last end date of the statistics purging date range';

-- ----------------------------
-- Table structure for REPCAT$_RESOLUTION
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_RESOLUTION";
CREATE TABLE "SYSTEM"."REPCAT$_RESOLUTION" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"CONFLICT_TYPE_ID" NUMBER NOT NULL ,
"REFERENCE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"SEQUENCE_NO" NUMBER NOT NULL ,
"METHOD_NAME" VARCHAR2(80 BYTE) NOT NULL ,
"FUNCTION_NAME" VARCHAR2(92 BYTE) NOT NULL ,
"PRIORITY_GROUP" VARCHAR2(30 BYTE) NULL ,
"RESOLUTION_COMMENT" VARCHAR2(80 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_RESOLUTION" IS 'Description of all conflict resolutions in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."SEQUENCE_NO" IS 'Ordering on resolution';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."METHOD_NAME" IS 'Name of the conflict resolution method';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."FUNCTION_NAME" IS 'Name of the resolution function';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."PRIORITY_GROUP" IS 'Name of the priority group used in conflict resolution';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."RESOLUTION_COMMENT" IS 'Description of the conflict resolution';

-- ----------------------------
-- Table structure for REPCAT$_RESOLUTION_METHOD
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_RESOLUTION_METHOD";
CREATE TABLE "SYSTEM"."REPCAT$_RESOLUTION_METHOD" (
"CONFLICT_TYPE_ID" NUMBER NOT NULL ,
"METHOD_NAME" VARCHAR2(80 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_RESOLUTION_METHOD" IS 'All conflict resolution methods in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_METHOD"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_METHOD"."METHOD_NAME" IS 'Name of the conflict resolution method';

-- ----------------------------
-- Table structure for REPCAT$_RESOLUTION_STATISTICS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS";
CREATE TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" (
"SNAME" VARCHAR2(30 BYTE) NOT NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"CONFLICT_TYPE_ID" NUMBER NOT NULL ,
"REFERENCE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"METHOD_NAME" VARCHAR2(80 BYTE) NOT NULL ,
"FUNCTION_NAME" VARCHAR2(92 BYTE) NOT NULL ,
"PRIORITY_GROUP" VARCHAR2(30 BYTE) NULL ,
"RESOLVED_DATE" DATE NOT NULL ,
"PRIMARY_KEY_VALUE" VARCHAR2(2000 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" IS 'Statistics for conflict resolutions for all replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."METHOD_NAME" IS 'Name of the conflict resolution method';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."FUNCTION_NAME" IS 'Name of the resolution function';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."PRIORITY_GROUP" IS 'Name of the priority group used in conflict resolution';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."RESOLVED_DATE" IS 'Timestamp for the resolution of the conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."PRIMARY_KEY_VALUE" IS 'Primary key of the replicated row (character data)';

-- ----------------------------
-- Table structure for REPCAT$_RUNTIME_PARMS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_RUNTIME_PARMS";
CREATE TABLE "SYSTEM"."REPCAT$_RUNTIME_PARMS" (
"RUNTIME_PARM_ID" NUMBER NULL ,
"PARAMETER_NAME" VARCHAR2(30 BYTE) NULL ,
"PARM_VALUE" CLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RUNTIME_PARMS"."RUNTIME_PARM_ID" IS 'Primary key of the parameter values table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RUNTIME_PARMS"."PARAMETER_NAME" IS 'Name of the parameter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RUNTIME_PARMS"."PARM_VALUE" IS 'Parameter value.';

-- ----------------------------
-- Table structure for REPCAT$_SITE_OBJECTS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS";
CREATE TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" (
"TEMPLATE_SITE_ID" NUMBER NOT NULL ,
"SNAME" VARCHAR2(30 BYTE) NULL ,
"ONAME" VARCHAR2(30 BYTE) NOT NULL ,
"OBJECT_TYPE_ID" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" IS 'Table for maintaining database objects deployed at a site.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITE_OBJECTS"."TEMPLATE_SITE_ID" IS 'Internal primary key of the template sites table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITE_OBJECTS"."SNAME" IS 'Schema containing the deployed database object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITE_OBJECTS"."ONAME" IS 'Name of the deployed database object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITE_OBJECTS"."OBJECT_TYPE_ID" IS 'Internal ID of the object type of the deployed database object.';

-- ----------------------------
-- Table structure for REPCAT$_SITES_NEW
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_SITES_NEW";
CREATE TABLE "SYSTEM"."REPCAT$_SITES_NEW" (
"EXTENSION_ID" RAW(16) NOT NULL ,
"GOWNER" VARCHAR2(30 BYTE) NOT NULL ,
"GNAME" VARCHAR2(30 BYTE) NOT NULL ,
"DBLINK" VARCHAR2(128 BYTE) NOT NULL ,
"FULL_INSTANTIATION" VARCHAR2(1 BYTE) NULL ,
"MASTER_STATUS" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_SITES_NEW" IS 'Information about new masters for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."EXTENSION_ID" IS 'Globally unique identifier for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."GOWNER" IS 'Owner of the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."GNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."DBLINK" IS 'A database site that will replicate the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."FULL_INSTANTIATION" IS 'Y if the database uses full-database export or change-based recovery';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."MASTER_STATUS" IS 'Instantiation status of the new master';

-- ----------------------------
-- Table structure for REPCAT$_SNAPGROUP
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_SNAPGROUP";
CREATE TABLE "SYSTEM"."REPCAT$_SNAPGROUP" (
"GOWNER" VARCHAR2(30 BYTE) DEFAULT 'PUBLIC'  NULL ,
"GNAME" VARCHAR2(30 BYTE) NULL ,
"DBLINK" VARCHAR2(128 BYTE) NULL ,
"GROUP_COMMENT" VARCHAR2(80 BYTE) NULL ,
"REP_TYPE" NUMBER NULL ,
"FLAVOR_ID" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_SNAPGROUP" IS 'Snapshot repgroup registration information';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."GOWNER" IS 'Owner of the snapshot repgroup';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."GNAME" IS 'Name of the snapshot repgroup';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."DBLINK" IS 'Database site of the snapshot repgroup';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."GROUP_COMMENT" IS 'Description of the snapshot repgroup';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."REP_TYPE" IS 'Identifier of flavor at snapshot';

-- ----------------------------
-- Table structure for REPCAT$_TEMPLATE_OBJECTS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS";
CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" (
"TEMPLATE_OBJECT_ID" NUMBER NOT NULL ,
"REFRESH_TEMPLATE_ID" NUMBER NOT NULL ,
"OBJECT_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"OBJECT_TYPE" NUMBER NOT NULL ,
"OBJECT_VERSION#" NUMBER NULL ,
"DDL_TEXT" CLOB NULL ,
"MASTER_ROLLBACK_SEG" VARCHAR2(30 BYTE) NULL ,
"DERIVED_FROM_SNAME" VARCHAR2(30 BYTE) NULL ,
"DERIVED_FROM_ONAME" VARCHAR2(30 BYTE) NULL ,
"FLAVOR_ID" NUMBER NULL ,
"SCHEMA_NAME" VARCHAR2(30 BYTE) NULL ,
"DDL_NUM" NUMBER DEFAULT 1  NOT NULL ,
"TEMPLATE_REFGROUP_ID" NUMBER DEFAULT 0  NOT NULL ,
"FLAGS" RAW(255) NULL ,
"SPARE1" VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."TEMPLATE_OBJECT_ID" IS 'Internal primary key of the REPCAT$_TEMPLATE_OBJECTS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."REFRESH_TEMPLATE_ID" IS 'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."OBJECT_NAME" IS 'Name of the database object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."OBJECT_TYPE" IS 'Type of database object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."OBJECT_VERSION#" IS 'Version# of database object of TYPE.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."DDL_TEXT" IS 'DDL string for creating the object or WHERE clause for snapshot query.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."MASTER_ROLLBACK_SEG" IS 'Rollback segment for use during snapshot refreshes.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."DERIVED_FROM_SNAME" IS 'Schema name of schema containing object this was derived from.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."DERIVED_FROM_ONAME" IS 'Object name of object this object was derived from.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."FLAVOR_ID" IS 'Foreign key to the REPCAT$_FLAVORS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."SCHEMA_NAME" IS 'Schema containing the object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."DDL_NUM" IS 'Order of ddls to execute.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."TEMPLATE_REFGROUP_ID" IS 'Internal ID of the refresh group to contain the object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."FLAGS" IS 'Internal flags for the object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."SPARE1" IS 'Reserved for future use.';

-- ----------------------------
-- Table structure for REPCAT$_TEMPLATE_PARMS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS";
CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" (
"TEMPLATE_PARAMETER_ID" NUMBER NOT NULL ,
"REFRESH_TEMPLATE_ID" NUMBER NOT NULL ,
"PARAMETER_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"DEFAULT_PARM_VALUE" CLOB NULL ,
"PROMPT_STRING" VARCHAR2(2000 BYTE) NULL ,
"USER_OVERRIDE" VARCHAR2(1 BYTE) DEFAULT 'Y'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."TEMPLATE_PARAMETER_ID" IS 'Internal primary key of the REPCAT$_TEMPLATE_PARMS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."REFRESH_TEMPLATE_ID" IS 'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."PARAMETER_NAME" IS 'name of the parameter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."DEFAULT_PARM_VALUE" IS 'Default value for the parameter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."PROMPT_STRING" IS 'String for use in prompting for parameter values.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."USER_OVERRIDE" IS 'User override flag.';

-- ----------------------------
-- Table structure for REPCAT$_TEMPLATE_REFGROUPS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS";
CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" (
"REFRESH_GROUP_ID" NUMBER NOT NULL ,
"REFRESH_GROUP_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"REFRESH_TEMPLATE_ID" NUMBER NOT NULL ,
"ROLLBACK_SEG" VARCHAR2(30 BYTE) NULL ,
"START_DATE" VARCHAR2(200 BYTE) NULL ,
"INTERVAL" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" IS 'Table for maintaining refresh group information for template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."REFRESH_GROUP_ID" IS 'Internal primary key of the refresh groups table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."REFRESH_GROUP_NAME" IS 'Name of the refresh group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."REFRESH_TEMPLATE_ID" IS 'Primary key of the template containing the refresh group.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."ROLLBACK_SEG" IS 'Name of the rollback segment to use during refresh.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."START_DATE" IS 'Refresh start date.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."INTERVAL" IS 'Refresh interval.';

-- ----------------------------
-- Table structure for REPCAT$_TEMPLATE_SITES
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES";
CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" (
"TEMPLATE_SITE_ID" NUMBER NOT NULL ,
"REFRESH_TEMPLATE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"REFRESH_GROUP_NAME" VARCHAR2(30 BYTE) NULL ,
"TEMPLATE_OWNER" VARCHAR2(30 BYTE) NULL ,
"USER_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"SITE_NAME" VARCHAR2(128 BYTE) NULL ,
"REPAPI_SITE_ID" NUMBER NULL ,
"STATUS" NUMBER NOT NULL ,
"REFRESH_TEMPLATE_ID" NUMBER NULL ,
"USER_ID" NUMBER NULL ,
"INSTANTIATION_DATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."TEMPLATE_SITE_ID" IS 'Internal primary key of the REPCAT$_TEMPLATE_SITES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."REFRESH_TEMPLATE_NAME" IS 'Name of the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."REFRESH_GROUP_NAME" IS 'Name of the refresh group to create during instantiation.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."TEMPLATE_OWNER" IS 'Owner of the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."USER_NAME" IS 'Database user name.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."SITE_NAME" IS 'Name of the site that has instantiated the template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."REPAPI_SITE_ID" IS 'Name of the site that has instantiated the template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."STATUS" IS 'Obsolete - do not use.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."REFRESH_TEMPLATE_ID" IS 'Obsolete - do not use.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."USER_ID" IS 'Obsolete - do not use.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."INSTANTIATION_DATE" IS 'Date template was instantiated.';

-- ----------------------------
-- Table structure for REPCAT$_TEMPLATE_STATUS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_TEMPLATE_STATUS";
CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_STATUS" (
"TEMPLATE_STATUS_ID" NUMBER NOT NULL ,
"STATUS_TYPE_NAME" VARCHAR2(100 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_TEMPLATE_STATUS" IS 'Table for template status and template status codes.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_STATUS"."TEMPLATE_STATUS_ID" IS 'Internal primary key for the template status table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_STATUS"."STATUS_TYPE_NAME" IS 'User friendly name for the template status.';

-- ----------------------------
-- Table structure for REPCAT$_TEMPLATE_TARGETS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_TEMPLATE_TARGETS";
CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_TARGETS" (
"TEMPLATE_TARGET_ID" NUMBER NOT NULL ,
"TARGET_DATABASE" VARCHAR2(128 BYTE) NOT NULL ,
"TARGET_COMMENT" VARCHAR2(2000 BYTE) NULL ,
"CONNECT_STRING" VARCHAR2(4000 BYTE) NULL ,
"SPARE1" VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_TEMPLATE_TARGETS" IS 'Internal table for tracking potential target databases for templates.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."TEMPLATE_TARGET_ID" IS 'Internal primary key of the template targets table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."TARGET_DATABASE" IS 'Global identifier of the target database.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."TARGET_COMMENT" IS 'Comment on the target database.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."CONNECT_STRING" IS 'The connection descriptor used to connect to the target database.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."SPARE1" IS 'The spare column';

-- ----------------------------
-- Table structure for REPCAT$_TEMPLATE_TYPES
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_TEMPLATE_TYPES";
CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_TYPES" (
"TEMPLATE_TYPE_ID" NUMBER NOT NULL ,
"TEMPLATE_DESCRIPTION" VARCHAR2(200 BYTE) NULL ,
"FLAGS" RAW(255) NULL ,
"SPARE1" VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "SYSTEM"."REPCAT$_TEMPLATE_TYPES" IS 'Internal table for maintaining types of templates.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TYPES"."TEMPLATE_TYPE_ID" IS 'Internal primary key of the template types table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TYPES"."TEMPLATE_DESCRIPTION" IS 'Description of the template type.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TYPES"."FLAGS" IS 'Bitmap flags controlling each type of template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TYPES"."SPARE1" IS 'Reserved for future expansion.';

-- ----------------------------
-- Table structure for REPCAT$_USER_AUTHORIZATIONS
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS";
CREATE TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" (
"USER_AUTHORIZATION_ID" NUMBER NOT NULL ,
"USER_ID" NUMBER NOT NULL ,
"REFRESH_TEMPLATE_ID" NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS"."USER_AUTHORIZATION_ID" IS 'Internal primary key of the REPCAT$_USER_AUTHORIZATIONS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS"."USER_ID" IS 'Database user id.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS"."REFRESH_TEMPLATE_ID" IS 'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';

-- ----------------------------
-- Table structure for REPCAT$_USER_PARM_VALUES
-- ----------------------------
DROP TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES";
CREATE TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" (
"USER_PARAMETER_ID" NUMBER NOT NULL ,
"TEMPLATE_PARAMETER_ID" NUMBER NOT NULL ,
"USER_ID" NUMBER NOT NULL ,
"PARM_VALUE" CLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_PARM_VALUES"."USER_PARAMETER_ID" IS 'Internal primary key of the REPCAT$_USER_PARM_VALUES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_PARM_VALUES"."TEMPLATE_PARAMETER_ID" IS 'Internal primary key of the REPCAT$_TEMPLATE_PARMS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_PARM_VALUES"."USER_ID" IS 'Database user id.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_PARM_VALUES"."PARM_VALUE" IS 'Value of the parameter for this user.';

-- ----------------------------
-- Table structure for Salespersons
-- ----------------------------
DROP TABLE "SYSTEM"."Salespersons";
CREATE TABLE "SYSTEM"."Salespersons" (
"id" NUMBER NOT NULL ,
"code" VARCHAR2(255 BYTE) NULL ,
"name" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for SQLPLUS_PRODUCT_PROFILE
-- ----------------------------
DROP TABLE "SYSTEM"."SQLPLUS_PRODUCT_PROFILE";
CREATE TABLE "SYSTEM"."SQLPLUS_PRODUCT_PROFILE" (
"PRODUCT" VARCHAR2(30 BYTE) NOT NULL ,
"USERID" VARCHAR2(30 BYTE) NULL ,
"ATTRIBUTE" VARCHAR2(240 BYTE) NULL ,
"SCOPE" VARCHAR2(240 BYTE) NULL ,
"NUMERIC_VALUE" NUMBER(15,2) NULL ,
"CHAR_VALUE" VARCHAR2(240 BYTE) NULL ,
"DATE_VALUE" DATE NULL ,
"LONG_VALUE" LONG NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Tradein_Vehicles
-- ----------------------------
DROP TABLE "SYSTEM"."Tradein_Vehicles";
CREATE TABLE "SYSTEM"."Tradein_Vehicles" (
"id" NUMBER NOT NULL ,
"serial_number" VARCHAR2(255 BYTE) NULL ,
"price_allowed" NUMBER(15,2) NULL ,
"vehicle_id" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Trademarks
-- ----------------------------
DROP TABLE "SYSTEM"."Trademarks";
CREATE TABLE "SYSTEM"."Trademarks" (
"id" NUMBER NOT NULL ,
"name" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for Vehicles
-- ----------------------------
DROP TABLE "SYSTEM"."Vehicles";
CREATE TABLE "SYSTEM"."Vehicles" (
"id" NUMBER NOT NULL ,
"vin" VARCHAR2(255 BYTE) NULL ,
"name" VARCHAR2(255 BYTE) NULL ,
"model_id" NUMBER NOT NULL ,
"year" NUMBER NULL ,
"manufacturer_id" NUMBER NOT NULL ,
"type" VARCHAR2(255 BYTE) NULL ,
"cost" NUMBER(15,2) NULL ,
"price" NUMBER(15,2) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- View structure for Accesories_Low_Units
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."Accesories_Low_Units" AS 
SELECT A."id", A."type" Name, A."code", B."name" Manufacturer
FROM "Options" A
INNER JOIN "Manufacturers" B ON A."manufacturer_id" = B."id"
WHERE A."units_available" < 5;

-- ----------------------------
-- View structure for AQ$_DEF$_AQCALL_F
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."AQ$_DEF$_AQCALL_F" AS 
SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA , qo.qid QUEUE_ID  FROM "DEF$_AQCALL" qt, SYS.ALL_INT_DEQUEUE_QUEUES  qo  WHERE qt.q_name = qo.name AND qo.owner = 'SYSTEM'
WITH READ ONLY 
CONSTRAINTS "SYS_C003542";

-- ----------------------------
-- View structure for AQ$_DEF$_AQERROR_F
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."AQ$_DEF$_AQERROR_F" AS 
SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA , qo.qid QUEUE_ID  FROM "DEF$_AQERROR" qt, SYS.ALL_INT_DEQUEUE_QUEUES  qo  WHERE qt.q_name = qo.name AND qo.owner = 'SYSTEM'
WITH READ ONLY 
CONSTRAINTS "SYS_C003545";

-- ----------------------------
-- View structure for AQ$DEF$_AQCALL
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."AQ$DEF$_AQCALL" AS 
SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON  FROM "DEF$_AQCALL" WHERE state != 7 AND   state != 9
WITH READ ONLY 
CONSTRAINTS "SYS_C003541";

-- ----------------------------
-- View structure for AQ$DEF$_AQERROR
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."AQ$DEF$_AQERROR" AS 
SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON  FROM "DEF$_AQERROR" WHERE state != 7 AND   state != 9
WITH READ ONLY 
CONSTRAINTS "SYS_C003544";

-- ----------------------------
-- View structure for DETAILS_INVOICE_VIEW
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."DETAILS_INVOICE_VIEW" AS 
SELECT 
A."id" BILL_ID,
A."salesperson_id" SALES_PERSON_ID,
C."name" name_of_salesperson,
A."customer_id",
D."name" name_of_client,
A."vehicle_id",
G."name" brand_of_vehicle,
H."name" manufacturer_of_vehicle,
B."option_id" accesory_id,
I."type" name_of_accesory
FROM
"Invoices" A
LEFT JOIN "Invoice_Details" B ON B."invoice_id" = A."id"
INNER JOIN "Salespersons" C ON A."salesperson_id" = C."id"
INNER JOIN "Customers" D ON A."customer_id" = D."id"
INNER JOIN "Vehicles" E ON A."vehicle_id" = E."id"
INNER JOIN "Models" F ON E."model_id" = F."id"
INNER JOIN "Trademarks" G ON F."trademark_id" = G."id"
INNER JOIN "Manufacturers" H ON E."manufacturer_id" = H."id"
INNER JOIN "Options" I ON B."option_id" = I."id";

-- ----------------------------
-- View structure for MVIEW_EVALUATIONS
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."MVIEW_EVALUATIONS" AS 
select
  t1.runid# as runid,
  summary_owner AS mview_owner,
  summary_name AS mview_name,
  rank# as rank,
  storage_in_bytes,
  frequency,
  cumulative_benefit,
  benefit_to_cost_ratio
from SYSTEM.MVIEW$_ADV_OUTPUT t1, SYSTEM.MVIEW$_ADV_LOG t2, ALL_USERS u
where
  t1.runid# = t2.runid# and
  u.username = t2.uname and
  u.user_id = userenv('SCHEMAID') and
  t1.output_type = 1
order by t1.rank#;
COMMENT ON TABLE "SYSTEM"."MVIEW_EVALUATIONS" IS 'This view gives DBA access to summary evaluation output';

-- ----------------------------
-- View structure for MVIEW_EXCEPTIONS
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."MVIEW_EXCEPTIONS" AS 
select
  t1.runid# as runid,
  owner,
  table_name,
  dimension_name,
  relationship,
  bad_rowid
from SYSTEM.MVIEW$_ADV_EXCEPTIONS t1, SYSTEM.MVIEW$_ADV_LOG t2, ALL_USERS u
where
  t1.runid# = t2.runid# and
  u.username = t2.uname and
  u.user_id = userenv('SCHEMAID');
COMMENT ON TABLE "SYSTEM"."MVIEW_EXCEPTIONS" IS 'This view gives DBA access to dimension validation results';

-- ----------------------------
-- View structure for MVIEW_FILTER
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."MVIEW_FILTER" AS 
select
      a.filterid# as filterid,
      a.subfilternum# as subfilternum,
      decode(a.subfiltertype,1,'APPLICATION',2,'CARDINALITY',3,'LASTUSE',
                             4,'FREQUENCY',5,'USER',6,'PRIORITY',7,'BASETABLE',
                             8,'RESPONSETIME',9,'COLLECTIONID',10,'TRACENAME',
                             11,'SCHEMA','UNKNOWN') AS subfiltertype,
      a.str_value,
      to_number(decode(a.num_value1,-999,NULL,a.num_value1)) AS num_value1,
      to_number(decode(a.num_value2,-999,NULL,a.num_value2)) AS num_value2,
      a.date_value1,
      a.date_value2
   from system.mview$_adv_filter a, system.mview$_adv_log b, ALL_USERS u
   WHERE a.filterid# = b.runid#
   AND b.uname = u.username
   AND u.user_id = userenv('SCHEMAID');
COMMENT ON TABLE "SYSTEM"."MVIEW_FILTER" IS 'Workload filter records';

-- ----------------------------
-- View structure for MVIEW_FILTERINSTANCE
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."MVIEW_FILTERINSTANCE" AS 
select
      a.runid# as runid,
      a.filterid# as filterid,
      a.subfilternum# as subfilternum,
      decode(a.subfiltertype,1,'APPLICATION',2,'CARDINALITY',3,'LASTUSE',
                             4,'FREQUENCY',5,'USER',6,'PRIORITY',7,'BASETABLE',
                             8,'RESPONSETIME',9,'COLLECTIONID',10,'TRACENAME',
                             11,'SCHEMA','UNKNOWN') AS subfiltertype,
      a.str_value,
      to_number(decode(a.num_value1,-999,NULL,a.num_value1)) AS num_value1,
      to_number(decode(a.num_value2,-999,NULL,a.num_value2)) AS num_value2,
      a.date_value1,
      a.date_value2
   from system.mview$_adv_filterinstance a;
COMMENT ON TABLE "SYSTEM"."MVIEW_FILTERINSTANCE" IS 'Workload filter instance records';

-- ----------------------------
-- View structure for MVIEW_LOG
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."MVIEW_LOG" AS 
select
      m.runid# as id,
      m.filterid# as filterid,
      m.run_begin,
      m.run_end,
      decode(m.run_type,1,'EVALUATE',2,'EVALUATE_W',3,'RECOMMEND',
                      4,'RECOMMEND_W',5,'VALIDATE',6,'WORKLOAD',
                      7,'FILTER','UNKNOWN') AS type,
      decode(m.status,0,'UNUSED',1,'CANCELLED',2,'IN_PROGRESS',3,'COMPLETED',
                    4,'ERROR','UNKNOWN') AS status,
      m.message,
      m.completed,
      m.total,
      m.error_code
   from system.mview$_adv_log m, all_users u
   where m.uname = u.username
   and   u.user_id = userenv('SCHEMAID');
COMMENT ON TABLE "SYSTEM"."MVIEW_LOG" IS 'Advisor session log';

-- ----------------------------
-- View structure for MVIEW_RECOMMENDATIONS
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."MVIEW_RECOMMENDATIONS" AS 
select
  t1.runid# as runid,
  t1.from_clause as all_tables,
  fact_tables,
  grouping_levels,
  query_text,
  rank# as recommendation_number,
  action_type as recommended_action,
  summary_owner as mview_owner,
  summary_name as mview_name,
  storage_in_bytes,
  pct_performance_gain,
  benefit_to_cost_ratio
from SYSTEM.MVIEW$_ADV_OUTPUT t1, SYSTEM.MVIEW$_ADV_LOG t2, ALL_USERS u
where
  t1.runid# = t2.runid# and
  u.username = t2.uname and
  u.user_id = userenv('SCHEMAID') and
  t1.output_type = 0
order by t1.rank#;
COMMENT ON TABLE "SYSTEM"."MVIEW_RECOMMENDATIONS" IS 'This view gives DBA access to summary recommendations';

-- ----------------------------
-- View structure for MVIEW_WORKLOAD
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."MVIEW_WORKLOAD" AS 
select
  a.collectionid# as workloadid,
  a.collecttime as import_time,
  a.queryid# as queryid,
  a.application,
  a.cardinality,
  a.resultsize,
  a.qdate as lastuse,
  a.frequency,
  a.uname as owner,
  a.priority,
  a.sql_text as query,
  a.exec_time as responsetime
from SYSTEM.MVIEW$_ADV_WORKLOAD A, SYSTEM.MVIEW$_ADV_LOG B, ALL_USERS D
WHERE a.collectionid# = b.runid#
AND b.uname = d.username
AND d.user_id = userenv('SCHEMAID');
COMMENT ON TABLE "SYSTEM"."MVIEW_WORKLOAD" IS 'This view gives DBA access to shared workload';

-- ----------------------------
-- View structure for PRODUCT_PRIVS
-- ----------------------------
CREATE OR REPLACE FORCE VIEW "SYSTEM"."PRODUCT_PRIVS" AS 
SELECT PRODUCT, USERID, ATTRIBUTE, SCOPE,
         NUMERIC_VALUE, CHAR_VALUE, DATE_VALUE, LONG_VALUE
  FROM SQLPLUS_PRODUCT_PROFILE
  WHERE USERID = 'PUBLIC' OR USER LIKE USERID;

-- ----------------------------
-- Procedure structure for ORA$_SYS_REP_AUTH
-- ----------------------------
CREATE OR REPLACE procedure "SYSTEM"."ORA$_SYS_REP_AUTH" as
begin
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.repcat$_repschema TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.repcat$_repprop TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.def$_aqcall TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.def$_calldest TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.def$_error TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.def$_destination TO SYS ' ||
                 'WITH GRANT OPTION';
end;
/

-- ----------------------------
-- Procedure structure for reorder_units
-- ----------------------------
CREATE OR REPLACE PROCEDURE "SYSTEM"."reorder_units"() AS
BEGIN
  UPDATE  "Options" A
	SET A."units_available" = A."units_available" + 20
	WHERE A."id" IN (SELECT "id" FROM "Accesories_Low_Units");
END;
/

-- ----------------------------
-- Procedure structure for REORDER_UNITS
-- ----------------------------
CREATE OR REPLACE PROCEDURE "SYSTEM"."REORDER_UNITS" AS
BEGIN
  UPDATE  "Options" A
	SET A."units_available" = A."units_available" + 20
	WHERE A."id" IN (SELECT "id" FROM "Accesories_Low_Units");
END;
/

-- ----------------------------
-- Sequence structure for LOGMNR_EVOLVE_SEQ$
-- ----------------------------
DROP SEQUENCE "SYSTEM"."LOGMNR_EVOLVE_SEQ$";
CREATE SEQUENCE "SYSTEM"."LOGMNR_EVOLVE_SEQ$"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE 
 ORDER ;

-- ----------------------------
-- Sequence structure for LOGMNR_SEQ$
-- ----------------------------
DROP SEQUENCE "SYSTEM"."LOGMNR_SEQ$";
CREATE SEQUENCE "SYSTEM"."LOGMNR_SEQ$"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE 
 ORDER ;

-- ----------------------------
-- Sequence structure for LOGMNR_UIDS$
-- ----------------------------
DROP SEQUENCE "SYSTEM"."LOGMNR_UIDS$";
CREATE SEQUENCE "SYSTEM"."LOGMNR_UIDS$"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 100
 NOCACHE 
 ORDER ;

-- ----------------------------
-- Sequence structure for MVIEW$_ADVSEQ_GENERIC
-- ----------------------------
DROP SEQUENCE "SYSTEM"."MVIEW$_ADVSEQ_GENERIC";
CREATE SEQUENCE "SYSTEM"."MVIEW$_ADVSEQ_GENERIC"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 4294967295
 START WITH 1
 CACHE 50;

-- ----------------------------
-- Sequence structure for MVIEW$_ADVSEQ_ID
-- ----------------------------
DROP SEQUENCE "SYSTEM"."MVIEW$_ADVSEQ_ID";
CREATE SEQUENCE "SYSTEM"."MVIEW$_ADVSEQ_ID"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 4294967295
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_EXCEPTIONS_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_EXCEPTIONS_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_EXCEPTIONS_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_FLAVOR_NAME_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_FLAVOR_NAME_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_FLAVOR_NAME_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for REPCAT$_FLAVORS_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_FLAVORS_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_FLAVORS_S"
 INCREMENT BY 1
 MINVALUE -2147483647
 MAXVALUE 2147483647
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for REPCAT$_REFRESH_TEMPLATES_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_REPPROP_KEY
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_REPPROP_KEY";
CREATE SEQUENCE "SYSTEM"."REPCAT$_REPPROP_KEY"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_RUNTIME_PARMS_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_RUNTIME_PARMS_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_RUNTIME_PARMS_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_TEMP_OUTPUT_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_TEMP_OUTPUT_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_TEMP_OUTPUT_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_TEMPLATE_OBJECTS_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_TEMPLATE_PARMS_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_TEMPLATE_PARMS_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_TEMPLATE_PARMS_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_TEMPLATE_REFGROUPS_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_TEMPLATE_SITES_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_TEMPLATE_SITES_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_TEMPLATE_SITES_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_USER_AUTHORIZATIONS_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT$_USER_PARM_VALUES_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT$_USER_PARM_VALUES_S";
CREATE SEQUENCE "SYSTEM"."REPCAT$_USER_PARM_VALUES_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for REPCAT_LOG_SEQUENCE
-- ----------------------------
DROP SEQUENCE "SYSTEM"."REPCAT_LOG_SEQUENCE";
CREATE SEQUENCE "SYSTEM"."REPCAT_LOG_SEQUENCE"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_CUSTOMERS
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_CUSTOMERS";
CREATE SEQUENCE "SYSTEM"."SEQ_CUSTOMERS"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 21
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_HISTORICALVEHICLES
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_HISTORICALVEHICLES";
CREATE SEQUENCE "SYSTEM"."SEQ_HISTORICALVEHICLES"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 28
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_INVOICEDETAILS
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_INVOICEDETAILS";
CREATE SEQUENCE "SYSTEM"."SEQ_INVOICEDETAILS"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 20
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_INVOICES
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_INVOICES";
CREATE SEQUENCE "SYSTEM"."SEQ_INVOICES"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 25
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MANUFACTURERS
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_MANUFACTURERS";
CREATE SEQUENCE "SYSTEM"."SEQ_MANUFACTURERS"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 7
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MODELS
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_MODELS";
CREATE SEQUENCE "SYSTEM"."SEQ_MODELS"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 15
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_OPTIONS
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_OPTIONS";
CREATE SEQUENCE "SYSTEM"."SEQ_OPTIONS"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 13
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_OPTIONTYPES
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_OPTIONTYPES";
CREATE SEQUENCE "SYSTEM"."SEQ_OPTIONTYPES"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SALESPERSONS
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_SALESPERSONS";
CREATE SEQUENCE "SYSTEM"."SEQ_SALESPERSONS"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 16
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TRADEINVEHICLES
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_TRADEINVEHICLES";
CREATE SEQUENCE "SYSTEM"."SEQ_TRADEINVEHICLES"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TRADEMARKS
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_TRADEMARKS";
CREATE SEQUENCE "SYSTEM"."SEQ_TRADEMARKS"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 11
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_VEHICLES
-- ----------------------------
DROP SEQUENCE "SYSTEM"."SEQ_VEHICLES";
CREATE SEQUENCE "SYSTEM"."SEQ_VEHICLES"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 51
 NOCACHE ;

-- ----------------------------
-- Sequence structure for TEMPLATE$_TARGETS_S
-- ----------------------------
DROP SEQUENCE "SYSTEM"."TEMPLATE$_TARGETS_S";
CREATE SEQUENCE "SYSTEM"."TEMPLATE$_TARGETS_S"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Uniques structure for table AQ$_INTERNET_AGENT_PRIVS
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS" ADD UNIQUE ("AGENT_NAME", "DB_USERNAME");

-- ----------------------------
-- Checks structure for table AQ$_INTERNET_AGENT_PRIVS
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS" ADD CHECK ("AGENT_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS" ADD CHECK ("DB_USERNAME" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table AQ$_INTERNET_AGENTS
-- ----------------------------

-- ----------------------------
-- Checks structure for table AQ$_INTERNET_AGENTS
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENTS" ADD CHECK ("AGENT_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENTS" ADD CHECK ("PROTOCOL" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table AQ$_INTERNET_AGENTS
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENTS" ADD PRIMARY KEY ("AGENT_NAME");

-- ----------------------------
-- Indexes structure for table AQ$_QUEUE_TABLES
-- ----------------------------
CREATE INDEX "SYSTEM"."I1_QUEUE_TABLES"
ON "SYSTEM"."AQ$_QUEUE_TABLES" ("OBJNO" ASC, "SCHEMA" ASC, "FLAGS" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table AQ$_QUEUE_TABLES
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_QUEUE_TABLES" ADD CHECK ("SCHEMA" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUE_TABLES" ADD CHECK ("NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUE_TABLES" ADD CHECK ("UDATA_TYPE" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUE_TABLES" ADD CHECK ("OBJNO" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUE_TABLES" ADD CHECK ("FLAGS" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUE_TABLES" ADD CHECK ("SORT_COLS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table AQ$_QUEUE_TABLES
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_QUEUE_TABLES" ADD PRIMARY KEY ("OBJNO");

-- ----------------------------
-- Indexes structure for table AQ$_QUEUES
-- ----------------------------
CREATE INDEX "SYSTEM"."I1_QUEUES"
ON "SYSTEM"."AQ$_QUEUES" ("NAME" ASC, "EVENTID" ASC, "TABLE_OBJNO" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Uniques structure for table AQ$_QUEUES
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD UNIQUE ("NAME", "TABLE_OBJNO");

-- ----------------------------
-- Checks structure for table AQ$_QUEUES
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD CHECK ("EVENTID" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD CHECK ("NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD CHECK ("TABLE_OBJNO" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD CHECK ("USAGE" IS NOT NULL);
ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD CHECK ("ENABLE_FLAG" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table AQ$_QUEUES
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD PRIMARY KEY ("OID");

-- ----------------------------
-- Indexes structure for table AQ$_SCHEDULES
-- ----------------------------

-- ----------------------------
-- Uniques structure for table AQ$_SCHEDULES
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_SCHEDULES" ADD UNIQUE ("JOBNO");

-- ----------------------------
-- Checks structure for table AQ$_SCHEDULES
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_SCHEDULES" ADD CHECK ("DESTINATION" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table AQ$_SCHEDULES
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_SCHEDULES" ADD PRIMARY KEY ("OID", "DESTINATION");

-- ----------------------------
-- Indexes structure for table Customers
-- ----------------------------

-- ----------------------------
-- Checks structure for table Customers
-- ----------------------------
ALTER TABLE "SYSTEM"."Customers" ADD CHECK ("id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Customers
-- ----------------------------
ALTER TABLE "SYSTEM"."Customers" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Indexes structure for table DEF$_AQCALL
-- ----------------------------
CREATE INDEX "SYSTEM"."DEF$_TRANORDER"
ON "SYSTEM"."DEF$_AQCALL" ("CSCN" ASC, "ENQ_TID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Primary Key structure for table DEF$_AQCALL
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_AQCALL" ADD PRIMARY KEY ("ENQ_TID", "STEP_NO");

-- ----------------------------
-- Indexes structure for table DEF$_AQERROR
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table DEF$_AQERROR
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_AQERROR" ADD PRIMARY KEY ("ENQ_TID", "STEP_NO");

-- ----------------------------
-- Indexes structure for table DEF$_CALLDEST
-- ----------------------------
CREATE INDEX "SYSTEM"."DEF$_CALLDEST_N2"
ON "SYSTEM"."DEF$_CALLDEST" ("DBLINK" ASC, "CATCHUP" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Primary Key structure for table DEF$_CALLDEST
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_CALLDEST" ADD PRIMARY KEY ("ENQ_TID", "DBLINK", "STEP_NO");

-- ----------------------------
-- Indexes structure for table DEF$_DEFAULTDEST
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table DEF$_DEFAULTDEST
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_DEFAULTDEST" ADD PRIMARY KEY ("DBLINK");

-- ----------------------------
-- Indexes structure for table DEF$_DESTINATION
-- ----------------------------

-- ----------------------------
-- Checks structure for table DEF$_DESTINATION
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_DESTINATION" ADD CHECK ("LAST_DELIVERED" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table DEF$_DESTINATION
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_DESTINATION" ADD PRIMARY KEY ("DBLINK", "CATCHUP");

-- ----------------------------
-- Indexes structure for table DEF$_ERROR
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table DEF$_ERROR
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_ERROR" ADD PRIMARY KEY ("ENQ_TID");

-- ----------------------------
-- Indexes structure for table DEF$_LOB
-- ----------------------------
CREATE INDEX "SYSTEM"."DEF$_LOB_N1"
ON "SYSTEM"."DEF$_LOB" ("ENQ_TID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Primary Key structure for table DEF$_LOB
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_LOB" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table DEF$_PROPAGATOR
-- ----------------------------

-- ----------------------------
-- Triggers structure for table DEF$_PROPAGATOR
-- ----------------------------
CREATE OR REPLACE TRIGGER "SYSTEM"."DEF$_PROPAGATOR_TRIG" BEFORE INSERT ON "SYSTEM"."DEF$_PROPAGATOR" REFERENCING OLD AS "OLD" NEW AS "NEW" ENABLE
DECLARE
  prop_count  NUMBER;
BEGIN
  SELECT count(*) into prop_count
    FROM system.def$_propagator;

  IF (prop_count > 0) THEN
    -- Raise duplicate propagator error
    sys.dbms_sys_error.raise_system_error(-23394);
  END IF;
END;
-- ----------------------------
-- Checks structure for table DEF$_PROPAGATOR
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_PROPAGATOR" ADD CHECK ("USERNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."DEF$_PROPAGATOR" ADD CHECK ("CREATED" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table DEF$_PROPAGATOR
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_PROPAGATOR" ADD PRIMARY KEY ("USERID");

-- ----------------------------
-- Indexes structure for table DEF$_PUSHED_TRANSACTIONS
-- ----------------------------

-- ----------------------------
-- Checks structure for table DEF$_PUSHED_TRANSACTIONS
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS" ADD CHECK (disabled IN ('T', 'F'));

-- ----------------------------
-- Primary Key structure for table DEF$_PUSHED_TRANSACTIONS
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS" ADD PRIMARY KEY ("SOURCE_SITE_ID");

-- ----------------------------
-- Indexes structure for table HELP
-- ----------------------------

-- ----------------------------
-- Checks structure for table HELP
-- ----------------------------
ALTER TABLE "SYSTEM"."HELP" ADD CHECK ("TOPIC" IS NOT NULL);
ALTER TABLE "SYSTEM"."HELP" ADD CHECK ("SEQ" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table HELP
-- ----------------------------
ALTER TABLE "SYSTEM"."HELP" ADD PRIMARY KEY ("TOPIC", "SEQ");

-- ----------------------------
-- Checks structure for table Historical_Vehicles
-- ----------------------------
ALTER TABLE "SYSTEM"."Historical_Vehicles" ADD CHECK ("Transaction" IN ('New','Trade','Sold'));
ALTER TABLE "SYSTEM"."Historical_Vehicles" ADD CHECK ("id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Historical_Vehicles" ADD CHECK ("date" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table Invoice_Details
-- ----------------------------

-- ----------------------------
-- Triggers structure for table Invoice_Details
-- ----------------------------
CREATE OR REPLACE TRIGGER "SYSTEM"."decrease_units_accesories" AFTER INSERT ON "SYSTEM"."Invoice_Details" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
BEGIN
	UPDATE  "Options" A
	SET A."units_available" = A."units_available" - 1
	WHERE A."id" = :new."option_id";
END;
-- ----------------------------
-- Checks structure for table Invoice_Details
-- ----------------------------
ALTER TABLE "SYSTEM"."Invoice_Details" ADD CHECK ("id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Invoice_Details" ADD CHECK ("invoice_id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Invoice_Details" ADD CHECK ("option_id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Invoice_Details
-- ----------------------------
ALTER TABLE "SYSTEM"."Invoice_Details" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Indexes structure for table Invoices
-- ----------------------------

-- ----------------------------
-- Triggers structure for table Invoices
-- ----------------------------
CREATE OR REPLACE TRIGGER "SYSTEM"."historical_vehicles_invoices" AFTER INSERT ON "SYSTEM"."Invoices" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
BEGIN
	INSERT INTO "Historical_Vehicles" ("id", "date", "vehicle_id", "invoice_id", "Transaction") 
	VALUES (seq_historicalvehicles.nextval, :new."date", :new."vehicle_id", :new."id", 'Sold');
END;
-- ----------------------------
-- Checks structure for table Invoices
-- ----------------------------
ALTER TABLE "SYSTEM"."Invoices" ADD CHECK ("id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Invoices" ADD CHECK ("date" IS NOT NULL);
ALTER TABLE "SYSTEM"."Invoices" ADD CHECK ("vehicle_id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Invoices" ADD CHECK ("customer_id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Invoices" ADD CHECK ("salesperson_id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Invoices
-- ----------------------------
ALTER TABLE "SYSTEM"."Invoices" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Indexes structure for table LOGMNR_AGE_SPILL$
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGMNR_AGE_SPILL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_AGE_SPILL$" ADD PRIMARY KEY ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "SEQUENCE#");

-- ----------------------------
-- Indexes structure for table LOGMNR_ATTRCOL$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1ATTRCOL$"
ON "SYSTEM"."LOGMNR_ATTRCOL$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_ATTRCOL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_ATTRCOL$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_ATTRCOL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_ATTRCOL$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_ATTRIBUTE$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1ATTRIBUTE$"
ON "SYSTEM"."LOGMNR_ATTRIBUTE$" ("LOGMNR_UID" ASC, "TOID" ASC, "VERSION#" ASC, "ATTRIBUTE#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_ATTRIBUTE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_ATTRIBUTE$" ADD CHECK ("TOID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_ATTRIBUTE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_ATTRIBUTE$" ADD PRIMARY KEY ("LOGMNR_UID", "TOID", "VERSION#", "ATTRIBUTE#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_CCOL$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1CCOL$"
ON "SYSTEM"."LOGMNR_CCOL$" ("LOGMNR_UID" ASC, "CON#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_CCOL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_CCOL$" ADD CHECK ("INTCOL#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_CCOL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_CCOL$" ADD PRIMARY KEY ("LOGMNR_UID", "CON#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_CDEF$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1CDEF$"
ON "SYSTEM"."LOGMNR_CDEF$" ("LOGMNR_UID" ASC, "CON#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_CDEF$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_CDEF$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_CDEF$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_CDEF$" ADD PRIMARY KEY ("LOGMNR_UID", "CON#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_COL$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1COL$"
ON "SYSTEM"."LOGMNR_COL$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2COL$"
ON "SYSTEM"."LOGMNR_COL$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "NAME" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I3COL$"
ON "SYSTEM"."LOGMNR_COL$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "COL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_COL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_COL$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_COL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_COL$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_COLTYPE$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1COLTYPE$"
ON "SYSTEM"."LOGMNR_COLTYPE$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_COLTYPE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_COLTYPE$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_COLTYPE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_COLTYPE$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_DICTIONARY$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1DICTIONARY$"
ON "SYSTEM"."LOGMNR_DICTIONARY$" ("LOGMNR_UID" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_DICTIONARY$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_DICTIONARY$" ADD CHECK ("DB_DICT_OBJECTCOUNT" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_DICTIONARY$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_DICTIONARY$" ADD PRIMARY KEY ("LOGMNR_UID") DISABLE;

-- ----------------------------
-- Primary Key structure for table LOGMNR_DICTSTATE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_DICTSTATE$" ADD PRIMARY KEY ("LOGMNR_UID") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_ENC$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1ENC$"
ON "SYSTEM"."LOGMNR_ENC$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "OWNER#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_ENC$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_ENC$" ADD CHECK ("MKEYID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_ENC$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_ENC$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "OWNER#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_ICOL$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1ICOL$"
ON "SYSTEM"."LOGMNR_ICOL$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_ICOL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_ICOL$" ADD CHECK ("INTCOL#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_ICOL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_ICOL$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_IND$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1IND$"
ON "SYSTEM"."LOGMNR_IND$" ("LOGMNR_UID" ASC, "OBJ#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2IND$"
ON "SYSTEM"."LOGMNR_IND$" ("LOGMNR_UID" ASC, "BO#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_IND$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_IND$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_IND$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_IND$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_INDCOMPART$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1INDCOMPART$"
ON "SYSTEM"."LOGMNR_INDCOMPART$" ("LOGMNR_UID" ASC, "OBJ#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_INDCOMPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_INDCOMPART$" ADD CHECK ("PART#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_INDCOMPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_INDCOMPART$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_INDPART$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1INDPART$"
ON "SYSTEM"."LOGMNR_INDPART$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "BO#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2INDPART$"
ON "SYSTEM"."LOGMNR_INDPART$" ("LOGMNR_UID" ASC, "BO#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_INDPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_INDPART$" ADD CHECK ("TS#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_INDPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_INDPART$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "BO#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_INDSUBPART$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1INDSUBPART$"
ON "SYSTEM"."LOGMNR_INDSUBPART$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "POBJ#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_INDSUBPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_INDSUBPART$" ADD CHECK ("TS#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_INDSUBPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_INDSUBPART$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "POBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_INTEGRATED_SPILL$
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGMNR_INTEGRATED_SPILL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_INTEGRATED_SPILL$" ADD PRIMARY KEY ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "FLAG");

-- ----------------------------
-- Indexes structure for table LOGMNR_KOPM$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1KOPM$"
ON "SYSTEM"."LOGMNR_KOPM$" ("LOGMNR_UID" ASC, "NAME" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_KOPM$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_KOPM$" ADD CHECK ("NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_KOPM$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_KOPM$" ADD PRIMARY KEY ("LOGMNR_UID", "NAME") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_LOB$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1LOB$"
ON "SYSTEM"."LOGMNR_LOB$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_LOB$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_LOB$" ADD CHECK ("CHUNK" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_LOB$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_LOB$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_LOBFRAG$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1LOBFRAG$"
ON "SYSTEM"."LOGMNR_LOBFRAG$" ("LOGMNR_UID" ASC, "FRAGOBJ#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_LOBFRAG$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_LOBFRAG$" ADD CHECK ("FRAG#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_LOBFRAG$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_LOBFRAG$" ADD PRIMARY KEY ("LOGMNR_UID", "FRAGOBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_LOG$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_LOG$_FIRST_CHANGE#"
ON "SYSTEM"."LOGMNR_LOG$" ("FIRST_CHANGE#" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_LOG$_FLAGS"
ON "SYSTEM"."LOGMNR_LOG$" ("FLAGS" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_LOG$_RECID"
ON "SYSTEM"."LOGMNR_LOG$" ("RECID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Primary Key structure for table LOGMNR_LOG$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_LOG$" ADD PRIMARY KEY ("SESSION#", "THREAD#", "SEQUENCE#", "FIRST_CHANGE#", "DB_ID", "RESETLOGS_CHANGE#", "RESET_TIMESTAMP");

-- ----------------------------
-- Indexes structure for table LOGMNR_LOGMNR_BUILDLOG
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1LOGMNR_BUILDLOG"
ON "SYSTEM"."LOGMNR_LOGMNR_BUILDLOG" ("LOGMNR_UID" ASC, "INITIAL_XID" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_LOGMNR_BUILDLOG
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_LOGMNR_BUILDLOG" ADD CHECK ("INITIAL_XID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_LOGMNR_BUILDLOG
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_LOGMNR_BUILDLOG" ADD PRIMARY KEY ("LOGMNR_UID", "INITIAL_XID") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_NTAB$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1NTAB$"
ON "SYSTEM"."LOGMNR_NTAB$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2NTAB$"
ON "SYSTEM"."LOGMNR_NTAB$" ("LOGMNR_UID" ASC, "NTAB#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_NTAB$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_NTAB$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_NTAB$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_NTAB$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_OBJ$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1OBJ$"
ON "SYSTEM"."LOGMNR_OBJ$" ("LOGMNR_UID" ASC, "OBJ#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2OBJ$"
ON "SYSTEM"."LOGMNR_OBJ$" ("LOGMNR_UID" ASC, "OID$" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_OBJ$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_OBJ$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_OBJ$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_OBJ$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_OPQTYPE$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1OPQTYPE$"
ON "SYSTEM"."LOGMNR_OPQTYPE$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_OPQTYPE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_OPQTYPE$" ADD CHECK ("INTCOL#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNR_OPQTYPE$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_OPQTYPE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_OPQTYPE$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_PARAMETER$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_PARAMETER_INDX"
ON "SYSTEM"."LOGMNR_PARAMETER$" ("SESSION#" ASC, "NAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_PARAMETER$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_PARAMETER$" ADD CHECK ("SESSION#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNR_PARAMETER$" ADD CHECK ("NAME" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table LOGMNR_PARTOBJ$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1PARTOBJ$"
ON "SYSTEM"."LOGMNR_PARTOBJ$" ("LOGMNR_UID" ASC, "OBJ#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_PARTOBJ$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_PARTOBJ$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_PARTOBJ$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_PARTOBJ$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_PROCESSED_LOG$
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGMNR_PROCESSED_LOG$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_PROCESSED_LOG$" ADD PRIMARY KEY ("SESSION#", "THREAD#");

-- ----------------------------
-- Indexes structure for table LOGMNR_PROPS$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1PROPS$"
ON "SYSTEM"."LOGMNR_PROPS$" ("LOGMNR_UID" ASC, "NAME" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_PROPS$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_PROPS$" ADD CHECK ("NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_PROPS$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_PROPS$" ADD PRIMARY KEY ("LOGMNR_UID", "NAME") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_REFCON$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1REFCON$"
ON "SYSTEM"."LOGMNR_REFCON$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_REFCON$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_REFCON$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_REFCON$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_REFCON$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_RESTART_CKPT$
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGMNR_RESTART_CKPT$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_RESTART_CKPT$" ADD PRIMARY KEY ("SESSION#", "CKPT_SCN", "XIDUSN", "XIDSLT", "XIDSQN", "SESSION_NUM", "SERIAL_NUM");

-- ----------------------------
-- Indexes structure for table LOGMNR_RESTART_CKPT_TXINFO$
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGMNR_RESTART_CKPT_TXINFO$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_RESTART_CKPT_TXINFO$" ADD PRIMARY KEY ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "SESSION_NUM", "SERIAL_NUM", "EFFECTIVE_SCN");

-- ----------------------------
-- Indexes structure for table LOGMNR_SEED$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1SEED$"
ON "SYSTEM"."LOGMNR_SEED$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2SEED$"
ON "SYSTEM"."LOGMNR_SEED$" ("LOGMNR_UID" ASC, "SCHEMANAME" ASC, "TABLE_NAME" ASC, "COL_NAME" ASC, "OBJ#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_SEED$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SEED$" ADD CHECK ("NULL$" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_SEED$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SEED$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_SESSION$
-- ----------------------------

-- ----------------------------
-- Uniques structure for table LOGMNR_SESSION$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SESSION$" ADD UNIQUE ("SESSION_NAME");

-- ----------------------------
-- Checks structure for table LOGMNR_SESSION$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SESSION$" ADD CHECK ("SESSION_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_SESSION$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SESSION$" ADD PRIMARY KEY ("SESSION#");

-- ----------------------------
-- Indexes structure for table LOGMNR_SESSION_ACTIONS$
-- ----------------------------

-- ----------------------------
-- Checks structure for table LOGMNR_SESSION_ACTIONS$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$" ADD CHECK ("ACTIONNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$" ADD CHECK ("LOGMNRSESSION#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$" ADD CHECK ("PROCESSROLE#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$" ADD CHECK ("ACTIONTYPE#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_SESSION_ACTIONS$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$" ADD PRIMARY KEY ("LOGMNRSESSION#", "ACTIONNAME");

-- ----------------------------
-- Indexes structure for table LOGMNR_SESSION_EVOLVE$
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGMNR_SESSION_EVOLVE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SESSION_EVOLVE$" ADD PRIMARY KEY ("SESSION#", "DB_ID", "RESET_SCN", "RESET_TIMESTAMP");

-- ----------------------------
-- Indexes structure for table LOGMNR_SPILL$
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGMNR_SPILL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SPILL$" ADD PRIMARY KEY ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "STARTIDX", "ENDIDX", "FLAG", "SEQUENCE#");

-- ----------------------------
-- Indexes structure for table LOGMNR_SUBCOLTYPE$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1SUBCOLTYPE$"
ON "SYSTEM"."LOGMNR_SUBCOLTYPE$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "INTCOL#" ASC, "TOID" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_SUBCOLTYPE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$" ADD CHECK ("INTCOL#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$" ADD CHECK ("TOID" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$" ADD CHECK ("VERSION#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_SUBCOLTYPE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#", "TOID") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_TAB$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1TAB$"
ON "SYSTEM"."LOGMNR_TAB$" ("LOGMNR_UID" ASC, "OBJ#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2TAB$"
ON "SYSTEM"."LOGMNR_TAB$" ("LOGMNR_UID" ASC, "BOBJ#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_TAB$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TAB$" ADD CHECK ("OBJ#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_TAB$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TAB$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_TABCOMPART$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1TABCOMPART$"
ON "SYSTEM"."LOGMNR_TABCOMPART$" ("LOGMNR_UID" ASC, "OBJ#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2TABCOMPART$"
ON "SYSTEM"."LOGMNR_TABCOMPART$" ("LOGMNR_UID" ASC, "BO#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_TABCOMPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TABCOMPART$" ADD CHECK ("PART#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_TABCOMPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TABCOMPART$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_TABPART$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1TABPART$"
ON "SYSTEM"."LOGMNR_TABPART$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "BO#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2TABPART$"
ON "SYSTEM"."LOGMNR_TABPART$" ("LOGMNR_UID" ASC, "BO#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_TABPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TABPART$" ADD CHECK ("BO#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_TABPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TABPART$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "BO#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_TABSUBPART$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1TABSUBPART$"
ON "SYSTEM"."LOGMNR_TABSUBPART$" ("LOGMNR_UID" ASC, "OBJ#" ASC, "POBJ#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNR_I2TABSUBPART$"
ON "SYSTEM"."LOGMNR_TABSUBPART$" ("LOGMNR_UID" ASC, "POBJ#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_TABSUBPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TABSUBPART$" ADD CHECK ("TS#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_TABSUBPART$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TABSUBPART$" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "POBJ#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_TS$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1TS$"
ON "SYSTEM"."LOGMNR_TS$" ("LOGMNR_UID" ASC, "TS#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_TS$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TS$" ADD CHECK ("BLOCKSIZE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_TS$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TS$" ADD PRIMARY KEY ("LOGMNR_UID", "TS#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_TYPE$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1TYPE$"
ON "SYSTEM"."LOGMNR_TYPE$" ("LOGMNR_UID" ASC, "TOID" ASC, "VERSION#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_TYPE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TYPE$" ADD CHECK ("TOID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_TYPE$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_TYPE$" ADD PRIMARY KEY ("LOGMNR_UID", "TOID", "VERSION#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNR_UID$
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGMNR_UID$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_UID$" ADD PRIMARY KEY ("SESSION#");

-- ----------------------------
-- Indexes structure for table LOGMNR_USER$
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNR_I1USER$"
ON "SYSTEM"."LOGMNR_USER$" ("LOGMNR_UID" ASC, "USER#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNR_USER$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_USER$" ADD CHECK ("NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNR_USER$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNR_USER$" ADD PRIMARY KEY ("LOGMNR_UID", "USER#") DISABLE;

-- ----------------------------
-- Indexes structure for table LOGMNRC_DBNAME_UID_MAP
-- ----------------------------

-- ----------------------------
-- Checks structure for table LOGMNRC_DBNAME_UID_MAP
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_DBNAME_UID_MAP" ADD CHECK ("GLOBAL_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNRC_DBNAME_UID_MAP
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_DBNAME_UID_MAP" ADD PRIMARY KEY ("GLOBAL_NAME");

-- ----------------------------
-- Indexes structure for table LOGMNRC_GSBA
-- ----------------------------

-- ----------------------------
-- Checks structure for table LOGMNRC_GSBA
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_GSBA" ADD CHECK ("LOGMNR_UID" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GSBA" ADD CHECK ("AS_OF_SCN" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNRC_GSBA
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_GSBA" ADD PRIMARY KEY ("LOGMNR_UID", "AS_OF_SCN");

-- ----------------------------
-- Indexes structure for table LOGMNRC_GSII
-- ----------------------------

-- ----------------------------
-- Checks structure for table LOGMNRC_GSII
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_GSII" ADD CHECK ("LOGMNR_UID" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GSII" ADD CHECK ("OBJ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GSII" ADD CHECK ("BO#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GSII" ADD CHECK ("INDTYPE#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNRC_GSII
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_GSII" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#");

-- ----------------------------
-- Indexes structure for table LOGMNRC_GTCS
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNRC_I2GTCS"
ON "SYSTEM"."LOGMNRC_GTCS" ("LOGMNR_UID" ASC, "OBJ#" ASC, "OBJV#" ASC, "SEGCOL#" ASC, "INTCOL#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNRC_GTCS
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD CHECK ("LOGMNR_UID" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD CHECK ("OBJ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD CHECK ("OBJV#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD CHECK ("SEGCOL#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD CHECK ("INTCOL#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD CHECK ("COLNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD CHECK ("TYPE#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNRC_GTCS
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD PRIMARY KEY ("LOGMNR_UID", "OBJ#", "OBJV#", "INTCOL#");

-- ----------------------------
-- Indexes structure for table LOGMNRC_GTLO
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNRC_I2GTLO"
ON "SYSTEM"."LOGMNRC_GTLO" ("LOGMNR_UID" ASC, "BASEOBJ#" ASC, "BASEOBJV#" ASC)
NOLOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGMNRC_I3GTLO"
ON "SYSTEM"."LOGMNRC_GTLO" ("LOGMNR_UID" ASC, "DROP_SCN" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNRC_GTLO
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("LOGMNR_UID" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("KEYOBJ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("LVLCNT" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("BASEOBJ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("BASEOBJV#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("LVL0TYPE#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("OWNERNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("LVL0NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("INTCOLS" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CHECK ("START_SCN" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNRC_GTLO
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD PRIMARY KEY ("LOGMNR_UID", "KEYOBJ#", "BASEOBJV#");

-- ----------------------------
-- Indexes structure for table LOGMNRP_CTAS_PART_MAP
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGMNRP_CTAS_PART_MAP_I"
ON "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ("LOGMNR_UID" ASC, "BASEOBJ#" ASC, "BASEOBJV#" ASC, "PART#" ASC)
NOLOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGMNRP_CTAS_PART_MAP
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ADD CHECK ("LOGMNR_UID" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ADD CHECK ("BASEOBJ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ADD CHECK ("BASEOBJV#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ADD CHECK ("KEYOBJ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ADD CHECK ("PART#" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNRP_CTAS_PART_MAP
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ADD PRIMARY KEY ("LOGMNR_UID", "BASEOBJV#", "KEYOBJ#");

-- ----------------------------
-- Indexes structure for table LOGMNRT_MDDL$
-- ----------------------------

-- ----------------------------
-- Checks structure for table LOGMNRT_MDDL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRT_MDDL$" ADD CHECK ("DEST_ROWID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGMNRT_MDDL$
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGMNRT_MDDL$" ADD PRIMARY KEY ("SOURCE_OBJ#", "SOURCE_ROWID");

-- ----------------------------
-- Checks structure for table LOGSTDBY$APPLY_MILESTONE
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE" ADD CHECK ("SESSION_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE" ADD CHECK ("COMMIT_SCN" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE" ADD CHECK ("SYNCH_SCN" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE" ADD CHECK ("EPOCH" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE" ADD CHECK ("PROCESSED_SCN" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE" ADD CHECK ("FETCHLWM_SCN" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table LOGSTDBY$EDS_TABLES
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table LOGSTDBY$EDS_TABLES
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGSTDBY$EDS_TABLES" ADD PRIMARY KEY ("OWNER", "TABLE_NAME");

-- ----------------------------
-- Indexes structure for table LOGSTDBY$EVENTS
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGSTDBY$EVENTS_IND"
ON "SYSTEM"."LOGSTDBY$EVENTS" ("EVENT_TIME" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGSTDBY$EVENTS_IND_SCN"
ON "SYSTEM"."LOGSTDBY$EVENTS" ("COMMIT_SCN" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGSTDBY$EVENTS_IND_XID"
ON "SYSTEM"."LOGSTDBY$EVENTS" ("XIDUSN" ASC, "XIDSLT" ASC, "XIDSQN" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGSTDBY$EVENTS
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGSTDBY$EVENTS" ADD CHECK ("EVENT_TIME" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table LOGSTDBY$FLASHBACK_SCN
-- ----------------------------

-- ----------------------------
-- Checks structure for table LOGSTDBY$FLASHBACK_SCN
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGSTDBY$FLASHBACK_SCN" ADD CHECK ("PRIMARY_SCN" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table LOGSTDBY$FLASHBACK_SCN
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGSTDBY$FLASHBACK_SCN" ADD PRIMARY KEY ("PRIMARY_SCN");

-- ----------------------------
-- Indexes structure for table LOGSTDBY$SKIP
-- ----------------------------
CREATE INDEX "SYSTEM"."LOGSTDBY$SKIP_IDX1"
ON "SYSTEM"."LOGSTDBY$SKIP" ("USE_LIKE" ASC, "SCHEMA" ASC, "NAME" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."LOGSTDBY$SKIP_IDX2"
ON "SYSTEM"."LOGSTDBY$SKIP" ("STATEMENT_OPT" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table LOGSTDBY$SKIP_SUPPORT
-- ----------------------------
CREATE UNIQUE INDEX "SYSTEM"."LOGSTDBY$SKIP_IND"
ON "SYSTEM"."LOGSTDBY$SKIP_SUPPORT" ("NAME" ASC, "ACTION" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table LOGSTDBY$SKIP_SUPPORT
-- ----------------------------
ALTER TABLE "SYSTEM"."LOGSTDBY$SKIP_SUPPORT" ADD CHECK ("ACTION" IS NOT NULL);
ALTER TABLE "SYSTEM"."LOGSTDBY$SKIP_SUPPORT" ADD CHECK ("NAME" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table Manufacturers
-- ----------------------------

-- ----------------------------
-- Checks structure for table Manufacturers
-- ----------------------------
ALTER TABLE "SYSTEM"."Manufacturers" ADD CHECK ("id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Manufacturers
-- ----------------------------
ALTER TABLE "SYSTEM"."Manufacturers" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Indexes structure for table Models
-- ----------------------------

-- ----------------------------
-- Checks structure for table Models
-- ----------------------------
ALTER TABLE "SYSTEM"."Models" ADD CHECK ("id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Models" ADD CHECK ("trademark_id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Models
-- ----------------------------
ALTER TABLE "SYSTEM"."Models" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_AJG
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_AJG
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD CHECK ("AJGID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD CHECK ("RUNID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD CHECK ("AJGDESLEN" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD CHECK ("AJGDES" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD CHECK ("HASHVALUE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_AJG
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD PRIMARY KEY ("AJGID#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_BASETABLE
-- ----------------------------
CREATE INDEX "SYSTEM"."MVIEW$_ADV_BASETABLE_IDX_01"
ON "SYSTEM"."MVIEW$_ADV_BASETABLE" ("QUERYID#" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_BASETABLE
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE" ADD CHECK ("COLLECTIONID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE" ADD CHECK ("QUERYID#" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_CLIQUE
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_CLIQUE
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("CLIQUEID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("RUNID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("CLIQUEDESLEN" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("CLIQUEDES" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("HASHVALUE" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("FREQUENCY" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("BYTECOST" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("ROWSIZE" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CHECK ("NUMROWS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_CLIQUE
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD PRIMARY KEY ("CLIQUEID#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_ELIGIBLE
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_ELIGIBLE
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD CHECK ("SUMOBJN#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD CHECK ("RUNID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD CHECK ("BYTECOST" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD CHECK ("FLAGS" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD CHECK ("FREQUENCY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_ELIGIBLE
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD PRIMARY KEY ("SUMOBJN#", "RUNID#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_FILTER
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_FILTER
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FILTER" ADD CHECK ("FILTERID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FILTER" ADD CHECK ("SUBFILTERNUM#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FILTER" ADD CHECK ("SUBFILTERTYPE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_FILTER
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FILTER" ADD PRIMARY KEY ("FILTERID#", "SUBFILTERNUM#");

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_FILTERINSTANCE
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE" ADD CHECK ("RUNID#" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_FJG
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_FJG
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD CHECK ("FJGID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD CHECK ("AJGID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD CHECK ("FJGDESLEN" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD CHECK ("FJGDES" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD CHECK ("HASHVALUE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_FJG
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD PRIMARY KEY ("FJGID#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_GC
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_GC
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD CHECK ("GCID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD CHECK ("FJGID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD CHECK ("GCDESLEN" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD CHECK ("GCDES" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD CHECK ("HASHVALUE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_GC
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD PRIMARY KEY ("GCID#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_INFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_INFO
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_INFO" ADD CHECK ("RUNID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_INFO" ADD CHECK ("SEQ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_INFO" ADD CHECK ("TYPE" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_INFO" ADD CHECK ("INFOLEN" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_INFO
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_INFO" ADD PRIMARY KEY ("RUNID#", "SEQ#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_JOURNAL
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_JOURNAL
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" ADD CHECK ("RUNID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" ADD CHECK ("SEQ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" ADD CHECK ("TIMESTAMP" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" ADD CHECK ("FLAGS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_JOURNAL
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" ADD PRIMARY KEY ("RUNID#", "SEQ#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_LEVEL
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_LEVEL
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD CHECK ("RUNID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD CHECK ("LEVELID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD CHECK ("FLAGS" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD CHECK ("TBLOBJ#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD CHECK ("COLUMNLIST" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_LEVEL
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD PRIMARY KEY ("RUNID#", "LEVELID#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_LOG
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LOG" ADD CHECK ("STATUS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_LOG
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LOG" ADD PRIMARY KEY ("RUNID#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_OUTPUT
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_OUTPUT
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" ADD CHECK ("RUNID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" ADD CHECK ("OUTPUT_TYPE" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" ADD CHECK ("BENEFIT_TO_COST_RATIO" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_OUTPUT
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" ADD PRIMARY KEY ("RUNID#", "RANK#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_PARAMETERS
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_PARAMETERS
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_PARAMETERS" ADD CHECK ("PARAMETER_TYPE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_PARAMETERS
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_PARAMETERS" ADD PRIMARY KEY ("PARAMETER_NAME");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_PRETTY
-- ----------------------------
CREATE INDEX "SYSTEM"."MVIEW$_ADV_PRETTY_IDX_01"
ON "SYSTEM"."MVIEW$_ADV_PRETTY" ("QUERYID#" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_ROLLUP
-- ----------------------------

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_ROLLUP
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD CHECK ("RUNID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD CHECK ("CLEVELID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD CHECK ("PLEVELID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD CHECK ("FLAGS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_ROLLUP
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD PRIMARY KEY ("RUNID#", "CLEVELID#", "PLEVELID#");

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_SQLDEPEND
-- ----------------------------
CREATE INDEX "SYSTEM"."MVIEW$_ADV_SQLDEPEND_IDX_01"
ON "SYSTEM"."MVIEW$_ADV_SQLDEPEND" ("COLLECTIONID#" ASC, "FROM_ADDRESS" ASC, "FROM_HASH" ASC, "INST_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_TEMP
-- ----------------------------
CREATE INDEX "SYSTEM"."MVIEW$_ADV_TEMP_IDX_01"
ON "SYSTEM"."MVIEW$_ADV_TEMP" ("ID#" ASC, "SEQ#" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table MVIEW$_ADV_WORKLOAD
-- ----------------------------
CREATE INDEX "SYSTEM"."MVIEW$_ADV_WORKLOAD_IDX_01"
ON "SYSTEM"."MVIEW$_ADV_WORKLOAD" ("COLLECTIONID#" ASC, "QUERYID#" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table MVIEW$_ADV_WORKLOAD
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" ADD CHECK ("QUERYID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" ADD CHECK ("COLLECTIONID#" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" ADD CHECK ("COLLECTTIME" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" ADD CHECK ("UNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" ADD CHECK ("SQL_TEXT" IS NOT NULL);
ALTER TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" ADD CHECK ("SQL_TEXTLEN" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MVIEW$_ADV_WORKLOAD
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" ADD PRIMARY KEY ("QUERYID#");

-- ----------------------------
-- Indexes structure for table OL$
-- ----------------------------
CREATE UNIQUE INDEX "SYSTEM"."OL$NAME"
ON "SYSTEM"."OL$" ("OL_NAME" ASC)
LOGGING
VISIBLE;
CREATE UNIQUE INDEX "SYSTEM"."OL$SIGNATURE"
ON "SYSTEM"."OL$" ("SIGNATURE" ASC, "CATEGORY" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table OL$HINTS
-- ----------------------------
CREATE UNIQUE INDEX "SYSTEM"."OL$HNT_NUM"
ON "SYSTEM"."OL$HINTS" ("OL_NAME" ASC, "HINT#" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table Options
-- ----------------------------

-- ----------------------------
-- Checks structure for table Options
-- ----------------------------
ALTER TABLE "SYSTEM"."Options" ADD CHECK ("id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Options" ADD CHECK ("type" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Options
-- ----------------------------
ALTER TABLE "SYSTEM"."Options" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Indexes structure for table REPCAT$_AUDIT_ATTRIBUTE
-- ----------------------------

-- ----------------------------
-- Checks structure for table REPCAT$_AUDIT_ATTRIBUTE
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ADD CHECK ((data_type_id in (2, 4, 5, 6, 7) and
                  data_length is not null)
              or (data_type_id not in (2, 4, 5, 6, 7) and
                  data_length is null)
                 );
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ADD CHECK ("DATA_TYPE_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ADD CHECK ("SOURCE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_AUDIT_ATTRIBUTE
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ADD PRIMARY KEY ("ATTRIBUTE");

-- ----------------------------
-- Indexes structure for table REPCAT$_AUDIT_COLUMN
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_AUDIT_COLUMN_F1_IDX"
ON "SYSTEM"."REPCAT$_AUDIT_COLUMN" ("ATTRIBUTE" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_AUDIT_COLUMN_F2_IDX"
ON "SYSTEM"."REPCAT$_AUDIT_COLUMN" ("BASE_SNAME" ASC, "BASE_ONAME" ASC, "BASE_CONFLICT_TYPE_ID" ASC, "BASE_REFERENCE_NAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_AUDIT_COLUMN
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD CHECK ("BASE_SNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD CHECK ("BASE_ONAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD CHECK ("BASE_CONFLICT_TYPE_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD CHECK ("BASE_REFERENCE_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD CHECK ("ATTRIBUTE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_AUDIT_COLUMN
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD PRIMARY KEY ("COLUMN_NAME", "ONAME", "SNAME");

-- ----------------------------
-- Indexes structure for table REPCAT$_COLUMN_GROUP
-- ----------------------------

-- ----------------------------
-- Checks structure for table REPCAT$_COLUMN_GROUP
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP" ADD CHECK ("SNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP" ADD CHECK ("ONAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP" ADD CHECK ("GROUP_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_COLUMN_GROUP
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP" ADD PRIMARY KEY ("SNAME", "ONAME", "GROUP_NAME");

-- ----------------------------
-- Indexes structure for table REPCAT$_CONFLICT
-- ----------------------------

-- ----------------------------
-- Checks structure for table REPCAT$_CONFLICT
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_CONFLICT" ADD CHECK (conflict_type_id in (1, 2, 3));

-- ----------------------------
-- Primary Key structure for table REPCAT$_CONFLICT
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_CONFLICT" ADD PRIMARY KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME");

-- ----------------------------
-- Indexes structure for table REPCAT$_DDL
-- ----------------------------
CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_DDL"
ON "SYSTEM"."REPCAT$_DDL" ("LOG_ID" ASC, "SOURCE" ASC, "ROLE" ASC, "MASTER" ASC, "LINE" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_DDL_INDEX"
ON "SYSTEM"."REPCAT$_DDL" ("LOG_ID" ASC, "SOURCE" ASC, "ROLE" ASC, "MASTER" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table REPCAT$_EXCEPTIONS
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table REPCAT$_EXCEPTIONS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_EXCEPTIONS" ADD PRIMARY KEY ("EXCEPTION_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_EXTENSION
-- ----------------------------

-- ----------------------------
-- Checks structure for table REPCAT$_EXTENSION
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CHECK (extension_code IN (0));
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CHECK (export_required IN ('Y', 'N'));
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CHECK (push_to_mdef IN ('Y', 'N'));
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CHECK (push_to_new IN ('Y', 'N'));
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CHECK (extension_status IN (0, 1, 2, 3, 4));

-- ----------------------------
-- Primary Key structure for table REPCAT$_EXTENSION
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD PRIMARY KEY ("EXTENSION_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_FLAVOR_OBJECTS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_FLAVOR_OBJECTS_FG"
ON "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ("FLAVOR_ID" ASC, "GNAME" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_FLAVOR_OBJECTS_FK1_IDX"
ON "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ("GNAME" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_FLAVOR_OBJECTS_FK2_IDX"
ON "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ("GNAME" ASC, "FLAVOR_ID" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_FLAVOR_OBJECTS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ADD CHECK (version# >= 0 AND version# < 65536);

-- ----------------------------
-- Primary Key structure for table REPCAT$_FLAVOR_OBJECTS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ADD PRIMARY KEY ("SNAME", "ONAME", "TYPE", "GNAME", "FLAVOR_ID", "GOWNER");

-- ----------------------------
-- Indexes structure for table REPCAT$_FLAVORS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_FLAVORS_FK1_IDX"
ON "SYSTEM"."REPCAT$_FLAVORS" ("GNAME" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_FLAVORS_FNAME"
ON "SYSTEM"."REPCAT$_FLAVORS" ("FNAME" ASC)
LOGGING
VISIBLE;
CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_FLAVORS_GNAME"
ON "SYSTEM"."REPCAT$_FLAVORS" ("GNAME" ASC, "FNAME" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Uniques structure for table REPCAT$_FLAVORS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_FLAVORS" ADD UNIQUE ("GNAME", "FLAVOR_ID", "GOWNER");

-- ----------------------------
-- Checks structure for table REPCAT$_FLAVORS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_FLAVORS" ADD CHECK (published is NULL or (published in ('Y','N','O')));
ALTER TABLE "SYSTEM"."REPCAT$_FLAVORS" ADD CHECK ("FLAVOR_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_FLAVORS" ADD CHECK ("GNAME" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table REPCAT$_GENERATED
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_GENERATED_N1"
ON "SYSTEM"."REPCAT$_GENERATED" ("BASE_SNAME" ASC, "BASE_ONAME" ASC, "BASE_TYPE" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_REPGEN_PRNT_IDX"
ON "SYSTEM"."REPCAT$_GENERATED" ("SNAME" ASC, "ONAME" ASC, "TYPE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_GENERATED
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_GENERATED" ADD CHECK (reason IN (0, 1, 2, 3, 4, 5, 6, 7, 9, 10));

-- ----------------------------
-- Primary Key structure for table REPCAT$_GENERATED
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_GENERATED" ADD PRIMARY KEY ("SNAME", "ONAME", "TYPE", "BASE_SNAME", "BASE_ONAME", "BASE_TYPE");

-- ----------------------------
-- Indexes structure for table REPCAT$_GROUPED_COLUMN
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_GROUPED_COLUMN_F1_IDX"
ON "SYSTEM"."REPCAT$_GROUPED_COLUMN" ("SNAME" ASC, "ONAME" ASC, "GROUP_NAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Primary Key structure for table REPCAT$_GROUPED_COLUMN
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN" ADD PRIMARY KEY ("SNAME", "ONAME", "GROUP_NAME", "COLUMN_NAME", "POS");

-- ----------------------------
-- Indexes structure for table REPCAT$_INSTANTIATION_DDL
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table REPCAT$_INSTANTIATION_DDL
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL" ADD PRIMARY KEY ("REFRESH_TEMPLATE_ID", "PHASE", "DDL_NUM");

-- ----------------------------
-- Indexes structure for table REPCAT$_KEY_COLUMNS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_KEY_COLUMNS_PRNT_IDX"
ON "SYSTEM"."REPCAT$_KEY_COLUMNS" ("SNAME" ASC, "ONAME" ASC, "TYPE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Primary Key structure for table REPCAT$_KEY_COLUMNS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS" ADD PRIMARY KEY ("SNAME", "ONAME", "COL");

-- ----------------------------
-- Indexes structure for table REPCAT$_OBJECT_PARMS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_OBJECT_PARMS_N2"
ON "SYSTEM"."REPCAT$_OBJECT_PARMS" ("TEMPLATE_OBJECT_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_OBJECT_PARMS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" ADD CHECK ("TEMPLATE_PARAMETER_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" ADD CHECK ("TEMPLATE_OBJECT_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_OBJECT_PARMS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" ADD PRIMARY KEY ("TEMPLATE_PARAMETER_ID", "TEMPLATE_OBJECT_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_OBJECT_TYPES
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table REPCAT$_OBJECT_TYPES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_TYPES" ADD PRIMARY KEY ("OBJECT_TYPE_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_PARAMETER_COLUMN
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_PARAMETER_COLUMN_F1_I"
ON "SYSTEM"."REPCAT$_PARAMETER_COLUMN" ("SNAME" ASC, "ONAME" ASC, "CONFLICT_TYPE_ID" ASC, "REFERENCE_NAME" ASC, "SEQUENCE_NO" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Primary Key structure for table REPCAT$_PARAMETER_COLUMN
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN" ADD PRIMARY KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO", "PARAMETER_TABLE_NAME", "PARAMETER_SEQUENCE_NO", "COLUMN_POS");

-- ----------------------------
-- Indexes structure for table REPCAT$_PRIORITY
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_PRIORITY_F1_IDX"
ON "SYSTEM"."REPCAT$_PRIORITY" ("PRIORITY_GROUP" ASC, "SNAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_PRIORITY
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY" ADD CHECK ("SNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY" ADD CHECK ("PRIORITY_GROUP" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY" ADD CHECK ("PRIORITY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_PRIORITY
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY" ADD PRIMARY KEY ("SNAME", "PRIORITY_GROUP", "PRIORITY");

-- ----------------------------
-- Indexes structure for table REPCAT$_PRIORITY_GROUP
-- ----------------------------

-- ----------------------------
-- Uniques structure for table REPCAT$_PRIORITY_GROUP
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD UNIQUE ("SNAME", "PRIORITY_GROUP", "DATA_TYPE_ID", "FIXED_DATA_LENGTH");

-- ----------------------------
-- Checks structure for table REPCAT$_PRIORITY_GROUP
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD CHECK (data_type_id in (1, 2, 3, 4, 5, 6, 7));
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD CHECK ((data_type_id in (4, 7) and
                  fixed_data_length is not null)
              or (data_type_id in (1, 2, 3, 5, 6) and
                  fixed_data_length is null));
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD CHECK ("DATA_TYPE_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_PRIORITY_GROUP
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD PRIMARY KEY ("PRIORITY_GROUP", "SNAME");

-- ----------------------------
-- Indexes structure for table REPCAT$_REFRESH_TEMPLATES
-- ----------------------------

-- ----------------------------
-- Uniques structure for table REPCAT$_REFRESH_TEMPLATES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD UNIQUE ("REFRESH_TEMPLATE_NAME");

-- ----------------------------
-- Checks structure for table REPCAT$_REFRESH_TEMPLATES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CHECK ((public_template in ('Y','N'))
   or public_template is NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CHECK ("REFRESH_TEMPLATE_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CHECK ("OWNER" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CHECK ("REFRESH_GROUP_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CHECK ("REFRESH_TEMPLATE_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CHECK ("REFRESH_GROUP_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CHECK ("TEMPLATE_TYPE_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CHECK ("TEMPLATE_STATUS_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_REFRESH_TEMPLATES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD PRIMARY KEY ("REFRESH_TEMPLATE_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_REPCAT
-- ----------------------------

-- ----------------------------
-- Checks structure for table REPCAT$_REPCAT
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPCAT" ADD CHECK (status IN (0, 1, 2));

-- ----------------------------
-- Primary Key structure for table REPCAT$_REPCAT
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPCAT" ADD PRIMARY KEY ("SNAME", "GOWNER");

-- ----------------------------
-- Indexes structure for table REPCAT$_REPCATLOG
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_REPCATLOG_GNAME"
ON "SYSTEM"."REPCAT$_REPCATLOG" ("GNAME" ASC, "SNAME" ASC, "ONAME" ASC, "TYPE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Triggers structure for table REPCAT$_REPCATLOG
-- ----------------------------
CREATE OR REPLACE TRIGGER "SYSTEM"."REPCATLOGTRIG" AFTER DELETE OR UPDATE ON "SYSTEM"."REPCAT$_REPCATLOG" REFERENCING OLD AS "OLD" NEW AS "NEW" ENABLE
BEGIN
  sys.dbms_alert.signal('repcatlog_alert', '');
END;
-- ----------------------------
-- Checks structure for table REPCAT$_REPCATLOG
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPCATLOG" ADD CHECK (request IN (-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                                       11, 12, 13, 14, 15, 16, 17,
                                       18, 19, 20, 21, 22, 23, 24, 25));
ALTER TABLE "SYSTEM"."REPCAT$_REPCATLOG" ADD CHECK (status IN (0, 1, 2, 3, 4));
ALTER TABLE "SYSTEM"."REPCAT$_REPCATLOG" ADD CHECK (type IN (-1, 0, 1, 2, 4, 5, 7, 8, 9, 11, 12, -3,
                                    13, 14, 32, 33));

-- ----------------------------
-- Primary Key structure for table REPCAT$_REPCATLOG
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPCATLOG" ADD PRIMARY KEY ("ID", "SOURCE", "ROLE", "MASTER");

-- ----------------------------
-- Indexes structure for table REPCAT$_REPCOLUMN
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_REPCOLUMN_FK_IDX"
ON "SYSTEM"."REPCAT$_REPCOLUMN" ("SNAME" ASC, "ONAME" ASC, "TYPE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_REPCOLUMN
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPCOLUMN" ADD CHECK (version# >= 0 AND version# < 65536);

-- ----------------------------
-- Primary Key structure for table REPCAT$_REPCOLUMN
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPCOLUMN" ADD PRIMARY KEY ("SNAME", "ONAME", "TYPE", "CNAME");

-- ----------------------------
-- Indexes structure for table REPCAT$_REPGROUP_PRIVS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_REPGROUP_PRIVS_FK_IDX"
ON "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ("GNAME" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_REPGROUP_PRIVS_N1"
ON "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ("GLOBAL_FLAG" ASC, "USERNAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Uniques structure for table REPCAT$_REPGROUP_PRIVS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ADD UNIQUE ("USERNAME", "GNAME", "GOWNER");

-- ----------------------------
-- Checks structure for table REPCAT$_REPGROUP_PRIVS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ADD CHECK ("USERNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ADD CHECK ("GLOBAL_FLAG" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ADD CHECK ("CREATED" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table REPCAT$_REPOBJECT
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_REPOBJECT_GNAME"
ON "SYSTEM"."REPCAT$_REPOBJECT" ("GNAME" ASC, "ONAME" ASC, "TYPE" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_REPOBJECT_PRNT_IDX"
ON "SYSTEM"."REPCAT$_REPOBJECT" ("GNAME" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_REPOBJECT
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CHECK (genpackage IN (0, 1, 2));
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CHECK (gentrigger IN (0, 1, 2));
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CHECK (status IN (0, 1, 2, 3, 4, 5, 6));
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CHECK (type IN (-1, 1, 2, 4, 5, 7, 8, 9, 11, 12, -3,
                                      -4, 13, 14, 32, 33));
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CHECK (version# >= 0 AND version# < 65536);

-- ----------------------------
-- Primary Key structure for table REPCAT$_REPOBJECT
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD PRIMARY KEY ("SNAME", "ONAME", "TYPE");

-- ----------------------------
-- Indexes structure for table REPCAT$_REPPROP
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_REPPROP_DBLINK_HOW"
ON "SYSTEM"."REPCAT$_REPPROP" ("DBLINK" ASC, "HOW" ASC, "EXTENSION_ID" ASC, "RECIPIENT_KEY" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_REPPROP_KEY_INDEX"
ON "SYSTEM"."REPCAT$_REPPROP" ("RECIPIENT_KEY" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_REPPROP_PRNT2_IDX"
ON "SYSTEM"."REPCAT$_REPPROP" ("SNAME" ASC, "DBLINK" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_REPPROP_PRNT_IDX"
ON "SYSTEM"."REPCAT$_REPPROP" ("SNAME" ASC, "ONAME" ASC, "TYPE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_REPPROP
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPPROP" ADD CHECK (how IN (0, 1, 2, 3));

-- ----------------------------
-- Primary Key structure for table REPCAT$_REPPROP
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPPROP" ADD PRIMARY KEY ("SNAME", "ONAME", "TYPE", "DBLINK");

-- ----------------------------
-- Indexes structure for table REPCAT$_REPSCHEMA
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_REPSCHEMA_DEST_IDX"
ON "SYSTEM"."REPCAT$_REPSCHEMA" ("DBLINK" ASC, "EXTENSION_ID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_REPSCHEMA_PRNT_IDX"
ON "SYSTEM"."REPCAT$_REPSCHEMA" ("SNAME" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Primary Key structure for table REPCAT$_REPSCHEMA
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPSCHEMA" ADD PRIMARY KEY ("SNAME", "DBLINK", "GOWNER");

-- ----------------------------
-- Indexes structure for table REPCAT$_RESOL_STATS_CONTROL
-- ----------------------------

-- ----------------------------
-- Checks structure for table REPCAT$_RESOL_STATS_CONTROL
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL" ADD CHECK ("CREATED" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL" ADD CHECK ("STATUS" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL" ADD CHECK ("STATUS_UPDATE_DATE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_RESOL_STATS_CONTROL
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL" ADD PRIMARY KEY ("SNAME", "ONAME");

-- ----------------------------
-- Indexes structure for table REPCAT$_RESOLUTION
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_RESOLUTION_F3_IDX"
ON "SYSTEM"."REPCAT$_RESOLUTION" ("CONFLICT_TYPE_ID" ASC, "METHOD_NAME" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_RESOLUTION_IDX2"
ON "SYSTEM"."REPCAT$_RESOLUTION" ("SNAME" ASC, "ONAME" ASC, "CONFLICT_TYPE_ID" ASC, "REFERENCE_NAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_RESOLUTION
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION" ADD CHECK ("METHOD_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION" ADD CHECK ("FUNCTION_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_RESOLUTION
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION" ADD PRIMARY KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO");

-- ----------------------------
-- Indexes structure for table REPCAT$_RESOLUTION_METHOD
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table REPCAT$_RESOLUTION_METHOD
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_METHOD" ADD PRIMARY KEY ("CONFLICT_TYPE_ID", "METHOD_NAME");

-- ----------------------------
-- Indexes structure for table REPCAT$_RESOLUTION_STATISTICS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_RESOLUTION_STATS_N1"
ON "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ("SNAME" ASC, "ONAME" ASC, "RESOLVED_DATE" ASC, "CONFLICT_TYPE_ID" ASC, "REFERENCE_NAME" ASC, "METHOD_NAME" ASC, "FUNCTION_NAME" ASC, "PRIORITY_GROUP" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_RESOLUTION_STATISTICS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ADD CHECK ("SNAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ADD CHECK ("ONAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ADD CHECK ("CONFLICT_TYPE_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ADD CHECK ("REFERENCE_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ADD CHECK ("METHOD_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ADD CHECK ("FUNCTION_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ADD CHECK ("RESOLVED_DATE" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ADD CHECK ("PRIMARY_KEY_VALUE" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table REPCAT$_RUNTIME_PARMS
-- ----------------------------
CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_RUNTIME_PARMS_PK"
ON "SYSTEM"."REPCAT$_RUNTIME_PARMS" ("RUNTIME_PARM_ID" ASC, "PARAMETER_NAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table REPCAT$_SITE_OBJECTS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_SITE_OBJECTS_N1"
ON "SYSTEM"."REPCAT$_SITE_OBJECTS" ("TEMPLATE_SITE_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Uniques structure for table REPCAT$_SITE_OBJECTS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD UNIQUE ("TEMPLATE_SITE_ID", "ONAME", "OBJECT_TYPE_ID", "SNAME");

-- ----------------------------
-- Checks structure for table REPCAT$_SITE_OBJECTS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD CHECK ("TEMPLATE_SITE_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD CHECK ("ONAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD CHECK ("OBJECT_TYPE_ID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table REPCAT$_SITES_NEW
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_SITES_NEW_FK1_IDX"
ON "SYSTEM"."REPCAT$_SITES_NEW" ("EXTENSION_ID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_SITES_NEW_FK2_IDX"
ON "SYSTEM"."REPCAT$_SITES_NEW" ("GNAME" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_SITES_NEW
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_SITES_NEW" ADD CHECK (full_instantiation IN ('Y', 'N'));

-- ----------------------------
-- Primary Key structure for table REPCAT$_SITES_NEW
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_SITES_NEW" ADD PRIMARY KEY ("EXTENSION_ID", "GOWNER", "GNAME", "DBLINK");

-- ----------------------------
-- Indexes structure for table REPCAT$_SNAPGROUP
-- ----------------------------
CREATE UNIQUE INDEX "SYSTEM"."I_REPCAT$_SNAPGROUP1"
ON "SYSTEM"."REPCAT$_SNAPGROUP" ("GNAME" ASC, "DBLINK" ASC, "GOWNER" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Indexes structure for table REPCAT$_TEMPLATE_OBJECTS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_N1"
ON "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ("REFRESH_TEMPLATE_ID" ASC, "OBJECT_TYPE" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_N2"
ON "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ("REFRESH_TEMPLATE_ID" ASC, "OBJECT_NAME" ASC, "SCHEMA_NAME" ASC, "OBJECT_TYPE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Uniques structure for table REPCAT$_TEMPLATE_OBJECTS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD UNIQUE ("OBJECT_NAME", "OBJECT_TYPE", "REFRESH_TEMPLATE_ID", "SCHEMA_NAME", "DDL_NUM");

-- ----------------------------
-- Checks structure for table REPCAT$_TEMPLATE_OBJECTS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CHECK (object_version# >= 0 AND object_version# < 65536);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CHECK ("TEMPLATE_OBJECT_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CHECK ("REFRESH_TEMPLATE_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CHECK ("OBJECT_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CHECK ("OBJECT_TYPE" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CHECK ("DDL_NUM" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CHECK ("TEMPLATE_REFGROUP_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_TEMPLATE_OBJECTS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD PRIMARY KEY ("TEMPLATE_OBJECT_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_TEMPLATE_PARMS
-- ----------------------------

-- ----------------------------
-- Uniques structure for table REPCAT$_TEMPLATE_PARMS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD UNIQUE ("REFRESH_TEMPLATE_ID", "PARAMETER_NAME");

-- ----------------------------
-- Checks structure for table REPCAT$_TEMPLATE_PARMS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD CHECK (user_override in ('Y','N'));
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD CHECK ("REFRESH_TEMPLATE_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD CHECK ("PARAMETER_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_TEMPLATE_PARMS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD PRIMARY KEY ("TEMPLATE_PARAMETER_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_TEMPLATE_REFGROUPS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS_N1"
ON "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ("REFRESH_GROUP_NAME" ASC)
LOGGING
VISIBLE;
CREATE INDEX "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS_N2"
ON "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ("REFRESH_TEMPLATE_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_TEMPLATE_REFGROUPS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ADD CHECK ("REFRESH_GROUP_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ADD CHECK ("REFRESH_GROUP_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ADD CHECK ("REFRESH_TEMPLATE_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_TEMPLATE_REFGROUPS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ADD PRIMARY KEY ("REFRESH_GROUP_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_TEMPLATE_SITES
-- ----------------------------

-- ----------------------------
-- Uniques structure for table REPCAT$_TEMPLATE_SITES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD UNIQUE ("REFRESH_TEMPLATE_NAME", "USER_NAME", "SITE_NAME", "REPAPI_SITE_ID");

-- ----------------------------
-- Checks structure for table REPCAT$_TEMPLATE_SITES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CHECK (status in (-100,-1,0,1));
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CHECK ((site_name is not null and repapi_site_id is null) or
   (site_name is null and repapi_site_id is not null));
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CHECK ("REFRESH_TEMPLATE_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CHECK ("USER_NAME" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CHECK ("STATUS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_TEMPLATE_SITES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD PRIMARY KEY ("TEMPLATE_SITE_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_TEMPLATE_STATUS
-- ----------------------------

-- ----------------------------
-- Checks structure for table REPCAT$_TEMPLATE_STATUS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_STATUS" ADD CHECK ("STATUS_TYPE_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_TEMPLATE_STATUS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_STATUS" ADD PRIMARY KEY ("TEMPLATE_STATUS_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_TEMPLATE_TARGETS
-- ----------------------------
CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_TARGETS_U1"
ON "SYSTEM"."REPCAT$_TEMPLATE_TARGETS" ("TARGET_DATABASE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table REPCAT$_TEMPLATE_TARGETS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_TARGETS" ADD CHECK ("TARGET_DATABASE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_TEMPLATE_TARGETS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_TARGETS" ADD PRIMARY KEY ("TEMPLATE_TARGET_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_TEMPLATE_TYPES
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table REPCAT$_TEMPLATE_TYPES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_TYPES" ADD PRIMARY KEY ("TEMPLATE_TYPE_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_USER_AUTHORIZATIONS
-- ----------------------------
CREATE INDEX "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS_N1"
ON "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ("REFRESH_TEMPLATE_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Uniques structure for table REPCAT$_USER_AUTHORIZATIONS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD UNIQUE ("USER_ID", "REFRESH_TEMPLATE_ID");

-- ----------------------------
-- Checks structure for table REPCAT$_USER_AUTHORIZATIONS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD CHECK ("USER_AUTHORIZATION_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD CHECK ("USER_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD CHECK ("REFRESH_TEMPLATE_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_USER_AUTHORIZATIONS
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD PRIMARY KEY ("USER_AUTHORIZATION_ID");

-- ----------------------------
-- Indexes structure for table REPCAT$_USER_PARM_VALUES
-- ----------------------------

-- ----------------------------
-- Uniques structure for table REPCAT$_USER_PARM_VALUES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" ADD UNIQUE ("TEMPLATE_PARAMETER_ID", "USER_ID");

-- ----------------------------
-- Checks structure for table REPCAT$_USER_PARM_VALUES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" ADD CHECK ("TEMPLATE_PARAMETER_ID" IS NOT NULL);
ALTER TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" ADD CHECK ("USER_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REPCAT$_USER_PARM_VALUES
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" ADD PRIMARY KEY ("USER_PARAMETER_ID");

-- ----------------------------
-- Indexes structure for table Salespersons
-- ----------------------------

-- ----------------------------
-- Checks structure for table Salespersons
-- ----------------------------
ALTER TABLE "SYSTEM"."Salespersons" ADD CHECK ("id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Salespersons
-- ----------------------------
ALTER TABLE "SYSTEM"."Salespersons" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Checks structure for table SQLPLUS_PRODUCT_PROFILE
-- ----------------------------
ALTER TABLE "SYSTEM"."SQLPLUS_PRODUCT_PROFILE" ADD CHECK ("PRODUCT" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table Tradein_Vehicles
-- ----------------------------

-- ----------------------------
-- Checks structure for table Tradein_Vehicles
-- ----------------------------
ALTER TABLE "SYSTEM"."Tradein_Vehicles" ADD CHECK ("id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Tradein_Vehicles
-- ----------------------------
ALTER TABLE "SYSTEM"."Tradein_Vehicles" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Indexes structure for table Trademarks
-- ----------------------------

-- ----------------------------
-- Checks structure for table Trademarks
-- ----------------------------
ALTER TABLE "SYSTEM"."Trademarks" ADD CHECK ("id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Trademarks
-- ----------------------------
ALTER TABLE "SYSTEM"."Trademarks" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Indexes structure for table Vehicles
-- ----------------------------

-- ----------------------------
-- Triggers structure for table Vehicles
-- ----------------------------
CREATE OR REPLACE TRIGGER "SYSTEM"."historical_vehicles_vehicles" AFTER INSERT ON "SYSTEM"."Vehicles" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
BEGIN
	INSERT INTO "Historical_Vehicles" ("id", "date", "vehicle_id", "invoice_id", "Transaction") 
	VALUES (seq_historicalvehicles.nextval, SYSDATE, :new."id", null, 'New');
END;
-- ----------------------------
-- Checks structure for table Vehicles
-- ----------------------------
ALTER TABLE "SYSTEM"."Vehicles" ADD CHECK ("type" IN ('New','Used'));
ALTER TABLE "SYSTEM"."Vehicles" ADD CHECK ("id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Vehicles" ADD CHECK ("model_id" IS NOT NULL);
ALTER TABLE "SYSTEM"."Vehicles" ADD CHECK ("manufacturer_id" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table Vehicles
-- ----------------------------
ALTER TABLE "SYSTEM"."Vehicles" ADD PRIMARY KEY ("id");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS"
-- ----------------------------
ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS" ADD FOREIGN KEY ("AGENT_NAME") REFERENCES "SYSTEM"."AQ$_INTERNET_AGENTS" ("AGENT_NAME") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."DEF$_CALLDEST"
-- ----------------------------
ALTER TABLE "SYSTEM"."DEF$_CALLDEST" ADD FOREIGN KEY ("DBLINK", "CATCHUP") REFERENCES "SYSTEM"."DEF$_DESTINATION" ("DBLINK", "CATCHUP");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."Historical_Vehicles"
-- ----------------------------
ALTER TABLE "SYSTEM"."Historical_Vehicles" ADD FOREIGN KEY ("invoice_id") REFERENCES "SYSTEM"."Invoices" ("id") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."Historical_Vehicles" ADD FOREIGN KEY ("vehicle_id") REFERENCES "SYSTEM"."Vehicles" ("id") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."Invoice_Details"
-- ----------------------------
ALTER TABLE "SYSTEM"."Invoice_Details" ADD FOREIGN KEY ("invoice_id") REFERENCES "SYSTEM"."Invoices" ("id") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."Invoice_Details" ADD FOREIGN KEY ("option_id") REFERENCES "SYSTEM"."Options" ("id") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."Invoices"
-- ----------------------------
ALTER TABLE "SYSTEM"."Invoices" ADD FOREIGN KEY ("customer_id") REFERENCES "SYSTEM"."Customers" ("id") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."Invoices" ADD FOREIGN KEY ("salesperson_id") REFERENCES "SYSTEM"."Salespersons" ("id") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."Invoices" ADD FOREIGN KEY ("tradeinvehicle_id") REFERENCES "SYSTEM"."Vehicles" ("id") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."Invoices" ADD FOREIGN KEY ("vehicle_id") REFERENCES "SYSTEM"."Vehicles" ("id") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."Models"
-- ----------------------------
ALTER TABLE "SYSTEM"."Models" ADD FOREIGN KEY ("trademark_id") REFERENCES "SYSTEM"."Trademarks" ("id") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_AJG"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_BASETABLE"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE" ADD FOREIGN KEY ("QUERYID#") REFERENCES "SYSTEM"."MVIEW$_ADV_WORKLOAD" ("QUERYID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_CLIQUE"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_ELIGIBLE"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_EXCEPTIONS"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_EXCEPTIONS" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_FJG"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD FOREIGN KEY ("AJGID#") REFERENCES "SYSTEM"."MVIEW$_ADV_AJG" ("AJGID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_GC"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD FOREIGN KEY ("FJGID#") REFERENCES "SYSTEM"."MVIEW$_ADV_FJG" ("FJGID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_INFO"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_INFO" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_JOURNAL"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_LEVEL"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_OUTPUT"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."MVIEW$_ADV_ROLLUP"
-- ----------------------------
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD FOREIGN KEY ("RUNID#", "CLEVELID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LEVEL" ("RUNID#", "LEVELID#");
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD FOREIGN KEY ("RUNID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#");
ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD FOREIGN KEY ("RUNID#", "PLEVELID#") REFERENCES "SYSTEM"."MVIEW$_ADV_LEVEL" ("RUNID#", "LEVELID#");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_AUDIT_COLUMN"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD FOREIGN KEY ("ATTRIBUTE") REFERENCES "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ("ATTRIBUTE");
ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD FOREIGN KEY ("BASE_SNAME", "BASE_ONAME", "BASE_CONFLICT_TYPE_ID", "BASE_REFERENCE_NAME") REFERENCES "SYSTEM"."REPCAT$_CONFLICT" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_DDL"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_DDL" ADD FOREIGN KEY ("LOG_ID", "SOURCE", "ROLE", "MASTER") REFERENCES "SYSTEM"."REPCAT$_REPCATLOG" ("ID", "SOURCE", "ROLE", "MASTER") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ADD FOREIGN KEY ("GNAME", "GOWNER") REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ADD FOREIGN KEY ("GNAME", "FLAVOR_ID", "GOWNER") REFERENCES "SYSTEM"."REPCAT$_FLAVORS" ("GNAME", "FLAVOR_ID", "GOWNER") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_FLAVORS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_FLAVORS" ADD FOREIGN KEY ("GNAME", "GOWNER") REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_GENERATED"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_GENERATED" ADD FOREIGN KEY ("SNAME", "ONAME", "TYPE") REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."REPCAT$_GENERATED" ADD FOREIGN KEY ("BASE_SNAME", "BASE_ONAME", "BASE_TYPE") REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_GROUPED_COLUMN"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN" ADD FOREIGN KEY ("SNAME", "ONAME", "GROUP_NAME") REFERENCES "SYSTEM"."REPCAT$_COLUMN_GROUP" ("SNAME", "ONAME", "GROUP_NAME");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_INSTANTIATION_DDL"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL" ADD FOREIGN KEY ("REFRESH_TEMPLATE_ID") REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_KEY_COLUMNS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS" ADD FOREIGN KEY ("SNAME", "ONAME", "TYPE") REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_OBJECT_PARMS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" ADD FOREIGN KEY ("TEMPLATE_PARAMETER_ID") REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ("TEMPLATE_PARAMETER_ID");
ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" ADD FOREIGN KEY ("TEMPLATE_OBJECT_ID") REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ("TEMPLATE_OBJECT_ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_PARAMETER_COLUMN"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN" ADD FOREIGN KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO") REFERENCES "SYSTEM"."REPCAT$_RESOLUTION" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_PRIORITY"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY" ADD FOREIGN KEY ("PRIORITY_GROUP", "SNAME") REFERENCES "SYSTEM"."REPCAT$_PRIORITY_GROUP" ("PRIORITY_GROUP", "SNAME");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD FOREIGN KEY ("TEMPLATE_TYPE_ID") REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_TYPES" ("TEMPLATE_TYPE_ID");
ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD FOREIGN KEY ("TEMPLATE_STATUS_ID") REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_STATUS" ("TEMPLATE_STATUS_ID");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_REPCOLUMN"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPCOLUMN" ADD FOREIGN KEY ("SNAME", "ONAME", "TYPE") REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_REPGROUP_PRIVS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ADD FOREIGN KEY ("GNAME", "GOWNER") REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_REPOBJECT"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD FOREIGN KEY ("GNAME", "GOWNER") REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_REPPROP"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPPROP" ADD FOREIGN KEY ("SNAME", "ONAME", "TYPE") REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_REPSCHEMA"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_REPSCHEMA" ADD FOREIGN KEY ("DBLINK", "EXTENSION_ID") REFERENCES "SYSTEM"."DEF$_DESTINATION" ("DBLINK", "CATCHUP");
ALTER TABLE "SYSTEM"."REPCAT$_REPSCHEMA" ADD FOREIGN KEY ("SNAME", "GOWNER") REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_RESOLUTION"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION" ADD FOREIGN KEY ("CONFLICT_TYPE_ID", "METHOD_NAME") REFERENCES "SYSTEM"."REPCAT$_RESOLUTION_METHOD" ("CONFLICT_TYPE_ID", "METHOD_NAME");
ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION" ADD FOREIGN KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME") REFERENCES "SYSTEM"."REPCAT$_CONFLICT" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_SITE_OBJECTS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD FOREIGN KEY ("OBJECT_TYPE_ID") REFERENCES "SYSTEM"."REPCAT$_OBJECT_TYPES" ("OBJECT_TYPE_ID");
ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD FOREIGN KEY ("TEMPLATE_SITE_ID") REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_SITES" ("TEMPLATE_SITE_ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_SITES_NEW"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_SITES_NEW" ADD FOREIGN KEY ("EXTENSION_ID") REFERENCES "SYSTEM"."REPCAT$_EXTENSION" ("EXTENSION_ID") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."REPCAT$_SITES_NEW" ADD FOREIGN KEY ("GNAME", "GOWNER") REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD FOREIGN KEY ("REFRESH_TEMPLATE_ID") REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD FOREIGN KEY ("OBJECT_TYPE") REFERENCES "SYSTEM"."REPCAT$_OBJECT_TYPES" ("OBJECT_TYPE_ID");

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_TEMPLATE_PARMS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD FOREIGN KEY ("REFRESH_TEMPLATE_ID") REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ADD FOREIGN KEY ("REFRESH_TEMPLATE_ID") REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD FOREIGN KEY ("REFRESH_TEMPLATE_ID") REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."REPCAT$_USER_PARM_VALUES"
-- ----------------------------
ALTER TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" ADD FOREIGN KEY ("TEMPLATE_PARAMETER_ID") REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ("TEMPLATE_PARAMETER_ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."Tradein_Vehicles"
-- ----------------------------
ALTER TABLE "SYSTEM"."Tradein_Vehicles" ADD FOREIGN KEY ("vehicle_id") REFERENCES "SYSTEM"."Vehicles" ("id") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "SYSTEM"."Vehicles"
-- ----------------------------
ALTER TABLE "SYSTEM"."Vehicles" ADD FOREIGN KEY ("manufacturer_id") REFERENCES "SYSTEM"."Manufacturers" ("id") ON DELETE CASCADE;
ALTER TABLE "SYSTEM"."Vehicles" ADD FOREIGN KEY ("model_id") REFERENCES "SYSTEM"."Models" ("id") ON DELETE CASCADE;
